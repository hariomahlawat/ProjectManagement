-- Post-deployment cleanup script for proliferation Source columns.
-- Run the statements that match your database provider after applying the
-- 20251104120000_ForceNumericProliferationSource migration. Execute only the
-- block for your provider; each statement is idempotent and ignores rows that
-- are already stored as integers.

-- PostgreSQL --------------------------------------------------------------
-- UPDATE "ProliferationYearly" AS tgt
-- SET "Source" = CASE
--         WHEN src.trimmed ~ '^[0-9]+$' THEN src.trimmed::integer
--         WHEN src.canonical LIKE 'sdd%' THEN 1
--         WHEN src.canonical LIKE 'abw515%' OR src.canonical LIKE '515abw%' THEN 2
--         ELSE tgt."Source"
--     END
-- FROM (
--     SELECT "Id",
--            regexp_replace(CAST("Source" AS TEXT), '\s+', '', 'g') AS trimmed,
--            regexp_replace(lower(CAST("Source" AS TEXT)), '[^a-z0-9]', '', 'g') AS canonical
--     FROM "ProliferationYearly"
--     WHERE CAST("Source" AS TEXT) !~ '^[0-9]+$'
-- ) AS src
-- WHERE tgt."Id" = src."Id";
--
-- UPDATE "ProliferationGranular" AS tgt
-- SET "Source" = CASE
--         WHEN src.trimmed ~ '^[0-9]+$' THEN src.trimmed::integer
--         WHEN src.canonical LIKE 'sdd%' THEN 1
--         WHEN src.canonical LIKE 'abw515%' OR src.canonical LIKE '515abw%' THEN 2
--         ELSE tgt."Source"
--     END
-- FROM (
--     SELECT "Id",
--            regexp_replace(CAST("Source" AS TEXT), '\s+', '', 'g') AS trimmed,
--            regexp_replace(lower(CAST("Source" AS TEXT)), '[^a-z0-9]', '', 'g') AS canonical
--     FROM "ProliferationGranular"
--     WHERE CAST("Source" AS TEXT) !~ '^[0-9]+$'
-- ) AS src
-- WHERE tgt."Id" = src."Id";
--
-- UPDATE "ProliferationYearPreference" AS tgt
-- SET "Source" = CASE
--         WHEN src.trimmed ~ '^[0-9]+$' THEN src.trimmed::integer
--         WHEN src.canonical LIKE 'sdd%' THEN 1
--         WHEN src.canonical LIKE 'abw515%' OR src.canonical LIKE '515abw%' THEN 2
--         ELSE tgt."Source"
--     END
-- FROM (
--     SELECT "Id",
--            regexp_replace(CAST("Source" AS TEXT), '\s+', '', 'g') AS trimmed,
--            regexp_replace(lower(CAST("Source" AS TEXT)), '[^a-z0-9]', '', 'g') AS canonical
--     FROM "ProliferationYearPreference"
--     WHERE CAST("Source" AS TEXT) !~ '^[0-9]+$'
-- ) AS src
-- WHERE tgt."Id" = src."Id";

-- SQL Server -------------------------------------------------------------
-- UPDATE tgt
-- SET [Source] = CASE
--         WHEN TRY_CONVERT(int, tgt.[Source]) IS NOT NULL THEN TRY_CONVERT(int, tgt.[Source])
--         WHEN src.Canonical LIKE 'sdd%' THEN 1
--         WHEN src.Canonical LIKE 'abw515%' OR src.Canonical LIKE '515abw%' THEN 2
--         ELSE tgt.[Source]
--     END
-- FROM [ProliferationYearly] AS tgt
-- CROSS APPLY (
--     SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(CAST(tgt.[Source] AS nvarchar(64))), '-', ''), ' ', ''), '_', ''), '(', ''), ')', ''), '/', '') AS Canonical
-- ) AS src
-- WHERE TRY_CONVERT(int, tgt.[Source]) IS NULL;
--
-- UPDATE tgt
-- SET [Source] = CASE
--         WHEN TRY_CONVERT(int, tgt.[Source]) IS NOT NULL THEN TRY_CONVERT(int, tgt.[Source])
--         WHEN src.Canonical LIKE 'sdd%' THEN 1
--         WHEN src.Canonical LIKE 'abw515%' OR src.Canonical LIKE '515abw%' THEN 2
--         ELSE tgt.[Source]
--     END
-- FROM [ProliferationGranular] AS tgt
-- CROSS APPLY (
--     SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(CAST(tgt.[Source] AS nvarchar(64))), '-', ''), ' ', ''), '_', ''), '(', ''), ')', ''), '/', '') AS Canonical
-- ) AS src
-- WHERE TRY_CONVERT(int, tgt.[Source]) IS NULL;
--
-- UPDATE tgt
-- SET [Source] = CASE
--         WHEN TRY_CONVERT(int, tgt.[Source]) IS NOT NULL THEN TRY_CONVERT(int, tgt.[Source])
--         WHEN src.Canonical LIKE 'sdd%' THEN 1
--         WHEN src.Canonical LIKE 'abw515%' OR src.Canonical LIKE '515abw%' THEN 2
--         ELSE tgt.[Source]
--     END
-- FROM [ProliferationYearPreference] AS tgt
-- CROSS APPLY (
--     SELECT REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LOWER(CAST(tgt.[Source] AS nvarchar(64))), '-', ''), ' ', ''), '_', ''), '(', ''), ')', ''), '/', '') AS Canonical
-- ) AS src
-- WHERE TRY_CONVERT(int, tgt.[Source]) IS NULL;
