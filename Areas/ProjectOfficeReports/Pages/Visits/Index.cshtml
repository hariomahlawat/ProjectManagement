@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Visits.IndexModel
@using System.Linq
@{
    ViewData["Title"] = "Visits";
    string? fromValue = Model.From;
    DateOnly? parsedFrom = null;
    if (!string.IsNullOrWhiteSpace(fromValue) && DateOnly.TryParse(fromValue, out var parsed))
    {
        parsedFrom = parsed;
        fromValue = parsedFrom.Value.ToString("yyyy-MM-dd");
    }

    string? toValue = Model.To;
    DateOnly? parsedTo = null;
    if (!string.IsNullOrWhiteSpace(toValue) && DateOnly.TryParse(toValue, out var parsedEnd))
    {
        parsedTo = parsedEnd;
        toValue = parsedTo.Value.ToString("yyyy-MM-dd");
    }

    var totalVisits = Model.Items.Count;
    var totalPeople = Model.Items.Sum(item => item.Strength);
    var totalPhotos = Model.Items.Sum(item => item.PhotoCount);
    var averageTeamSize = Model.Items.Count > 0 ? Model.Items.Average(item => item.Strength) : 0;
    var distinctVisitors = Model.Items
        .Select(item => item.VisitorName)
        .Where(name => !string.IsNullOrWhiteSpace(name))
        .Distinct(StringComparer.OrdinalIgnoreCase)
        .Count();
    var latestVisitItem = Model.Items
        .OrderByDescending(item => item.DateOfVisit)
        .ThenByDescending(item => item.PhotoCount)
        .FirstOrDefault();

    var hasFilters = Model.VisitTypeId.HasValue || !string.IsNullOrWhiteSpace(Model.From) || !string.IsNullOrWhiteSpace(Model.To) || !string.IsNullOrWhiteSpace(Model.Q);
    string? selectedTypeLabel = null;
    if (Model.VisitTypeId.HasValue)
    {
        selectedTypeLabel = Model.VisitTypeOptions.FirstOrDefault(option => option.Value == Model.VisitTypeId.Value.ToString())?.Text;
    }

    var toastMessages = new List<VisitToastMessage>();
    if (TempData.TryGetValue("ToastMessage", out var toastMessageValue) && toastMessageValue is string toastMessage && !string.IsNullOrWhiteSpace(toastMessage))
    {
        toastMessages.Add(new VisitToastMessage(toastMessage, "success"));
    }

    if (TempData.TryGetValue("ToastError", out var toastErrorValue) && toastErrorValue is string toastError && !string.IsNullOrWhiteSpace(toastError))
    {
        toastMessages.Add(new VisitToastMessage(toastError, "danger"));
    }
}

<partial name="_ToastMessages" model="toastMessages" />

<div class="visit-shell visit-tracker">
    <nav aria-label="Breadcrumb" class="visit-breadcrumb">
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a asp-area="" asp-page="/Dashboard/Index">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">Visit tracker</li>
        </ol>
    </nav>

    <section class="visit-hero">
        <div class="visit-hero__content">
            <span class="visit-hero__eyebrow">Project office reports</span>
            <h1 class="visit-hero__title">SDD visits and outreach</h1>
            <p class="visit-hero__subtitle">Capture visits to SDD by civilian and military dignitaries and officer courses, and visits by SDD to academia and industry with photos, remarks, and directions.</p>
            <div class="visit-hero__meta">
                @if (latestVisitItem is not null)
                {
                    <span class="visit-hero__meta-item"><i class="bi bi-clock-history" aria-hidden="true"></i> Latest visit on @latestVisitItem.DateOfVisit.ToString("dd MMM yyyy") led by @latestVisitItem.VisitorName.</span>
                }
                else
                {
                    <span class="visit-hero__meta-item"><i class="bi bi-lightning" aria-hidden="true"></i> Log your first visit to unlock analytics and photo storytelling.</span>
                }
                @if (distinctVisitors > 0)
                {
                    <span class="visit-hero__meta-item"><i class="bi bi-people" aria-hidden="true"></i> @distinctVisitors distinct visitor@(distinctVisitors == 1 ? string.Empty : "s") recorded.</span>
                }
            </div>
            <div class="visit-hero__actions">
                @if (Model.CanManage)
                {
                    <a asp-page="New" class="btn btn-primary btn-lg d-inline-flex align-items-center gap-2">
                        <i class="bi bi-plus-circle" aria-hidden="true"></i>
                        <span>Record a visit</span>
                    </a>
                }
                @if (latestVisitItem is not null)
                {
                    <a asp-page="Details" asp-route-id="@latestVisitItem.Id" class="btn btn-outline-light d-inline-flex align-items-center gap-2">
                        <i class="bi bi-eye" aria-hidden="true"></i>
                        <span>Preview latest visit</span>
                    </a>
                }
                else
                {
                    <span class="btn btn-outline-light disabled d-inline-flex align-items-center gap-2" aria-disabled="true">
                        <i class="bi bi-eye" aria-hidden="true"></i>
                        <span>Preview latest visit</span>
                    </span>
                }
                @if (Model.CanManage)
                {
                    if (Model.Items.Count > 0)
                    {
                        <button type="button" class="btn btn-outline-light d-inline-flex align-items-center gap-2" data-bs-toggle="modal" data-bs-target="#exportVisitsModal">
                            <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                            <span>Export visits</span>
                        </button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-outline-light d-inline-flex align-items-center gap-2" disabled aria-disabled="true" title="Add at least one visit to enable export">
                            <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                            <span>Export visits</span>
                        </button>
                    }
                }
            </div>
        </div>
        <div class="visit-hero__stats">
            <div class="visit-stat-card">
                <span class="visit-stat-card__label">Visits in view</span>
                <span class="visit-stat-card__value">@totalVisits</span>
            </div>
            <div class="visit-stat-card">
                <span class="visit-stat-card__label">People engaged</span>
                <span class="visit-stat-card__value">@totalPeople</span>
            </div>
            <div class="visit-stat-card">
                <span class="visit-stat-card__label">Photos captured</span>
                <span class="visit-stat-card__value">@totalPhotos</span>
            </div>
            <div class="visit-stat-card">
                <span class="visit-stat-card__label">Average team size</span>
                <span class="visit-stat-card__value">@(Model.Items.Count > 0 ? averageTeamSize.ToString("0.0") : "-")</span>
            </div>
        </div>
    </section>

    <section class="visit-section">
        <header class="visit-section__header">
            <div>
                <h2 class="visit-section__title">Filter &amp; focus</h2>
                <p class="visit-section__subtitle">Pinpoint visits by type, time range, or narrative keywords to tailor your review.</p>
            </div>
            @if (hasFilters)
            {
                <a asp-page="Index" class="btn btn-link visit-section__reset"><i class="bi bi-x-circle" aria-hidden="true"></i> Clear filters</a>
            }
        </header>

        @if (hasFilters)
        {
            <div class="visit-filter-chips mb-3">
                @if (!string.IsNullOrWhiteSpace(selectedTypeLabel))
                {
                    <span class="visit-pill"><i class="bi bi-funnel" aria-hidden="true"></i> Type: @selectedTypeLabel</span>
                }
                @if (parsedFrom.HasValue)
                {
                    <span class="visit-pill"><i class="bi bi-calendar-event" aria-hidden="true"></i> From: @parsedFrom.Value.ToString("dd MMM yyyy")</span>
                }
                @if (parsedTo.HasValue)
                {
                    <span class="visit-pill"><i class="bi bi-calendar2-event" aria-hidden="true"></i> To: @parsedTo.Value.ToString("dd MMM yyyy")</span>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Q))
                {
                    <span class="visit-pill"><i class="bi bi-search" aria-hidden="true"></i> "@Model.Q"</span>
                }
            </div>
        }

        <form method="get" class="visit-filters">
            <div class="visit-filters__group">
                <label asp-for="VisitTypeId" class="form-label">Visit type</label>
                <select asp-for="VisitTypeId" asp-items="Model.VisitTypeOptions" class="form-select"></select>
            </div>
            <div class="visit-filters__group">
                <label class="form-label" for="from-date">From</label>
                <input id="from-date" name="From" type="date" value="@(fromValue ?? string.Empty)" class="form-control" />
            </div>
            <div class="visit-filters__group">
                <label class="form-label" for="to-date">To</label>
                <input id="to-date" name="To" type="date" value="@(toValue ?? string.Empty)" class="form-control" />
            </div>
            <div class="visit-filters__group visit-filters__group--wide">
                <label class="form-label" for="search-filter">Visitor or remarks</label>
                <input id="search-filter" name="Q" value="@Model.Q" class="form-control" placeholder="Search visitor or remarks" />
            </div>
            <div class="visit-filters__actions">
                <button type="submit" class="btn btn-primary d-inline-flex align-items-center gap-2">
                    <i class="bi bi-funnel" aria-hidden="true"></i>
                    <span>Apply filters</span>
                </button>
                <a asp-page="Index" class="btn btn-outline-secondary">Reset</a>
            </div>
        </form>
    </section>

    <section class="visit-section">
        <header class="visit-section__header">
            <div>
                <h2 class="visit-section__title">Visit log</h2>
                <p class="visit-section__subtitle">A chronological snapshot of every engagement and the media captured on-site.</p>
            </div>
        </header>

        @if (Model.Items.Count == 0)
        {
            <div class="visit-section__body">
                <div class="visit-empty visit-empty--subtle text-center py-5">
                    <div class="visit-empty__icon" aria-hidden="true"><i class="bi bi-emoji-smile"></i></div>
                    <h2 class="visit-empty__title">No visits @((hasFilters ? "match your filters" : "recorded yet"))</h2>
                    <p class="visit-empty__subtitle">@((hasFilters ? "Try adjusting the filters to widen your search." : "Start logging field visits to build your oversight history."))</p>
                </div>
            </div>
        }
        else
        {
            <div class="visit-table-card">
                <div class="table-responsive">
                    <table class="table align-middle visit-table mb-0">
                        <thead>
                            <tr>
                                <th scope="col">Date</th>
                                <th scope="col">Visit type</th>
                                <th scope="col">Visitor</th>
                                <th scope="col">Strength</th>
                                <th scope="col">Photos</th>
                                <th scope="col" class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    <div class="visit-table__primary">@item.DateOfVisit.ToString("dd MMM yyyy")</div>
                                    <div class="visit-table__meta">@item.DateOfVisit.ToString("dddd")</div>
                                </td>
                                <td>
                                    <div class="visit-table__primary">@item.VisitTypeName</div>
                                    @if (!item.VisitTypeIsActive)
                                    {
                                        <span class="visit-pill visit-pill--warning">Type inactive</span>
                                    }
                                </td>
                                <td>
                                    <div class="visit-table__primary">@item.VisitorName</div>
                                </td>
                                <td>
                                    <div class="visit-metric">
                                        <span class="visit-metric__value">@item.Strength</span>
                                        <span class="visit-metric__label">People</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="visit-metric visit-metric--subtle">
                                        <span class="visit-metric__value">@item.PhotoCount</span>
                                        <span class="visit-metric__label">Photos</span>
                                    </div>
                                </td>
                                <td class="text-end">
                                    <div class="visit-row-actions">
                                        <a asp-page="Details" asp-route-id="@item.Id" class="btn btn-outline-secondary btn-sm">View</a>
                                        @if (Model.CanManage)
                                        {
                                            <a asp-page="Edit" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">Edit</a>
                                            <form method="post" asp-page-handler="Delete" class="visit-row-actions__form" data-visits-disable-on-submit data-confirm="Delete this visit?">
                                                <input type="hidden" name="id" value="@item.Id" />
                                                <input type="hidden" name="rowVersion" value="@Convert.ToBase64String(item.RowVersion)" />
                                                <input type="hidden" name="VisitTypeId" value="@(Model.VisitTypeId.HasValue ? Model.VisitTypeId.ToString() : string.Empty)" />
                                                <input type="hidden" name="From" value="@Model.From" />
                                                <input type="hidden" name="To" value="@Model.To" />
                                                <input type="hidden" name="Q" value="@Model.Q" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm" data-visits-busy-label="Deleting…">Delete</button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </section>
</div>

<div class="modal fade" id="exportVisitsModal" tabindex="-1" aria-labelledby="exportVisitsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <form method="post" asp-page-handler="Export" class="needs-validation" novalidate>
                @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exportVisitsModalLabel">Export visits to Excel</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="text-muted mb-3">Choose the filters for your offline report. The export includes every visit that matches the criteria below.</p>
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label" for="export-visit-type">Visit type</label>
                            <select id="export-visit-type" name="VisitTypeId" class="form-select">
                                @foreach (var option in Model.VisitTypeOptions)
                                {
                                    <option value="@option.Value" selected="@option.Selected">@option.Text</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" for="export-search">Visitor or remarks</label>
                            <input id="export-search" name="Q" value="@Model.Q" class="form-control" placeholder="Search visitor or remarks" />
                            <div class="form-text">Leave blank to include every visitor.</div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" for="export-from-date">From</label>
                            <input id="export-from-date" name="From" type="date" value="@(fromValue ?? string.Empty)" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" for="export-to-date">To</label>
                            <input id="export-to-date" name="To" type="date" value="@(toValue ?? string.Empty)" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary d-inline-flex align-items-center gap-2">
                        <i class="bi bi-download" aria-hidden="true"></i>
                        <span>Export Excel</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script type="module" src="~/js/pages/project-office-reports/visits.js" asp-append-version="true"></script>
}
