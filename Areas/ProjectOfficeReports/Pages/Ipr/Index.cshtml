@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Ipr.IndexModel
@using System.Globalization
@using ProjectManagement.Infrastructure.Data
@using ProjectManagement.Utilities
@{
    ViewData["Title"] = "Intellectual property tracker";

    var toastMessage = TempData["ToastMessage"] as string;
    var toastError = TempData["ToastError"] as string;

    var istZone = TimeZoneHelper.GetIst();

    string TypeLabel(IprType type) => type switch
    {
        IprType.Patent => "Patent",
        IprType.Copyright => "Copyright",
        _ => type.ToString()
    };

    string StatusLabel(IprStatus status) => status switch
    {
        IprStatus.FilingUnderProcess => "Filing under process",
        IprStatus.Filed => "Filed",
        IprStatus.Granted => "Granted",
        IprStatus.Rejected => "Rejected",
        IprStatus.Withdrawn => "Withdrawn",
        _ => status.ToString()
    };

    string FormatFiledDate(DateTimeOffset? value)
    {
        if (!value.HasValue)
        {
            return "â€”";
        }

        var converted = TimeZoneInfo.ConvertTimeFromUtc(value.Value.UtcDateTime, istZone);
        return converted.ToString("dd MMM yyyy", CultureInfo.InvariantCulture);
    }

    var groupedRecords = Model.Records
        .GroupBy(r => r.Type)
        .OrderBy(g => g.Key)
        .ToList();

    var isCreateMode = string.Equals(Model.Mode, "create", StringComparison.OrdinalIgnoreCase);
    var isEditMode = string.Equals(Model.Mode, "edit", StringComparison.OrdinalIgnoreCase);
}

<div class="container-fluid py-4">
    <div class="d-flex flex-column flex-lg-row justify-content-between align-items-lg-center gap-3 mb-4">
        <div>
            <p class="text-uppercase text-muted small mb-1">Project office reports</p>
            <h1 class="h2 mb-1">Intellectual property tracker</h1>
            <p class="text-muted mb-0">Monitor patents and copyrights across projects with quick actions for updates.</p>
        </div>
        <div class="d-flex flex-wrap justify-content-lg-end gap-2">
            <button type="button"
                    class="btn btn-outline-secondary d-inline-flex align-items-center gap-2"
                    data-bs-toggle="modal"
                    data-bs-target="#iprFilterModal"
                    data-ipr-filter-trigger
                    aria-controls="iprFilterModal"
                    aria-haspopup="dialog"
                    aria-expanded="false">
                <i class="bi bi-funnel" aria-hidden="true"></i>
                <span>Filters</span>
            </button>
            <a class="btn btn-outline-secondary d-inline-flex align-items-center gap-2"
               asp-page-handler="Export"
               asp-all-route-data="@Model.GetRouteValuesForLinks(includeModeAndId: false)">
                <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                <span>Export records</span>
            </a>
            @if (Model.CanEdit)
            {
                <a class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                   asp-page="./Manage">
                    <i class="bi bi-gear" aria-hidden="true"></i>
                    <span>Manage IPR</span>
                </a>
                <a class="btn btn-primary d-inline-flex align-items-center gap-2"
                   asp-page="./Manage"
                   asp-route-Query="@Model.Query">
                    <i class="bi bi-plus-circle" aria-hidden="true"></i>
                    <span>Add IPR record</span>
                </a>
            }
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(toastMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @toastMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrWhiteSpace(toastError))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @toastError
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row row-cols-2 row-cols-md-3 row-cols-lg-6 g-3 mb-4">
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Total</p>
                    <div class="fs-4 fw-semibold">@Model.Kpis.Total</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Filing under process</p>
                    <div class="fs-4 fw-semibold text-primary">@Model.Kpis.FilingUnderProcess</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Filed</p>
                    <div class="fs-4 fw-semibold text-info">@Model.Kpis.Filed</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Granted</p>
                    <div class="fs-4 fw-semibold text-success">@Model.Kpis.Granted</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Rejected</p>
                    <div class="fs-4 fw-semibold text-danger">@Model.Kpis.Rejected</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Withdrawn</p>
                    <div class="fs-4 fw-semibold text-secondary">@Model.Kpis.Withdrawn</div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade"
         id="iprFilterModal"
         tabindex="-1"
         aria-labelledby="iprFilterModalLabel"
         aria-hidden="true"
         data-bs-focus="true">
        <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen-sm-down">
            <div class="modal-content">
                <form method="get" class="w-100" novalidate>
                    <div class="modal-header">
                        <div>
                            <h2 class="modal-title h5 mb-1" id="iprFilterModalLabel">Filters</h2>
                            <p class="text-muted small mb-0">Refine the records shown in the tracker.</p>
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close filters"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <div class="col-12">
                                <label asp-for="Query" class="form-label">Search</label>
                                <input asp-for="Query"
                                       class="form-control"
                                       type="search"
                                       placeholder="Search filing number or title"
                                       data-ipr-filter-initial-focus />
                            </div>
                            <div class="col-12 col-lg-6">
                                <label class="form-label" for="typesSelect">Types</label>
                                <select id="typesSelect"
                                        asp-for="Types"
                                        asp-items="Model.TypeOptions"
                                        class="form-select"
                                        multiple
                                        size="5"
                                        aria-describedby="typesHelp"></select>
                                <div class="form-text" id="typesHelp">Hold Ctrl (or Cmd) to select multiple types.</div>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label class="form-label" for="statusSelect">Statuses</label>
                                <select id="statusSelect"
                                        asp-for="Statuses"
                                        asp-items="Model.StatusOptions"
                                        class="form-select"
                                        multiple
                                        size="5"
                                        aria-describedby="statusHelp"></select>
                                <div class="form-text" id="statusHelp">Hold Ctrl (or Cmd) to select multiple statuses.</div>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label asp-for="ProjectId" class="form-label">Project</label>
                                <select asp-for="ProjectId" asp-items="Model.ProjectOptions" class="form-select"></select>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label asp-for="Year" class="form-label">Filed year</label>
                                <select asp-for="Year" asp-items="Model.YearOptions" class="form-select"></select>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label asp-for="PageSize" class="form-label">Rows per page</label>
                                <select asp-for="PageSize" asp-items="Model.PageSizeOptions" class="form-select"></select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer d-flex flex-column flex-sm-row gap-2 justify-content-between">
                        <input type="hidden" name="page" value="1" />
                        <a asp-page="./Index" class="btn btn-outline-secondary flex-grow-1 flex-sm-grow-0">Reset</a>
                        <button type="submit" class="btn btn-primary flex-grow-1 flex-sm-grow-0">Apply filters</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @if (Model.CanEdit)
    {
        <div class="offcanvas offcanvas-end"
             tabindex="-1"
             id="iprRecordOffcanvas"
             aria-labelledby="iprRecordOffcanvasLabel"
             aria-hidden="true"
             data-ipr-mode="@(Model.Mode ?? string.Empty)"
             data-ipr-has-form="@(
                 string.Equals(Model.Mode, "create", StringComparison.OrdinalIgnoreCase)
                 || string.Equals(Model.Mode, "edit", StringComparison.OrdinalIgnoreCase)
                     ? "true"
                     : "false")">
            <div class="offcanvas-header">
                <div>
                    <h2 class="offcanvas-title h5 mb-1" id="iprRecordOffcanvasLabel">
                        @(isCreateMode ? "Create IPR record" : isEditMode ? "Edit IPR record" : "IPR record")
                    </h2>
                    <p class="text-muted small mb-0">
                        @(isCreateMode || isEditMode
                            ? "Capture filing information, track status, and associate the record with a project."
                            : "Use the available actions to add or manage records.")
                    </p>
                </div>
                <a class="btn-close text-reset"
                   asp-page="./Index"
                   asp-all-route-data="@Model.GetRouteValuesForLinks(includeModeAndId: false)"
                   data-bs-dismiss="offcanvas"
                   aria-label="Close"></a>
            </div>
            <div class="offcanvas-body">
                <partial name="_RecordFormPartial" model="Model" />
            </div>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-2">
            <div>
                <h2 class="h5 mb-1">IPR records</h2>
                <p class="text-muted mb-0">Showing @Model.TotalCount @(Model.TotalCount == 1 ? "record" : "records").</p>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.TotalCount == 0)
            {
                <div class="p-4 text-center text-muted">
                    No records match your filters.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Type</th>
                                <th scope="col">Filing number</th>
                                <th scope="col">Title</th>
                                <th scope="col">Status</th>
                                <th scope="col">Filed on</th>
                                <th scope="col">Project</th>
                                <th scope="col" class="text-center">Attachments</th>
                                @if (Model.CanEdit)
                                {
                                    <th scope="col" class="text-end">Actions</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var group in groupedRecords)
                            {
                                var firstRow = true;
                                var rowSpan = group.Count();
                                foreach (var record in group)
                                {
                                    <tr>
                                        @if (firstRow)
                                        {
                                            <th scope="row" rowspan="@rowSpan" class="text-nowrap">@TypeLabel(group.Key)</th>
                                        }
                                        <td class="text-nowrap">@record.FilingNumber</td>
                                        <td>@(string.IsNullOrWhiteSpace(record.Title) ? "â€”" : record.Title)</td>
                                        <td class="text-nowrap">@StatusLabel(record.Status)</td>
                                        <td class="text-nowrap">@FormatFiledDate(record.FiledAtUtc)</td>
                                        <td>@(string.IsNullOrWhiteSpace(record.ProjectName) ? "â€”" : record.ProjectName)</td>
                                        <td class="text-center">@record.AttachmentCount</td>
                                        @if (Model.CanEdit)
                                        {
                                            <td class="text-end">
                                                <a class="btn btn-outline-primary btn-sm"
                                                   asp-page="./Index"
                                                   asp-all-route-data="@Model.GetRouteValuesForLinks(new { mode = "edit", id = record.Id }, includeModeAndId: false)"
                                                   data-ipr-offcanvas-trigger="edit"
                                                   data-ipr-record-id="@record.Id"
                                                   aria-controls="iprRecordOffcanvas"
                                                   aria-expanded="@(isEditMode && Model.Id.HasValue && Model.Id.Value == record.Id ? "true" : "false")">
                                                    Manage
                                                </a>
                                            </td>
                                        }
                                    </tr>
                                    firstRow = false;
                                }
                            }
                        </tbody>
                    </table>
                </div>

                var firstItem = ((Model.PageNumber - 1) * Model.PageSize) + 1;
                if (firstItem > Model.TotalCount)
                {
                    firstItem = Model.TotalCount;
                }
                var lastItem = Math.Min(Model.TotalCount, Model.PageNumber * Model.PageSize);

                <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3 px-4 py-3">
                    <div class="text-muted">
                        Showing
                        @if (Model.TotalCount == 0)
                        {
                            <span>0</span>
                        }
                        else
                        {
                            <span>@firstItem</span>
                            <span>â€“</span>
                            <span>@lastItem</span>
                        }
                        of <strong>@Model.TotalCount</strong>
                    </div>
                    @if (Model.TotalPages > 1)
                    {
                        var maxPages = 5;
                        var startPage = Math.Max(1, Model.PageNumber - 2);
                        var endPage = Math.Min(Model.TotalPages, startPage + maxPages - 1);
                        startPage = Math.Max(1, endPage - maxPages + 1);
                        var baseRoutes = Model.GetRouteValuesForLinks(new { pageSize = Model.PageSize }, includePage: false, includeModeAndId: false);

                        <nav aria-label="IPR pagination">
                            <ul class="pagination pagination-sm mb-0">
                                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : string.Empty)">
                                    <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
                                </li>
                                @for (var pageNumber = startPage; pageNumber <= endPage; pageNumber++)
                                {
                                    <li class="page-item @(pageNumber == Model.PageNumber ? "active" : string.Empty)">
                                        <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(pageNumber)">@pageNumber</a>
                                    </li>
                                }
                                <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : string.Empty)">
                                    <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(Model.PageNumber + 1)">Next</a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="~/Pages/Shared/_ValidationScriptsPartial.cshtml" />
    <script src="~/js/project-office-reports/ipr/index.js" asp-append-version="true"></script>
}
