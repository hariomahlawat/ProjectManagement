@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Ipr.IndexModel
@using System.Globalization
@using ProjectManagement.Infrastructure.Data
@using ProjectManagement.Utilities
@{
    ViewData["Title"] = "Intellectual property tracker";

    var toastMessage = TempData["ToastMessage"] as string;
    var toastError = TempData["ToastError"] as string;

    var istZone = TimeZoneHelper.GetIst();

    string TypeLabel(IprType type) => type switch
    {
        IprType.Patent => "Patent",
        IprType.Copyright => "Copyright",
        IprType.Trademark => "Trademark",
        IprType.Design => "Design",
        IprType.TradeSecret => "Trade secret",
        _ => type.ToString()
    };

    string StatusLabel(IprStatus status) => status switch
    {
        IprStatus.Draft => "Draft",
        IprStatus.Filed => "Filed",
        IprStatus.Granted => "Granted",
        IprStatus.Rejected => "Rejected",
        IprStatus.Expired => "Expired",
        _ => status.ToString()
    };

    string FormatFiledDate(DateTimeOffset? value)
    {
        if (!value.HasValue)
        {
            return "â€”";
        }

        var converted = TimeZoneInfo.ConvertTimeFromUtc(value.Value.UtcDateTime, istZone);
        return converted.ToString("dd MMM yyyy", CultureInfo.InvariantCulture);
    }

    string FormatAttachmentTimestamp(DateTimeOffset value)
    {
        var converted = TimeZoneInfo.ConvertTimeFromUtc(value.UtcDateTime, istZone);
        return converted.ToString("dd MMM yyyy 'at' HH:mm 'IST'", CultureInfo.InvariantCulture);
    }

    var groupedRecords = Model.Records
        .GroupBy(r => r.Type)
        .OrderBy(g => g.Key)
        .ToList();

    var isCreateMode = string.Equals(Model.Mode, "create", StringComparison.OrdinalIgnoreCase);
    var isEditMode = string.Equals(Model.Mode, "edit", StringComparison.OrdinalIgnoreCase);
}

<div class="container-fluid py-4">
    <div class="d-flex flex-column flex-lg-row justify-content-between align-items-lg-center gap-3 mb-4">
        <div>
            <p class="text-uppercase text-muted small mb-1">Project office reports</p>
            <h1 class="h2 mb-1">Intellectual property tracker</h1>
            <p class="text-muted mb-0">Monitor patents, copyrights, and trademarks across projects with quick actions for updates.</p>
        </div>
        @if (Model.CanEdit)
        {
            <a class="btn btn-primary" asp-page="./Index" asp-all-route-data="@Model.GetRouteValues(new { mode = "create" }, includePage: true, includeModeAndId: false)">
                <i class="bi bi-plus-circle me-2" aria-hidden="true"></i>
                <span>Add IPR record</span>
            </a>
        }
    </div>

    @if (!string.IsNullOrWhiteSpace(toastMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @toastMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrWhiteSpace(toastError))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @toastError
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row row-cols-2 row-cols-md-3 row-cols-lg-6 g-3 mb-4">
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Total</p>
                    <div class="fs-4 fw-semibold">@Model.Kpis.Total</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Draft</p>
                    <div class="fs-4 fw-semibold text-primary">@Model.Kpis.Draft</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Filed</p>
                    <div class="fs-4 fw-semibold text-info">@Model.Kpis.Filed</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Granted</p>
                    <div class="fs-4 fw-semibold text-success">@Model.Kpis.Granted</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Rejected</p>
                    <div class="fs-4 fw-semibold text-danger">@Model.Kpis.Rejected</div>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card shadow-sm h-100">
                <div class="card-body text-center">
                    <p class="text-muted text-uppercase small mb-1">Expired</p>
                    <div class="fs-4 fw-semibold text-secondary">@Model.Kpis.Expired</div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <form method="get" class="row g-3 align-items-end">
                <div class="col-12 col-lg-3">
                    <label asp-for="Query" class="form-label">Search</label>
                    <input asp-for="Query" class="form-control" type="search" placeholder="Search filing number or title" />
                </div>
                <div class="col-12 col-lg-3">
                    <label class="form-label" for="typesSelect">Types</label>
                    <select id="typesSelect" asp-for="Types" asp-items="Model.TypeOptions" class="form-select" multiple size="5"></select>
                    <div class="form-text">Hold Ctrl (or Cmd) to select multiple types.</div>
                </div>
                <div class="col-12 col-lg-3">
                    <label class="form-label" for="statusSelect">Statuses</label>
                    <select id="statusSelect" asp-for="Statuses" asp-items="Model.StatusOptions" class="form-select" multiple size="5"></select>
                    <div class="form-text">Hold Ctrl (or Cmd) to select multiple statuses.</div>
                </div>
                <div class="col-12 col-lg-3">
                    <label asp-for="ProjectId" class="form-label">Project</label>
                    <select asp-for="ProjectId" asp-items="Model.ProjectOptions" class="form-select"></select>
                </div>
                <div class="col-12 col-lg-3">
                    <label asp-for="Year" class="form-label">Filed year</label>
                    <select asp-for="Year" asp-items="Model.YearOptions" class="form-select"></select>
                </div>
                <div class="col-12 col-lg-3">
                    <label asp-for="PageSize" class="form-label">Rows per page</label>
                    <select asp-for="PageSize" asp-items="Model.PageSizeOptions" class="form-select"></select>
                </div>
                <input type="hidden" name="page" value="1" />
                <div class="col-12 col-lg-6 d-flex gap-2">
                    <button type="submit" class="btn btn-primary">Apply filters</button>
                    <a asp-page="./Index" class="btn btn-outline-secondary">Reset</a>
                </div>
            </form>
        </div>
    </div>

    @if (Model.CanEdit && (isCreateMode || isEditMode))
    {
        <div class="card shadow-sm mb-4">
            <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-2">
                <div>
                    <h2 class="h5 mb-1">@(isCreateMode ? "Create IPR record" : "Edit IPR record")</h2>
                    <p class="text-muted mb-0">Capture filing information, track status, and associate the record with a project.</p>
                </div>
                <div class="d-flex gap-2">
                    <a class="btn btn-outline-secondary" asp-page="./Index" asp-all-route-data="@Model.GetRouteValues(includeModeAndId: false)">
                        Cancel
                    </a>
                </div>
            </div>
            <div class="card-body">
                @if (isCreateMode)
                {
                    <form method="post" asp-page-handler="Create" asp-all-route-data="@Model.GetRouteValues(new { mode = "create" }, includeModeAndId: false)" class="row g-3" novalidate>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="col-12 col-md-6">
                            <label asp-for="Input.FilingNumber" class="form-label"></label>
                            <input asp-for="Input.FilingNumber" class="form-control" />
                            <span asp-validation-for="Input.FilingNumber" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6">
                            <label asp-for="Input.Title" class="form-label"></label>
                            <input asp-for="Input.Title" class="form-control" />
                            <span asp-validation-for="Input.Title" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Input.Type" class="form-label"></label>
                            <select asp-for="Input.Type" asp-items="Model.TypeFormOptions" class="form-select"></select>
                            <span asp-validation-for="Input.Type" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Input.Status" class="form-label"></label>
                            <select asp-for="Input.Status" asp-items="Model.StatusFormOptions" class="form-select"></select>
                            <span asp-validation-for="Input.Status" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Input.FiledOn" class="form-label"></label>
                            <input asp-for="Input.FiledOn" class="form-control" type="date" />
                            <span asp-validation-for="Input.FiledOn" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6">
                            <label asp-for="Input.ProjectId" class="form-label"></label>
                            <select asp-for="Input.ProjectId" asp-items="Model.ProjectFormOptions" class="form-select"></select>
                            <span asp-validation-for="Input.ProjectId" class="text-danger"></span>
                        </div>
                        <div class="col-12">
                            <label asp-for="Input.Notes" class="form-label"></label>
                            <textarea asp-for="Input.Notes" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Input.Notes" class="text-danger"></span>
                        </div>
                        <div class="col-12 d-flex gap-2">
                            <button type="submit" class="btn btn-primary">Create record</button>
                        </div>
                    </form>
                }
                else if (isEditMode)
                {
                    <form method="post" asp-page-handler="Edit" asp-all-route-data="@Model.GetRouteValues(new { mode = "edit", id = Model.Input.Id }, includeModeAndId: false)" class="row g-3" novalidate>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Input.Id" />
                        <input type="hidden" asp-for="Input.RowVersion" />
                        <div class="col-12 col-md-6">
                            <label asp-for="Input.FilingNumber" class="form-label"></label>
                            <input asp-for="Input.FilingNumber" class="form-control" />
                            <span asp-validation-for="Input.FilingNumber" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6">
                            <label asp-for="Input.Title" class="form-label"></label>
                            <input asp-for="Input.Title" class="form-control" />
                            <span asp-validation-for="Input.Title" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Input.Type" class="form-label"></label>
                            <select asp-for="Input.Type" asp-items="Model.TypeFormOptions" class="form-select"></select>
                            <span asp-validation-for="Input.Type" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Input.Status" class="form-label"></label>
                            <select asp-for="Input.Status" asp-items="Model.StatusFormOptions" class="form-select"></select>
                            <span asp-validation-for="Input.Status" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-4">
                            <label asp-for="Input.FiledOn" class="form-label"></label>
                            <input asp-for="Input.FiledOn" class="form-control" type="date" />
                            <span asp-validation-for="Input.FiledOn" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6">
                            <label asp-for="Input.ProjectId" class="form-label"></label>
                            <select asp-for="Input.ProjectId" asp-items="Model.ProjectFormOptions" class="form-select"></select>
                            <span asp-validation-for="Input.ProjectId" class="text-danger"></span>
                        </div>
                        <div class="col-12">
                            <label asp-for="Input.Notes" class="form-label"></label>
                            <textarea asp-for="Input.Notes" class="form-control" rows="4"></textarea>
                            <span asp-validation-for="Input.Notes" class="text-danger"></span>
                        </div>
                        <div class="col-12 d-flex gap-2">
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </div>
                    </form>

                    <hr class="my-4" />

                    <section>
                        <header class="d-flex justify-content-between align-items-center mb-3">
                            <div>
                                <h3 class="h6 mb-1">Attachments</h3>
                                <p class="text-muted mb-0">Upload supporting documents or remove outdated files.</p>
                            </div>
                        </header>

                        <div class="mb-4">
                            @if (Model.Attachments.Count == 0)
                            {
                                <p class="text-muted mb-0">No attachments yet.</p>
                            }
                            else
                            {
                                <ul class="list-group">
                                    @foreach (var attachment in Model.Attachments)
                                    {
                                        <li class="list-group-item d-flex flex-column flex-md-row align-items-md-center gap-2">
                                            <div class="flex-fill">
                                                <div class="fw-semibold">
                                                    <a asp-page="Download" asp-route-iprRecordId="@Model.Input.Id" asp-route-attachmentId="@attachment.Id">
                                                        @attachment.FileName
                                                    </a>
                                                </div>
                                                <div class="text-muted small">
                                                    @Model.FormatFileSize(attachment.FileSize)
                                                    &middot; Uploaded by @attachment.UploadedBy on @FormatAttachmentTimestamp(attachment.UploadedAtUtc)
                                                </div>
                                            </div>
                                            <div class="d-flex gap-2">
                                                <form method="post" asp-page-handler="RemoveAttachment" asp-all-route-data="@Model.GetRouteValues(new { mode = "edit", id = Model.Input.Id }, includeModeAndId: false)">
                                                    <input type="hidden" name="RemoveAttachment.AttachmentId" value="@attachment.Id" />
                                                    <input type="hidden" name="RemoveAttachment.RecordId" value="@Model.Input.Id" />
                                                    <input type="hidden" name="RemoveAttachment.RowVersion" value="@attachment.RowVersion" />
                                                    <button type="submit" class="btn btn-outline-danger btn-sm">
                                                        <i class="bi bi-trash" aria-hidden="true"></i>
                                                        <span class="visually-hidden">Remove attachment</span>
                                                    </button>
                                                </form>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            }
                        </div>

                        <form method="post" asp-page-handler="Attach" asp-all-route-data="@Model.GetRouteValues(new { mode = "edit", id = Model.Input.Id }, includeModeAndId: false)" enctype="multipart/form-data" class="row g-3 align-items-end" novalidate>
                            <input type="hidden" asp-for="UploadInput.RecordId" />
                            <div class="col-12 col-md-8">
                                <label asp-for="UploadInput.File" class="form-label">Add attachment</label>
                                <input asp-for="UploadInput.File" class="form-control" type="file" />
                                <span asp-validation-for="UploadInput.File" class="text-danger"></span>
                            </div>
                            <div class="col-12 col-md-4">
                                <button type="submit" class="btn btn-outline-primary w-100">Upload</button>
                            </div>
                        </form>

                        <form method="post" asp-page-handler="Delete" asp-all-route-data="@Model.GetRouteValues(includeModeAndId: false)" class="mt-4">
                            <input type="hidden" asp-for="DeleteRequest.Id" />
                            <input type="hidden" asp-for="DeleteRequest.RowVersion" />
                            <button type="submit" class="btn btn-outline-danger" onclick="return confirm('This will permanently delete the IPR record and its attachments. Continue?');">
                                Delete record
                            </button>
                        </form>
                    </section>
                }
            </div>
        </div>
    }

    <div class="card shadow-sm">
        <div class="card-header d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-2">
            <div>
                <h2 class="h5 mb-1">IPR records</h2>
                <p class="text-muted mb-0">Showing @Model.TotalCount @(Model.TotalCount == 1 ? "record" : "records").</p>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.TotalCount == 0)
            {
                <div class="p-4 text-center text-muted">
                    No records match your filters.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Type</th>
                                <th scope="col">Filing number</th>
                                <th scope="col">Title</th>
                                <th scope="col">Status</th>
                                <th scope="col">Filed on</th>
                                <th scope="col">Project</th>
                                <th scope="col" class="text-center">Attachments</th>
                                @if (Model.CanEdit)
                                {
                                    <th scope="col" class="text-end">Actions</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var group in groupedRecords)
                            {
                                var firstRow = true;
                                var rowSpan = group.Count();
                                foreach (var record in group)
                                {
                                    <tr>
                                        @if (firstRow)
                                        {
                                            <th scope="row" rowspan="@rowSpan" class="text-nowrap">@TypeLabel(group.Key)</th>
                                        }
                                        <td class="text-nowrap">@record.FilingNumber</td>
                                        <td>@(string.IsNullOrWhiteSpace(record.Title) ? "â€”" : record.Title)</td>
                                        <td class="text-nowrap">@StatusLabel(record.Status)</td>
                                        <td class="text-nowrap">@FormatFiledDate(record.FiledAtUtc)</td>
                                        <td>@(string.IsNullOrWhiteSpace(record.ProjectName) ? "â€”" : record.ProjectName)</td>
                                        <td class="text-center">@record.AttachmentCount</td>
                                        @if (Model.CanEdit)
                                        {
                                            <td class="text-end">
                                                <a class="btn btn-outline-primary btn-sm" asp-page="./Index" asp-all-route-data="@Model.GetRouteValues(new { mode = "edit", id = record.Id }, includeModeAndId: false)">
                                                    Manage
                                                </a>
                                            </td>
                                        }
                                    </tr>
                                    firstRow = false;
                                }
                            }
                        </tbody>
                    </table>
                </div>

                var firstItem = ((Model.PageNumber - 1) * Model.PageSize) + 1;
                if (firstItem > Model.TotalCount)
                {
                    firstItem = Model.TotalCount;
                }
                var lastItem = Math.Min(Model.TotalCount, Model.PageNumber * Model.PageSize);

                <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3 px-4 py-3">
                    <div class="text-muted">
                        Showing
                        @if (Model.TotalCount == 0)
                        {
                            <span>0</span>
                        }
                        else
                        {
                            <span>@firstItem</span>
                            <span>â€“</span>
                            <span>@lastItem</span>
                        }
                        of <strong>@Model.TotalCount</strong>
                    </div>
                    @if (Model.TotalPages > 1)
                    {
                        var maxPages = 5;
                        var startPage = Math.Max(1, Model.PageNumber - 2);
                        var endPage = Math.Min(Model.TotalPages, startPage + maxPages - 1);
                        startPage = Math.Max(1, endPage - maxPages + 1);
                        var baseRoutes = Model.GetRouteValues(new { pageSize = Model.PageSize }, includePage: false, includeModeAndId: false);

                        <nav aria-label="IPR pagination">
                            <ul class="pagination pagination-sm mb-0">
                                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : string.Empty)">
                                    <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
                                </li>
                                @for (var page = startPage; page <= endPage; page++)
                                {
                                    <li class="page-item @(page == Model.PageNumber ? "active" : string.Empty)">
                                        <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@page">@page</a>
                                    </li>
                                }
                                <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : string.Empty)">
                                    <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(Model.PageNumber + 1)">Next</a>
                                </li>
                            </ul>
                        </nav>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <partial name="~/Pages/Shared/_ValidationScriptsPartial.cshtml" />
}
