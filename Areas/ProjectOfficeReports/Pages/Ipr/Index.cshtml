@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Ipr.IndexModel
@using System.Globalization
@using ProjectManagement.Infrastructure.Data
@using ProjectManagement.Utilities
@{
    ViewData["Title"] = "Intellectual property tracker";

    var toastMessage = TempData["ToastMessage"] as string;
    var toastError = TempData["ToastError"] as string;

    var istZone = TimeZoneHelper.GetIst();

    string TypeLabel(IprType type) => type switch
    {
        IprType.Patent => "Patent",
        IprType.Copyright => "Copyright",
        _ => type.ToString()
    };

    string TypeBadgeClass(IprType type) => type switch
    {
        IprType.Patent => "text-bg-dark-subtle text-dark-emphasis",
        IprType.Copyright => "text-bg-secondary-subtle text-secondary-emphasis",
        _ => "text-bg-light text-body"
    };

    string StatusLabel(IprStatus status) => status switch
    {
        IprStatus.FilingUnderProcess => "Filing under process",
        IprStatus.Filed => "Filed",
        IprStatus.Granted => "Granted",
        IprStatus.Rejected => "Rejected",
        IprStatus.Withdrawn => "Withdrawn",
        _ => status.ToString()
    };

    string StatusBadgeClass(IprStatus status) => status switch
    {
        IprStatus.FilingUnderProcess => "text-bg-primary-subtle text-primary-emphasis",
        IprStatus.Filed => "text-bg-info-subtle text-info-emphasis",
        IprStatus.Granted => "text-bg-success-subtle text-success-emphasis",
        IprStatus.Rejected => "text-bg-danger-subtle text-danger-emphasis",
        IprStatus.Withdrawn => "text-bg-secondary-subtle text-secondary-emphasis",
        _ => "text-bg-light text-body"
    };

    string FormatFiledDate(DateTimeOffset? value)
    {
        if (!value.HasValue)
        {
            return "â€”";
        }

        var converted = TimeZoneInfo.ConvertTimeFromUtc(value.Value.UtcDateTime, istZone);
        return converted.ToString("dd MMM yyyy", CultureInfo.InvariantCulture);
    }

    string FormatAttachmentTimestamp(DateTimeOffset value)
    {
        var converted = TimeZoneInfo.ConvertTimeFromUtc(value.UtcDateTime, istZone);
        return converted.ToString("dd MMM yyyy 'at' hh:mm tt", CultureInfo.InvariantCulture);
    }

    var isCreateMode = string.Equals(Model.Mode, "create", StringComparison.OrdinalIgnoreCase);
    var isEditMode = string.Equals(Model.Mode, "edit", StringComparison.OrdinalIgnoreCase);
    var exportRouteValues = Model.GetRouteValuesForLinks(includeModeAndId: false);

    var hasRecords = Model.TotalCount > 0;
    var firstItem = hasRecords ? ((Model.PageNumber - 1) * Model.PageSize) + 1 : 0;
    if (firstItem > Model.TotalCount)
    {
        firstItem = Model.TotalCount;
    }
    var lastItem = hasRecords ? Math.Min(Model.TotalCount, Model.PageNumber * Model.PageSize) : 0;
}

<div class="container-fluid py-4">
    <div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-4">
        <div>
            <p class="text-uppercase text-secondary small mb-1">Project office reports</p>
            <h1 class="h4 mb-1">Intellectual property tracker</h1>
            <p class="text-secondary mb-0">Monitor filings, grants, and quick actions across projects.</p>
        </div>
        <div class="d-flex flex-wrap align-items-center justify-content-center justify-content-md-end gap-2">
            <button type="button"
                    class="btn btn-outline-secondary d-inline-flex align-items-center gap-2"
                    data-bs-toggle="modal"
                    data-bs-target="#iprFilterModal"
                    data-ipr-filter-trigger
                    aria-controls="iprFilterModal"
                    aria-haspopup="dialog"
                    aria-expanded="false">
                <i class="bi bi-funnel" aria-hidden="true"></i>
                <span>Filters</span>
            </button>
            <a class="btn btn-outline-secondary d-inline-flex align-items-center gap-2"
               asp-page="./Index"
               asp-page-handler="Export"
               asp-all-route-data="exportRouteValues">
                <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                <span>Export records</span>
            </a>
            @if (Model.CanEdit)
            {
                <a class="btn btn-primary d-inline-flex align-items-center gap-2"
                   asp-page="./Manage"
                   asp-route-Query="@Model.Query">
                    <i class="bi bi-gear" aria-hidden="true"></i>
                    <span>Manage IPR records</span>
                </a>
            }
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(toastMessage) || !string.IsNullOrWhiteSpace(toastError))
    {
        <div id="iprToastContainer"
             class="toast-container position-fixed top-0 end-0 p-3"
             style="z-index: 1100;"
             aria-live="polite"
             aria-atomic="true">
            @if (!string.IsNullOrWhiteSpace(toastMessage))
            {
                <div class="toast align-items-center text-bg-success border-0" role="status" data-bs-delay="4000" data-bs-autohide="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            @toastMessage
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }

            @if (!string.IsNullOrWhiteSpace(toastError))
            {
                <div class="toast align-items-center text-bg-danger border-0" role="alert" data-bs-delay="5000" data-bs-autohide="true">
                    <div class="d-flex">
                        <div class="toast-body">
                            @toastError
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                </div>
            }
        </div>
    }

    <div class="row g-3 mb-4">
        <div class="col-6 col-md-4 col-lg-2">
            <div class="card h-100 shadow-sm border-0">
                <div class="card-body">
                    <div class="text-secondary small mb-1">Total</div>
                    <div class="fs-3 fw-semibold">@Model.Kpis.Total</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <div class="card h-100 shadow-sm border-0">
                <div class="card-body">
                    <div class="text-secondary small mb-2">Filing under process</div>
                    <span class="badge rounded-pill text-bg-primary-subtle text-primary-emphasis fs-5 fw-semibold px-3 py-2">@Model.Kpis.FilingUnderProcess</span>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <div class="card h-100 shadow-sm border-0">
                <div class="card-body">
                    <div class="text-secondary small mb-2">Filed</div>
                    <span class="badge rounded-pill text-bg-info-subtle text-info-emphasis fs-5 fw-semibold px-3 py-2">@Model.Kpis.Filed</span>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <div class="card h-100 shadow-sm border-0">
                <div class="card-body">
                    <div class="text-secondary small mb-2">Granted</div>
                    <span class="badge rounded-pill text-bg-success-subtle text-success-emphasis fs-5 fw-semibold px-3 py-2">@Model.Kpis.Granted</span>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <div class="card h-100 shadow-sm border-0">
                <div class="card-body">
                    <div class="text-secondary small mb-2">Rejected</div>
                    <span class="badge rounded-pill text-bg-danger-subtle text-danger-emphasis fs-5 fw-semibold px-3 py-2">@Model.Kpis.Rejected</span>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-4 col-lg-2">
            <div class="card h-100 shadow-sm border-0">
                <div class="card-body">
                    <div class="text-secondary small mb-2">Withdrawn</div>
                    <span class="badge rounded-pill text-bg-secondary-subtle text-secondary-emphasis fs-5 fw-semibold px-3 py-2">@Model.Kpis.Withdrawn</span>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade"
         id="iprFilterModal"
         tabindex="-1"
         aria-labelledby="iprFilterModalLabel"
         aria-hidden="true"
         data-bs-focus="true">
        <div class="modal-dialog modal-dialog-scrollable modal-lg modal-fullscreen-sm-down">
            <div class="modal-content">
                <form method="get" class="w-100" novalidate data-ipr-loading-form>
                    <div class="modal-header">
                        <div>
                            <h2 class="modal-title h5 mb-1" id="iprFilterModalLabel">Filters</h2>
                            <p class="text-muted small mb-0">Refine the records shown in the tracker.</p>
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close filters"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row g-3">
                            <div class="col-12">
                                <label asp-for="Query" class="form-label">Search</label>
                                <input asp-for="Query"
                                       class="form-control"
                                       type="search"
                                       placeholder="Search filing number or title"
                                       data-ipr-filter-initial-focus />
                            </div>
                            <div class="col-12 col-lg-6">
                                <label class="form-label" for="typesSelect">Types</label>
                                <select id="typesSelect"
                                        asp-for="Types"
                                        asp-items="Model.TypeOptions"
                                        class="form-select"
                                        multiple
                                        size="5"
                                        aria-describedby="typesHelp"></select>
                                <div class="form-text" id="typesHelp">Hold Ctrl (or Cmd) to select multiple types.</div>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label class="form-label" for="statusSelect">Statuses</label>
                                <select id="statusSelect"
                                        asp-for="Statuses"
                                        asp-items="Model.StatusOptions"
                                        class="form-select"
                                        multiple
                                        size="5"
                                        aria-describedby="statusHelp"></select>
                                <div class="form-text" id="statusHelp">Hold Ctrl (or Cmd) to select multiple statuses.</div>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label asp-for="ProjectId" class="form-label">Project</label>
                                <select asp-for="ProjectId" asp-items="Model.ProjectOptions" class="form-select"></select>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label asp-for="Year" class="form-label">Filed year</label>
                                <select asp-for="Year" asp-items="Model.YearOptions" class="form-select"></select>
                            </div>
                            <div class="col-12 col-lg-6">
                                <label asp-for="PageSize" class="form-label">Rows per page</label>
                                <select asp-for="PageSize" asp-items="Model.PageSizeOptions" class="form-select"></select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer d-flex flex-column flex-sm-row gap-2 justify-content-between">
                        <input type="hidden" name="page" value="1" />
                        <a asp-page="./Index" class="btn btn-outline-secondary flex-grow-1 flex-sm-grow-0" data-ipr-loading-link>Reset</a>
                        <button type="submit" class="btn btn-primary flex-grow-1 flex-sm-grow-0">Apply filters</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @if (Model.CanEdit)
    {
        <div class="offcanvas offcanvas-end"
             tabindex="-1"
             id="iprRecordOffcanvas"
             aria-labelledby="iprRecordOffcanvasLabel"
             aria-hidden="true"
             data-ipr-mode="@(Model.Mode ?? string.Empty)"
             data-ipr-has-form="@(
                 string.Equals(Model.Mode, "create", StringComparison.OrdinalIgnoreCase)
                 || string.Equals(Model.Mode, "edit", StringComparison.OrdinalIgnoreCase)
                     ? "true"
                     : "false")">
            <div class="offcanvas-header">
                <div>
                    <h2 class="offcanvas-title h5 mb-1" id="iprRecordOffcanvasLabel">
                        @(isCreateMode ? "Create IPR record" : isEditMode ? "Edit IPR record" : "IPR record")
                    </h2>
                    <p class="text-muted small mb-0">
                        @(isCreateMode || isEditMode
                            ? "Capture filing information, track status, and associate the record with a project."
                            : "Use the available actions to add or manage records.")
                    </p>
                </div>
                <a class="btn-close text-reset"
                   asp-page="./Index"
                   asp-all-route-data="@Model.GetRouteValuesForLinks(includeModeAndId: false)"
                   data-bs-dismiss="offcanvas"
                   aria-label="Close"></a>
            </div>
            <div class="offcanvas-body">
                <partial name="_RecordFormPartial" model="Model" />
            </div>
        </div>
    }

    <div class="card shadow-sm border-0">
        <div class="card-header bg-white d-flex flex-column flex-md-row align-items-md-center justify-content-between gap-2">
            <div>
                <span class="fw-semibold">IPR records</span>
                <span class="text-secondary small ms-2">@(hasRecords ? $"Showing {firstItem} â€“ {lastItem} of {Model.TotalCount}" : "No records to display")</span>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="d-none" data-ipr-loading-skeleton>
                <div class="p-4">
                    <div class="placeholder-glow mb-3">
                        <span class="placeholder col-5"></span>
                        <span class="placeholder col-3 ms-2"></span>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-sm mb-0">
                            <tbody>
                                @for (var index = 0; index < 5; index++)
                                {
                                    <tr>
                                        <td><span class="placeholder col-6"></span></td>
                                        <td><span class="placeholder col-8"></span></td>
                                        <td><span class="placeholder col-10"></span></td>
                                        <td><span class="placeholder col-6"></span></td>
                                        <td><span class="placeholder col-7"></span></td>
                                        <td><span class="placeholder col-8"></span></td>
                                        <td><span class="placeholder col-5"></span></td>
                                        <td><span class="placeholder col-9"></span></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div data-ipr-table-content>
                @if (!hasRecords)
                {
                    <div class="p-5 text-center text-secondary">
                        <i class="bi bi-inbox fs-1 mb-3" aria-hidden="true"></i>
                        <h2 class="h5 mb-2">No IPR records found</h2>
                        <p class="mb-4">Adjust your filters or create a new record to get started.</p>
                        @if (Model.CanEdit)
                        {
                            <a class="btn btn-primary d-inline-flex align-items-center gap-2"
                               asp-page="./Manage"
                               asp-route-Query="@Model.Query">
                                <i class="bi bi-gear" aria-hidden="true"></i>
                                <span>Manage IPR records</span>
                            </a>
                        }
                    </div>
                }
                else
                {
                    <div class="table-responsive" style="max-height: 56vh;">
                        <table class="table table-hover table-striped table-sm align-middle mb-0">
                            <thead class="table-light position-sticky top-0">
                                <tr>
                                    <th scope="col" style="width: 120px;">Type</th>
                                    <th scope="col" style="width: 140px;">Filing number</th>
                                    <th scope="col">Title</th>
                                    <th scope="col" style="width: 120px;">Status</th>
                                    <th scope="col" style="width: 130px;" class="text-end">Filed on</th>
                                    <th scope="col" style="width: 180px;">Project</th>
                                    <th scope="col" style="width: 120px;">Attachments</th>
                                    <th scope="col" style="width: 200px;">Remarks</th>
                                </tr>
                            </thead>
                            <tbody class="table-group-divider">
                                @foreach (var record in Model.Records)
                                {
                                    var collapseId = $"ipr-attachments-{record.Id}";
                                    var hasAttachments = record.AttachmentCount > 0;
                                    var notes = string.IsNullOrWhiteSpace(record.Notes) ? "â€”" : record.Notes;
                                    <tr>
                                        <td>
                                            <span class="badge @TypeBadgeClass(record.Type)">@TypeLabel(record.Type)</span>
                                        </td>
                                        <th scope="row" class="text-monospace fw-semibold text-nowrap">@record.FilingNumber</th>
                                        <td class="text-truncate" style="max-width: 260px;" title="@(string.IsNullOrWhiteSpace(record.Title) ? "â€”" : record.Title)">
                                            @(string.IsNullOrWhiteSpace(record.Title) ? "â€”" : record.Title)
                                        </td>
                                        <td>
                                            <span class="badge @StatusBadgeClass(record.Status)">@StatusLabel(record.Status)</span>
                                        </td>
                                        <td class="text-end text-nowrap">@FormatFiledDate(record.FiledAtUtc)</td>
                                        <td class="text-truncate" style="max-width: 220px;" title="@(string.IsNullOrWhiteSpace(record.ProjectName) ? "â€”" : record.ProjectName)">
                                            @(string.IsNullOrWhiteSpace(record.ProjectName) ? "â€”" : record.ProjectName)
                                        </td>
                                        <td class="align-top">
                                            @if (!hasAttachments)
                                            {
                                                <span class="badge text-bg-secondary-subtle text-secondary-emphasis">â€”</span>
                                            }
                                            else
                                            {
                                                <div class="d-flex flex-column align-items-start gap-2">
                                                    <span class="badge text-bg-primary-subtle text-primary-emphasis d-inline-flex align-items-center gap-2">
                                                        <i class="bi bi-paperclip" aria-hidden="true"></i>
                                                        <span>@record.AttachmentCount @((record.AttachmentCount == 1) ? "file" : "files")</span>
                                                    </span>
                                                    <button class="btn btn-link btn-sm px-0" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                                                        View attachments
                                                    </button>
                                                    <div class="collapse w-100" id="@collapseId">
                                                        <div class="card card-body border-0 bg-body-tertiary p-3">
                                                            <ul class="list-unstyled mb-0 small">
                                                                @for (var attachmentIndex = 0; attachmentIndex < record.Attachments.Count; attachmentIndex++)
                                                                {
                                                                    var attachment = record.Attachments[attachmentIndex];
                                                                    var itemClass = attachmentIndex == record.Attachments.Count - 1 ? "mb-0" : "mb-3";
                                                                    <li class="@itemClass">
                                                                        <div class="fw-semibold">
                                                                            <a asp-page="Download" asp-route-iprRecordId="@record.Id" asp-route-attachmentId="@attachment.Id" class="text-decoration-none">
                                                                                @attachment.FileName
                                                                            </a>
                                                                        </div>
                                                                        <div class="text-secondary">
                                                                            @Model.FormatFileSize(attachment.FileSize)
                                                                            <span aria-hidden="true">&middot;</span>
                                                                            <span class="visually-hidden"> - </span>
                                                                            Uploaded by @attachment.UploadedBy on @FormatAttachmentTimestamp(attachment.UploadedAtUtc)
                                                                        </div>
                                                                    </li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </td>
                                        <td class="text-truncate" style="max-width: 240px;" title="@notes">@notes</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
        @if (hasRecords)
        {
            <div class="card-footer bg-white d-flex flex-column flex-md-row align-items-md-center justify-content-between gap-3" data-ipr-table-content>
                <div class="text-secondary small">
                    Showing <span class="fw-semibold">@firstItem</span> â€“ <span class="fw-semibold">@lastItem</span> of <span class="fw-semibold">@Model.TotalCount</span>
                </div>
                @if (Model.TotalPages > 1)
                {
                    var maxPages = 5;
                    var startPage = Math.Max(1, Model.PageNumber - 2);
                    var endPage = Math.Min(Model.TotalPages, startPage + maxPages - 1);
                    startPage = Math.Max(1, endPage - maxPages + 1);
                    var baseRoutes = Model.GetRouteValuesForLinks(new { pageSize = Model.PageSize }, includePage: false, includeModeAndId: false);

                    <nav aria-label="IPR pagination">
                        <ul class="pagination pagination-sm mb-0">
                            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : string.Empty)">
                                <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(Model.PageNumber - 1)" data-ipr-loading-link>Previous</a>
                            </li>
                            @for (var pageNumber = startPage; pageNumber <= endPage; pageNumber++)
                            {
                                <li class="page-item @(pageNumber == Model.PageNumber ? "active" : string.Empty)">
                                    <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(pageNumber)" data-ipr-loading-link>@pageNumber</a>
                                </li>
                            }
                            <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : string.Empty)">
                                <a class="page-link" asp-page="./Index" asp-all-route-data="@baseRoutes" asp-route-page="@(Model.PageNumber + 1)" data-ipr-loading-link>Next</a>
                            </li>
                        </ul>
                    </nav>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="~/Pages/Shared/_ValidationScriptsPartial.cshtml" />
    <script src="~/js/project-office-reports/ipr/index.js" asp-append-version="true"></script>
}
