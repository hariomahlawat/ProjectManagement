@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Tot.IndexModel
@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@using ProjectManagement.Models
@using ProjectManagement.Services.Projects
@using ProjectManagement.Utilities
@{
    ViewData["Title"] = "Transfer of Technology tracker";

    string StatusLabel(ProjectTotStatus status) => status switch
    {
        ProjectTotStatus.NotRequired => "Not required",
        ProjectTotStatus.NotStarted => "Not started",
        ProjectTotStatus.InProgress => "In progress",
        ProjectTotStatus.Completed => "Completed",
        _ => status.ToString()
    };

    string TotStatusChipClass(ProjectTotStatus status) => status switch
    {
        ProjectTotStatus.NotRequired => "chip-status-not-required",
        ProjectTotStatus.NotStarted => "chip-status-not-started",
        ProjectTotStatus.InProgress => "chip-status-in-progress",
        ProjectTotStatus.Completed => "chip-status-completed",
        _ => "chip-status-not-started"
    };

    string RequestStateLabel(ProjectTotRequestDecisionState state) => state switch
    {
        ProjectTotRequestDecisionState.Pending => "Pending approval",
        ProjectTotRequestDecisionState.Approved => "Approved",
        ProjectTotRequestDecisionState.Rejected => "Rejected",
        _ => state.ToString()
    };

    string RequestStateAccentClass(ProjectTotRequestDecisionState state) => state switch
    {
        ProjectTotRequestDecisionState.Pending => "is-pending",
        ProjectTotRequestDecisionState.Approved => "is-approved",
        ProjectTotRequestDecisionState.Rejected => "is-rejected",
        _ => "is-pending"
    };

    string RequestStateChipClass(ProjectTotRequestDecisionState state) => state switch
    {
        ProjectTotRequestDecisionState.Pending => "chip-decision-pending",
        ProjectTotRequestDecisionState.Approved => "chip-decision-approved",
        ProjectTotRequestDecisionState.Rejected => "chip-decision-rejected",
        _ => "chip-decision-pending"
    };

    string FoPmLabel(bool? value) => value switch
    {
        true => "Yes",
        false => "No",
        _ => "â€”"
    };

    var istZone = TimeZoneHelper.GetIst();
    DateTime? ToIst(DateTime? value) => value.HasValue
        ? TimeZoneInfo.ConvertTimeFromUtc(DateTime.SpecifyKind(value.Value, DateTimeKind.Utc), istZone)
        : null;

    string? FormatTimestamp(DateTime? utcValue)
    {
        var dt = ToIst(utcValue);
        return dt.HasValue
            ? dt.Value.ToString("dd/MM/yyyy 'at' HH:mm 'IST'", CultureInfo.InvariantCulture)
            : null;
    }

    string? FormatDate(DateOnly? value)
    {
        return value?.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture);
    }

    var showExportModal = ViewData["ShowTotExportModal"] as bool? ?? false;
    var toastMessage = TempData["Toast"] as string;
    var toastError = TempData["ToastError"] as string;
    var hasProjects = Model.Projects.Count > 0;
    var isListView = Model.ViewMode == ProjectManagement.Areas.ProjectOfficeReports.Pages.Tot.IndexModel.ViewModeOption.List;
    const string CardsViewModeName = nameof(ProjectManagement.Areas.ProjectOfficeReports.Pages.Tot.IndexModel.ViewModeOption.Cards);
    const string ListViewModeName = nameof(ProjectManagement.Areas.ProjectOfficeReports.Pages.Tot.IndexModel.ViewModeOption.List);

    var totalCount = Model.Projects.Count;
    var appliedFilters = new List<string>();
    if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
    {
        appliedFilters.Add($"Search \"{Model.SearchTerm}\"");
    }

    if (Model.RequiresTotOnly)
    {
        appliedFilters.Add("Requires ToT");
    }

    if (Model.MetCompletedOnly)
    {
        appliedFilters.Add("MET completed");
    }

    if (Model.TotStatusFilter is { } statusFilter)
    {
        appliedFilters.Add($"ToT status: {StatusLabel(statusFilter)}");
    }

    if (Model.OnlyPending)
    {
        appliedFilters.Add("Request state: Pending approvals only");
    }
    else if (Model.RequestStateFilter is { } requestState)
    {
        appliedFilters.Add($"Request state: {RequestStateLabel(requestState)}");
    }

    var summaryText = appliedFilters.Any()
        ? $"Filters: {string.Join(", ", appliedFilters)}"
        : "Filters: None";

    var resultCountText = totalCount switch
    {
        0 => "No projects",
        1 => "Showing 1 project",
        _ => $"Showing {totalCount} projects"
    };

    var selected = Model.SelectedProject;
    var selectedRemark = selected?.LatestExternalRemark ?? selected?.LatestInternalRemark;
    var canSubmitSelected = Model.CanSubmit && selected is not null;
    var hasPendingRequest = selected?.RequestState == ProjectTotRequestDecisionState.Pending;
    var requiresDecisionMetadata = hasPendingRequest && selected is not null && !selected.RequestMetadataAvailable;
    var showDecisionCard = Model.CanApprove && hasPendingRequest && selected is not null && selected.RequestMetadataAvailable;

    bool IsTrackedActive()
    {
        return !Model.RequiresTotOnly
            && !Model.MetCompletedOnly
            && !Model.OnlyPending
            && Model.RequestStateFilter is null
            && Model.TotStatusFilter is null;
    }

    var trackedIsActive = IsTrackedActive();
    var requiresTotActive = Model.RequiresTotOnly;
    var pendingActive = Model.OnlyPending;
    var inProgressActive = Model.TotStatusFilter == ProjectTotStatus.InProgress;
    var metActive = Model.MetCompletedOnly;
    var completedActive = Model.TotStatusFilter == ProjectTotStatus.Completed;
}

<div class="tot-page">
    <header class="tot-page__header">
        <div class="tot-page__title">
            <h1 class="tot-page__heading">Transfer of Technology tracker</h1>
            <p class="tot-page__subtitle">Monitor portfolio progress, file updates for approval, and review the latest ToT context.</p>
        </div>
        <div class="tot-page__actions">
            @if (hasProjects)
            {
                <button type="button"
                        class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                        data-bs-toggle="modal"
                        data-bs-target="#tot-export-modal"
                        aria-haspopup="dialog"
                        aria-controls="tot-export-modal"
                        aria-expanded="false">
                    <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                    <span>Export</span>
                </button>
            }
            else
            {
                <button type="button"
                        class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                        disabled
                        aria-disabled="true">
                    <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                    <span>Export</span>
                </button>
            }

            @if (Model.CanSubmit)
            {
                <button type="button"
                        class="btn btn-primary d-inline-flex align-items-center gap-2"
                        data-bs-toggle="modal"
                        data-bs-target="#tot-submit-modal"
                        @(canSubmitSelected ? null : "disabled")
                        aria-disabled="@(canSubmitSelected ? "false" : "true")">
                    <i class="bi bi-upload" aria-hidden="true"></i>
                    <span>Submit update</span>
                </button>
            }

            <button type="button"
                    class="btn btn-light d-inline-flex align-items-center gap-2 tot-filter-trigger"
                    data-bs-toggle="offcanvas"
                    data-bs-target="#tot-filter-drawer"
                    aria-haspopup="dialog"
                    aria-controls="tot-filter-drawer"
                    aria-expanded="false">
                <i class="bi bi-search" aria-hidden="true"></i>
                <span>Search &amp; filter</span>
            </button>
        </div>
    </header>

    @if (!string.IsNullOrWhiteSpace(toastError))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @toastError
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrWhiteSpace(toastMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="status">
            @toastMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="offcanvas offcanvas-end tot-filter-drawer" tabindex="-1" id="tot-filter-drawer" aria-labelledby="tot-filter-drawer-label">
        <div class="offcanvas-header">
            <h2 class="offcanvas-title h5 mb-0" id="tot-filter-drawer-label">Search &amp; filter projects</h2>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body d-flex flex-column">
            <form id="tot-filter-form" method="get" class="d-flex flex-column gap-4">
                <input type="hidden" asp-for="SelectedProjectId" />
                <input type="hidden" asp-for="ViewMode" />
                <div class="row g-3 align-items-end">
                    <div class="col-12">
                        <label class="form-label" for="tot-search-term">Search</label>
                        <input type="search"
                               class="form-control"
                               id="tot-search-term"
                               name="SearchTerm"
                               value="@Model.SearchTerm"
                               placeholder="Search projects or units" />
                    </div>
                    <div class="col-12">
                        <span class="tot-filter-heading">ToT status</span>
                        <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter projects by Transfer of Technology status">
                            <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-all" value="" @(Model.TotStatusFilter is null ? "checked" : null)>
                            <label class="btn tot-filter-btn" for="tot-status-all">All</label>
                            <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-not-required" value="@ProjectTotStatus.NotRequired" @(Model.TotStatusFilter == ProjectTotStatus.NotRequired ? "checked" : null)>
                            <label class="btn tot-filter-btn" for="tot-status-not-required">@StatusLabel(ProjectTotStatus.NotRequired)</label>
                            <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-not-started" value="@ProjectTotStatus.NotStarted" @(Model.TotStatusFilter == ProjectTotStatus.NotStarted ? "checked" : null)>
                            <label class="btn tot-filter-btn" for="tot-status-not-started">@StatusLabel(ProjectTotStatus.NotStarted)</label>
                            <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-in-progress" value="@ProjectTotStatus.InProgress" @(Model.TotStatusFilter == ProjectTotStatus.InProgress ? "checked" : null)>
                            <label class="btn tot-filter-btn" for="tot-status-in-progress">@StatusLabel(ProjectTotStatus.InProgress)</label>
                            <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-completed" value="@ProjectTotStatus.Completed" @(Model.TotStatusFilter == ProjectTotStatus.Completed ? "checked" : null)>
                            <label class="btn tot-filter-btn" for="tot-status-completed">@StatusLabel(ProjectTotStatus.Completed)</label>
                        </div>
                    </div>
                    <div class="col-12">
                        <span class="tot-filter-heading">Request state</span>
                        <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter projects by request decision state">
                            <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-all" value="" @((Model.RequestStateFilter is null && !Model.OnlyPending) ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                            <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-all">All</label>
                            <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-pending" value="@ProjectTotRequestDecisionState.Pending" @(Model.RequestStateFilter == ProjectTotRequestDecisionState.Pending ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                            <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-pending">@RequestStateLabel(ProjectTotRequestDecisionState.Pending)</label>
                            <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-approved" value="@ProjectTotRequestDecisionState.Approved" @(Model.RequestStateFilter == ProjectTotRequestDecisionState.Approved ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                            <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-approved">@RequestStateLabel(ProjectTotRequestDecisionState.Approved)</label>
                            <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-rejected" value="@ProjectTotRequestDecisionState.Rejected" @(Model.RequestStateFilter == ProjectTotRequestDecisionState.Rejected ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                            <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-rejected">@RequestStateLabel(ProjectTotRequestDecisionState.Rejected)</label>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-check form-switch tot-filter-switch">
                            <input class="form-check-input" type="checkbox" asp-for="OnlyPending" id="onlyPending">
                            <label class="form-check-label" for="onlyPending">Only pending approvals</label>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-check form-switch tot-filter-switch">
                            <input class="form-check-input" type="checkbox" asp-for="RequiresTotOnly" id="requiresTotOnly">
                            <label class="form-check-label" for="requiresTotOnly">Only projects requiring ToT</label>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="form-check form-switch tot-filter-switch">
                            <input class="form-check-input" type="checkbox" asp-for="MetCompletedOnly" id="metCompletedOnly">
                            <label class="form-check-label" for="metCompletedOnly">MET completed</label>
                        </div>
                    </div>
                </div>
                <div class="mt-auto pt-3 border-top">
                    <div class="d-flex justify-content-between gap-2">
                        <a class="btn btn-outline-secondary"
                           asp-page="./Index"
                           asp-route-SearchTerm=""
                           asp-route-TotStatusFilter=""
                           asp-route-RequestStateFilter=""
                           asp-route-OnlyPending="false"
                           asp-route-RequiresTotOnly="false"
                           asp-route-MetCompletedOnly="false"
                           asp-route-SelectedProjectId="@Model.SelectedProjectId"
                           asp-route-ViewMode="@Model.ViewMode">
                            Clear all
                        </a>
                        <button type="submit" class="btn btn-primary">Apply</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="modal fade" id="tot-export-modal" tabindex="-1" aria-labelledby="tot-export-modal-label" aria-hidden="true" data-tot-auto-show="@(showExportModal ? "true" : "false")">
        <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
            <div class="modal-content">
                <form method="post" asp-page-handler="Export">
                    <div class="modal-header">
                        <h2 class="modal-title fs-5" id="tot-export-modal-label">Export Transfer of Technology data</h2>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <p class="text-muted mb-3">Configure the export filters to download an Excel workbook for offline analysis.</p>
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        <input type="hidden" asp-for="SelectedProjectId" />
                        <input type="hidden" asp-for="TotStatusFilter" />
                        <input type="hidden" asp-for="RequestStateFilter" />
                        <input type="hidden" asp-for="SearchTerm" />
                        <input type="hidden" asp-for="OnlyPending" />
                        <input type="hidden" asp-for="RequiresTotOnly" />
                        <input type="hidden" asp-for="MetCompletedOnly" />
                        <input type="hidden" asp-for="ViewMode" />
                        <div class="row g-3">
                            <div class="col-12">
                                <span class="tot-filter-heading d-block">ToT status</span>
                                <p class="text-muted small mb-2">Choose which Transfer of Technology stream statuses to include in the workbook.</p>
                                <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter exported projects by Transfer of Technology status">
                                    <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-all" value="" @(Model.Export?.TotStatus is null ? "checked" : null)>
                                    <label class="btn tot-filter-btn" for="export-tot-status-all">All</label>
                                    <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-not-required" value="@ProjectTotStatus.NotRequired" @(Model.Export?.TotStatus == ProjectTotStatus.NotRequired ? "checked" : null)>
                                    <label class="btn tot-filter-btn" for="export-tot-status-not-required">@StatusLabel(ProjectTotStatus.NotRequired)</label>
                                    <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-not-started" value="@ProjectTotStatus.NotStarted" @(Model.Export?.TotStatus == ProjectTotStatus.NotStarted ? "checked" : null)>
                                    <label class="btn tot-filter-btn" for="export-tot-status-not-started">@StatusLabel(ProjectTotStatus.NotStarted)</label>
                                    <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-in-progress" value="@ProjectTotStatus.InProgress" @(Model.Export?.TotStatus == ProjectTotStatus.InProgress ? "checked" : null)>
                                    <label class="btn tot-filter-btn" for="export-tot-status-in-progress">@StatusLabel(ProjectTotStatus.InProgress)</label>
                                    <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-completed" value="@ProjectTotStatus.Completed" @(Model.Export?.TotStatus == ProjectTotStatus.Completed ? "checked" : null)>
                                    <label class="btn tot-filter-btn" for="export-tot-status-completed">@StatusLabel(ProjectTotStatus.Completed)</label>
                                </div>
                            </div>
                            <div class="col-12"><hr class="text-body-tertiary my-2" /></div>
                            <div class="col-12 col-md-6 col-lg-3">
                                <label class="form-label" for="export-started-from">Started from</label>
                                <input class="form-control" asp-for="Export.StartedFrom" type="date" id="export-started-from" />
                                <span asp-validation-for="Export.StartedFrom" class="text-danger"></span>
                            </div>
                            <div class="col-12 col-md-6 col-lg-3">
                                <label class="form-label" for="export-started-to">Started to</label>
                                <input class="form-control" asp-for="Export.StartedTo" type="date" id="export-started-to" />
                                <span asp-validation-for="Export.StartedTo" class="text-danger"></span>
                            </div>
                            <div class="col-12 col-md-6 col-lg-3">
                                <label class="form-label" for="export-completed-from">Completed from</label>
                                <input class="form-control" asp-for="Export.CompletedFrom" type="date" id="export-completed-from" />
                                <span asp-validation-for="Export.CompletedFrom" class="text-danger"></span>
                            </div>
                            <div class="col-12 col-md-6 col-lg-3">
                                <label class="form-label" for="export-completed-to">Completed to</label>
                                <input class="form-control" asp-for="Export.CompletedTo" type="date" id="export-completed-to" />
                                <span asp-validation-for="Export.CompletedTo" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary d-inline-flex align-items-center gap-2">
                            <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                            <span>Export workbook</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @if (Model.Summary is { } summary)
    {
        <section class="tot-kpi-band" aria-label="Portfolio summary">
            <a class="tot-kpi @(trackedIsActive ? "is-active" : null)" asp-page="./Index"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-TotStatusFilter=""
               asp-route-RequestStateFilter=""
               asp-route-OnlyPending="false"
               asp-route-RequiresTotOnly="false"
               asp-route-MetCompletedOnly="false"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@Model.ViewMode"
               aria-pressed="@(trackedIsActive ? "true" : "false")">
                <div class="tot-kpi__value">@summary.TotalProjects</div>
                <div class="tot-kpi__label">Tracked projects</div>
                <div class="tot-kpi__meta">Across all ToT states</div>
            </a>
            <a class="tot-kpi @(requiresTotActive ? "is-active" : null)" asp-page="./Index"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-TotStatusFilter="@Model.TotStatusFilter"
               asp-route-RequestStateFilter="@Model.RequestStateFilter"
               asp-route-OnlyPending="@Model.OnlyPending"
               asp-route-RequiresTotOnly="true"
               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@Model.ViewMode"
               aria-pressed="@(requiresTotActive ? "true" : "false")">
                <div class="tot-kpi__value">@summary.ProjectsRequiringTot</div>
                <div class="tot-kpi__label">Active ToT streams</div>
                <div class="tot-kpi__meta">@summary.TotNotRequired not required</div>
            </a>
            <a class="tot-kpi @(pendingActive ? "is-active" : null)" asp-page="./Index"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-TotStatusFilter="@Model.TotStatusFilter"
               asp-route-RequestStateFilter=""
               asp-route-OnlyPending="true"
               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@Model.ViewMode"
               aria-pressed="@(pendingActive ? "true" : "false")">
                <div class="tot-kpi__value">@summary.PendingApprovals</div>
                <div class="tot-kpi__label">Pending approvals</div>
                <div class="tot-kpi__meta">Action required</div>
            </a>
            <a class="tot-kpi @(inProgressActive ? "is-active" : null)" asp-page="./Index"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-TotStatusFilter="@ProjectTotStatus.InProgress"
               asp-route-RequestStateFilter="@Model.RequestStateFilter"
               asp-route-OnlyPending="@Model.OnlyPending"
               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@Model.ViewMode"
               aria-pressed="@(inProgressActive ? "true" : "false")">
                <div class="tot-kpi__value">@summary.TotInProgress</div>
                <div class="tot-kpi__label">In progress</div>
                <div class="tot-kpi__meta">@summary.TotNotStarted not started</div>
            </a>
            <a class="tot-kpi @(metActive ? "is-active" : null)" asp-page="./Index"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-TotStatusFilter="@Model.TotStatusFilter"
               asp-route-RequestStateFilter="@Model.RequestStateFilter"
               asp-route-OnlyPending="@Model.OnlyPending"
               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
               asp-route-MetCompletedOnly="true"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@Model.ViewMode"
               aria-pressed="@(metActive ? "true" : "false")">
                <div class="tot-kpi__value">@summary.ProjectsWithMetCompleted</div>
                <div class="tot-kpi__label">MET completed</div>
                <div class="tot-kpi__meta">Momentum achieved</div>
            </a>
            <a class="tot-kpi @(completedActive ? "is-active" : null)" asp-page="./Index"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-TotStatusFilter="@ProjectTotStatus.Completed"
               asp-route-RequestStateFilter="@Model.RequestStateFilter"
               asp-route-OnlyPending="@Model.OnlyPending"
               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@Model.ViewMode"
               aria-pressed="@(completedActive ? "true" : "false")">
                <div class="tot-kpi__value">@summary.TotCompleted</div>
                <div class="tot-kpi__label">ToT completed</div>
                <div class="tot-kpi__meta">@summary.ProjectsWithFirstProductionModel FoPM manufactured</div>
            </a>
        </section>
    }

    <section class="tot-results">
        <div class="tot-results__summary">
            <div class="tot-results__count">@resultCountText</div>
            <div class="tot-results__filters">@summaryText</div>
        </div>
        <div class="tot-results__view-toggle btn-group" role="group" aria-label="Toggle project layout">
            <a class="btn btn-outline-secondary @(isListView ? string.Empty : "active")"
               asp-page="./Index"
               asp-route-TotStatusFilter="@Model.TotStatusFilter"
               asp-route-RequestStateFilter="@Model.RequestStateFilter"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-OnlyPending="@Model.OnlyPending"
               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@CardsViewModeName">
                <span class="d-none d-sm-inline">Card view</span>
                <span class="d-sm-none">Cards</span>
            </a>
            <a class="btn btn-outline-secondary @(isListView ? "active" : string.Empty)"
               asp-page="./Index"
               asp-route-TotStatusFilter="@Model.TotStatusFilter"
               asp-route-RequestStateFilter="@Model.RequestStateFilter"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-OnlyPending="@Model.OnlyPending"
               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
               asp-route-SelectedProjectId="@Model.SelectedProjectId"
               asp-route-ViewMode="@ListViewModeName">
                <span class="d-none d-sm-inline">Table view</span>
                <span class="d-sm-none">Table</span>
            </a>
        </div>
    </section>

    <div class="tot-workspace">
        <section class="tot-workspace__main">
            @if (!Model.Projects.Any())
            {
                <div class="tot-empty">
                    <h2 class="tot-empty__title">No projects match the current filters</h2>
                    <p class="tot-empty__body">Try adjusting the filters or clearing them to see all tracked projects.</p>
                    <a class="btn btn-outline-primary"
                       asp-page="./Index"
                       asp-route-SearchTerm=""
                       asp-route-TotStatusFilter=""
                       asp-route-RequestStateFilter=""
                       asp-route-OnlyPending="false"
                       asp-route-RequiresTotOnly="false"
                       asp-route-MetCompletedOnly="false"
                       asp-route-ViewMode="@Model.ViewMode">
                        Clear filters
                    </a>
                </div>
            }
            else if (isListView)
            {
                <div class="table-responsive">
                    <table class="table align-middle tot-table">
                        <thead class="tot-table__head">
                            <tr>
                                <th scope="col">Project</th>
                                <th scope="col">ToT status</th>
                                <th scope="col">Started</th>
                                <th scope="col">Completed</th>
                                <th scope="col">MET</th>
                                <th scope="col">FPM</th>
                                <th scope="col">Last approved by</th>
                                <th scope="col">Approved on</th>
                                <th scope="col">Pending request</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var row in Model.Projects)
                            {
                                var isSelected = Model.SelectedProjectId.HasValue && Model.SelectedProjectId.Value == row.ProjectId;
                                var accentClass = row.RequestState is { } requestState ? RequestStateAccentClass(requestState) : string.Empty;
                                <tr class="tot-table__row @accentClass @(isSelected ? "is-selected" : null)">
                                    <td>
                                        <div class="tot-table__project">
                                            <a class="tot-table__project-link"
                                               asp-page="./Index"
                                               asp-route-TotStatusFilter="@Model.TotStatusFilter"
                                               asp-route-RequestStateFilter="@Model.RequestStateFilter"
                                               asp-route-SearchTerm="@Model.SearchTerm"
                                               asp-route-OnlyPending="@Model.OnlyPending"
                                               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
                                               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
                                               asp-route-SelectedProjectId="@row.ProjectId"
                                               asp-route-ViewMode="@ListViewModeName">
                                                @row.ProjectName
                                            </a>
                                            @if (!string.IsNullOrWhiteSpace(row.SponsoringUnit))
                                            {
                                                <div class="tot-table__unit">@row.SponsoringUnit</div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="tot-table__chips">
                                            <span class="chip chip--status @TotStatusChipClass(row.TotStatus ?? ProjectTotStatus.NotStarted)">@StatusLabel(row.TotStatus ?? ProjectTotStatus.NotStarted)</span>
                                            @if (row.RequestState is { } state)
                                            {
                                                <span class="chip chip--decision @RequestStateChipClass(state)">@RequestStateLabel(state)</span>
                                            }
                                            else
                                            {
                                                <span class="tot-table__muted">No request</span>
                                            }
                                        </div>
                                    </td>
                                    <td>@(FormatDate(row.TotStartedOn) ?? "â€”")</td>
                                    <td>@(FormatDate(row.TotCompletedOn) ?? "â€”")</td>
                                    <td>@(FormatDate(row.TotMetCompletedOn) ?? "â€”")</td>
                                    <td>@FoPmLabel(row.TotFirstProductionModelManufactured)</td>
                                    <td>@(string.IsNullOrWhiteSpace(row.TotLastApprovedBy) ? "â€”" : row.TotLastApprovedBy)</td>
                                    <td>@(FormatTimestamp(row.TotLastApprovedOnUtc) ?? "â€”")</td>
                                    <td>
                                        @if (row.RequestState is { } pending && pending == ProjectTotRequestDecisionState.Pending)
                                        {
                                            <span class="badge text-bg-warning text-uppercase">Pending</span>
                                        }
                                        else if (row.RequestState is { } decision)
                                        {
                                            <span>@RequestStateLabel(decision)</span>
                                        }
                                        else
                                        {
                                            <span class="tot-table__muted">None</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="tot-card-grid">
                    @foreach (var row in Model.Projects)
                    {
                        var isSelected = Model.SelectedProjectId.HasValue && Model.SelectedProjectId.Value == row.ProjectId;
                        var accentClass = row.RequestState is { } requestState ? RequestStateAccentClass(requestState) : string.Empty;
                        <article class="tot-card @accentClass @(isSelected ? "is-selected" : null)"
                                 role="button"
                                 tabindex="0"
                                 aria-pressed="@(isSelected ? "true" : "false")">
                            <header class="tot-card__header">
                                <div class="tot-card__heading">
                                    <h3 class="tot-card__title">@row.ProjectName</h3>
                                    @if (!string.IsNullOrWhiteSpace(row.SponsoringUnit))
                                    {
                                        <div class="tot-card__unit">@row.SponsoringUnit</div>
                                    }
                                </div>
                                <div class="tot-card__chips">
                                    <span class="chip chip--status @TotStatusChipClass(row.TotStatus ?? ProjectTotStatus.NotStarted)">@StatusLabel(row.TotStatus ?? ProjectTotStatus.NotStarted)</span>
                                    @if (row.RequestState is { } state)
                                    {
                                        <span class="chip chip--decision @RequestStateChipClass(state)">@RequestStateLabel(state)</span>
                                    }
                                    else
                                    {
                                        <span class="chip chip--decision chip-decision-none">No request</span>
                                    }
                                </div>
                            </header>
                            <dl class="tot-card__grid">
                                <div><dt>Started on</dt><dd>@(FormatDate(row.TotStartedOn) ?? "â€”")</dd></div>
                                <div><dt>Completed on</dt><dd>@(FormatDate(row.TotCompletedOn) ?? "â€”")</dd></div>
                                <div><dt>MET completed</dt><dd>@(FormatDate(row.TotMetCompletedOn) ?? "â€”")</dd></div>
                                <div><dt>First production model</dt><dd>@FoPmLabel(row.TotFirstProductionModelManufactured)</dd></div>
                                <div><dt>Manufactured on</dt><dd>@(FormatDate(row.TotFirstProductionModelManufacturedOn) ?? "â€”")</dd></div>
                                <div><dt>Latest approval</dt><dd>@(FormatTimestamp(row.TotLastApprovedOnUtc) ?? "â€”")</dd></div>
                            </dl>
                            <footer class="tot-card__footer">
                                @if (Model.CanSubmit)
                                {
                                    if (isSelected)
                                    {
                                        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#tot-submit-modal">Submit update</button>
                                    }
                                    else
                                    {
                                        <a class="btn btn-primary"
                                           asp-page="./Index"
                                           asp-route-TotStatusFilter="@Model.TotStatusFilter"
                                           asp-route-RequestStateFilter="@Model.RequestStateFilter"
                                           asp-route-SearchTerm="@Model.SearchTerm"
                                           asp-route-OnlyPending="@Model.OnlyPending"
                                           asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
                                           asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
                                           asp-route-SelectedProjectId="@row.ProjectId"
                                           asp-route-ViewMode="@CardsViewModeName">
                                            Submit update
                                        </a>
                                    }
                                }
                                <a class="btn btn-text" asp-page="/Projects/Overview" asp-route-id="@row.ProjectId">View details</a>
                            </footer>
                            <a class="stretched-link"
                               asp-page="./Index"
                               asp-route-TotStatusFilter="@Model.TotStatusFilter"
                               asp-route-RequestStateFilter="@Model.RequestStateFilter"
                               asp-route-SearchTerm="@Model.SearchTerm"
                               asp-route-OnlyPending="@Model.OnlyPending"
                               asp-route-RequiresTotOnly="@Model.RequiresTotOnly"
                               asp-route-MetCompletedOnly="@Model.MetCompletedOnly"
                               asp-route-SelectedProjectId="@row.ProjectId"
                               asp-route-ViewMode="@CardsViewModeName"
                               aria-hidden="true"
                               tabindex="-1"></a>
                        </article>
                    }
                </div>
            }
        </section>
        <aside class="tot-workspace__aside">
            <div class="tot-sticky">
                @if (selected is null)
                {
                    <div class="tot-sticky-card">
                        <h2 class="tot-sticky__title">Select a project to see details</h2>
                        <p class="tot-sticky__subtitle">Choose a project from the grid to review its ToT progress, remarks, and actions.</p>
                    </div>
                }
                else
                {
                    <div class="tot-sticky-card">
                        <header class="tot-sticky__header">
                            <div>
                                <h2 class="tot-sticky__title">@selected.ProjectName</h2>
                                @if (!string.IsNullOrWhiteSpace(selected.SponsoringUnit))
                                {
                                    <div class="tot-sticky__subtitle">@selected.SponsoringUnit</div>
                                }
                            </div>
                            <div class="tot-sticky__chips">
                                <span class="chip chip--status @TotStatusChipClass(selected.TotStatus ?? ProjectTotStatus.NotStarted)">@StatusLabel(selected.TotStatus ?? ProjectTotStatus.NotStarted)</span>
                                @if (selected.RequestState is { } selectedState)
                                {
                                    <span class="chip chip--decision @RequestStateChipClass(selectedState)">@RequestStateLabel(selectedState)</span>
                                }
                                else
                                {
                                    <span class="chip chip--decision chip-decision-none">No request</span>
                                }
                            </div>
                        </header>
                        <dl class="tot-sticky__grid">
                            <div><dt>Started on</dt><dd>@(FormatDate(selected.TotStartedOn) ?? "â€”")</dd></div>
                            <div><dt>Completed on</dt><dd>@(FormatDate(selected.TotCompletedOn) ?? "â€”")</dd></div>
                            <div><dt>MET details</dt><dd>@(string.IsNullOrWhiteSpace(selected.TotMetDetails) ? "â€”" : selected.TotMetDetails)</dd></div>
                            <div><dt>MET completed</dt><dd>@(FormatDate(selected.TotMetCompletedOn) ?? "â€”")</dd></div>
                            <div><dt>First production model</dt><dd>@FoPmLabel(selected.TotFirstProductionModelManufactured)</dd></div>
                            <div><dt>Manufactured on</dt><dd>@(FormatDate(selected.TotFirstProductionModelManufacturedOn) ?? "â€”")</dd></div>
                            <div><dt>Last approved by</dt><dd>@(string.IsNullOrWhiteSpace(selected.TotLastApprovedBy) ? "â€”" : selected.TotLastApprovedBy)</dd></div>
                            <div><dt>Approved on</dt><dd>@(FormatTimestamp(selected.TotLastApprovedOnUtc) ?? "â€”")</dd></div>
                        </dl>
                        <div class="tot-sticky__actions">
                            @if (Model.CanSubmit)
                            {
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#tot-submit-modal">Submit update</button>
                            }
                            <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#tot-request-modal" @(selected.RequestState is null ? "disabled" : null)>Latest ToT request</button>
                            <a class="btn btn-text" asp-page="/Projects/Overview" asp-route-id="@selected.ProjectId">Open project</a>
                        </div>
                        <section class="tot-sticky__remark">
                            <header class="tot-sticky__remark-header">
                                <h3 class="tot-sticky__remark-title">Latest remark</h3>
                                <a class="btn btn-text" asp-page="/Projects/Overview" asp-route-id="@selected.ProjectId" asp-fragment="remarks-panel">Open remarks panel</a>
                            </header>
                            @if (selectedRemark is null)
                            {
                                <p class="tot-sticky__remark-empty">No ToT remarks recorded yet.</p>
                            }
                            else
                            {
                                <div class="tot-sticky__remark-meta">
                                    <span class="tot-sticky__remark-chip">@selectedRemark.TypeLabel remark</span>
                                    @if (selectedRemark.EventDate.HasValue)
                                    {
                                        <span>@FormatDate(selectedRemark.EventDate)</span>
                                    }
                                    @if (FormatTimestamp(selectedRemark.CreatedAtUtc) is { } remarkTimestamp)
                                    {
                                        <span>Posted @remarkTimestamp</span>
                                    }
                                </div>
                                <div class="tot-sticky__remark-body">@selectedRemark.Body</div>
                            }
                        </section>
                    </div>

                    @if (requiresDecisionMetadata)
                    {
                        <div class="alert alert-info mt-3" role="status">
                            Transfer of Technology request details are temporarily unavailable. Approvals will be enabled once the data is accessible.
                        </div>
                    }

                    @if (showDecisionCard)
                    {
                        <div class="tot-sticky-card @(Model.HighlightDecisionCard ? "is-highlighted" : null)" data-tot-decision-card>
                            <header class="tot-sticky__header">
                                <h3 class="tot-sticky__title">HoD decision</h3>
                            </header>
                            @if (Model.HighlightDecisionCard && !string.IsNullOrWhiteSpace(Model.DecisionAlertMessage))
                            {
                                <div class="alert alert-warning" role="alert">
                                    @Model.DecisionAlertMessage
                                </div>
                            }
                            <form method="post" asp-page-handler="Decide" class="tot-decision-form">
                                <input asp-for="DecideInput.ProjectId" type="hidden" />
                                <input asp-for="DecideInput.RowVersion" type="hidden" />
                                <input type="hidden" asp-for="TotStatusFilter" />
                                <input type="hidden" asp-for="RequestStateFilter" />
                                <input type="hidden" asp-for="SearchTerm" />
                                <input type="hidden" asp-for="OnlyPending" />
                                <input type="hidden" asp-for="RequiresTotOnly" />
                                <input type="hidden" asp-for="MetCompletedOnly" />
                                <input type="hidden" asp-for="ViewMode" />
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="mb-3">
                                    <label class="form-label" asp-for="DecideContextBody">Decision context (optional)</label>
                                    <textarea asp-for="DecideContextBody" class="form-control" rows="3"></textarea>
                                    <div class="form-text">Decision notes are stored as Transfer of Technology remarks.</div>
                                    <span asp-validation-for="DecideContextBody" class="text-danger"></span>
                                </div>
                                <div class="tot-decision-form__actions">
                                    <button type="submit" name="DecideInput.Approve" value="true" class="btn btn-success">Approve</button>
                                    <button type="submit" name="DecideInput.Approve" value="false" class="btn btn-outline-danger">Reject</button>
                                </div>
                            </form>
                        </div>
                    }
                }
            </div>
        </aside>
    </div>

    @if (selected is { } hasRequestProject && hasRequestProject.RequestState is not null)
    {
        <partial name="_LatestTotRequestModal" model="hasRequestProject" />
    }

    @if (Model.CanSubmit)
    {
        <div class="modal fade" id="tot-submit-modal" tabindex="-1" aria-labelledby="tot-submit-modal-label" aria-hidden="true" data-tot-auto-show="@(Model.ShowSubmitModal ? "true" : "false")">
            <div class="modal-dialog modal-lg modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title fs-5" id="tot-submit-modal-label">Submit update for HoD approval</h2>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <partial name="_SubmitTotUpdateModal" model="Model" />
                    </div>
                </div>
            </div>
        </div>

    }
}
</div>
@section Scripts {
    <script type="module" src="~/js/pages/project-office-reports/tot.js" asp-append-version="true"></script>
}
