@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Tot.IndexModel
@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@using ProjectManagement.Models
@using ProjectManagement.Services.Projects
@using ProjectManagement.Utilities
@{
    ViewData["Title"] = "Transfer of Technology tracker";
    string StatusLabel(ProjectTotStatus status) => status switch
    {
        ProjectTotStatus.NotRequired => "Not required",
        ProjectTotStatus.NotStarted => "Not started",
        ProjectTotStatus.InProgress => "In progress",
        ProjectTotStatus.Completed => "Completed",
        _ => status.ToString()
    };

    string TotStatusBadgeClass(ProjectTotStatus status) => status switch
    {
        ProjectTotStatus.NotRequired => "badge-tot-not-required",
        ProjectTotStatus.NotStarted => "badge-tot-not-started",
        ProjectTotStatus.InProgress => "badge-tot-in-progress",
        ProjectTotStatus.Completed => "badge-tot-completed",
        _ => "badge-tot-not-started"
    };

    string RequestStateLabel(ProjectTotRequestDecisionState state) => state switch
    {
        ProjectTotRequestDecisionState.Pending => "Pending approval",
        ProjectTotRequestDecisionState.Approved => "Approved",
        ProjectTotRequestDecisionState.Rejected => "Rejected",
        _ => state.ToString()
    };

    string RequestStateAccentClass(ProjectTotRequestDecisionState state) => state switch
    {
        ProjectTotRequestDecisionState.Pending => "is-pending",
        ProjectTotRequestDecisionState.Approved => "is-approved",
        ProjectTotRequestDecisionState.Rejected => "is-rejected",
        _ => "is-pending"
    };

    string RequestStateBadgeClass(ProjectTotRequestDecisionState state) => state switch
    {
        ProjectTotRequestDecisionState.Pending => "tot-request-badge-pending",
        ProjectTotRequestDecisionState.Approved => "tot-request-badge-approved",
        ProjectTotRequestDecisionState.Rejected => "tot-request-badge-rejected",
        _ => "tot-request-badge-pending"
    };

    string FoPmLabel(bool? value) => value switch
    {
        true => "Yes",
        false => "No",
        _ => "â€”"
    };

    var istZone = TimeZoneHelper.GetIst();
    DateTime? ToIst(DateTime? value) => value.HasValue
        ? TimeZoneInfo.ConvertTimeFromUtc(DateTime.SpecifyKind(value.Value, DateTimeKind.Utc), istZone)
        : null;

    string? FormatTimestamp(DateTime? utcValue)
    {
        var dt = ToIst(utcValue);
        return dt.HasValue
            ? dt.Value.ToString("dd/MM/yyyy 'at' HH:mm 'IST'", CultureInfo.InvariantCulture)
            : null;
    }

    string? FormatDate(DateOnly? value)
    {
        return value?.ToString("dd/MM/yyyy", CultureInfo.InvariantCulture);
    }

    var showExportModal = ViewData["ShowTotExportModal"] as bool? ?? false;
    var hasProjects = Model.Projects.Count > 0;
    var exportOnlyPending = Model.Export?.OnlyPendingRequests ?? false;
    var exportTotStatus = Model.Export?.TotStatus;
    var exportRequestState = Model.Export?.RequestState;
}

<div class="d-flex justify-content-between align-items-center flex-wrap gap-3 mb-4">
    <div>
        <h1 class="h3 mb-0">Transfer of Technology tracker</h1>
        <p class="text-muted mb-0">Track project ToT progress, submit updates for approval of HoD.</p>
    </div>
    <div class="d-flex flex-wrap gap-2">
        @if (hasProjects)
        {
            <button type="button"
                    class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                    data-bs-toggle="modal"
                    data-bs-target="#tot-export-modal"
                    aria-haspopup="dialog"
                    aria-controls="tot-export-modal"
                    aria-expanded="false">
                <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                <span>Export ToT data</span>
            </button>
        }
        else
        {
            <button type="button"
                    class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                    disabled
                    aria-disabled="true">
                <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                <span>Export ToT data</span>
            </button>
        }
        <button type="button"
                class="btn btn-light tot-filter-trigger"
                data-bs-toggle="modal"
                data-bs-target="#tot-filter-modal"
                aria-haspopup="dialog"
                aria-controls="tot-filter-modal"
                aria-expanded="false">
            <i class="bi bi-search" aria-hidden="true"></i>
            <span class="tot-filter-trigger-label">Search &amp; filter</span>
            <span class="visually-hidden">Open Transfer of Technology tracker filters</span>
        </button>
    </div>
</div>

<div class="modal fade tot-filter-modal" id="tot-filter-modal" tabindex="-1" aria-labelledby="tot-filter-modal-label" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <form id="tot-filter-form" method="get">
                <div class="modal-header">
                    <h2 class="modal-title fs-5" id="tot-filter-modal-label">Search &amp; filter projects</h2>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" asp-for="SelectedProjectId" />
                    <div class="row g-3 align-items-end">
                        <div class="col-12 col-md-6 col-lg-4">
                            <label class="form-label tot-filter-heading" for="tot-search-term">Search</label>
                            <input type="search"
                                   class="form-control"
                                   id="tot-search-term"
                                   name="SearchTerm"
                                   value="@Model.SearchTerm"
                                   placeholder="Search projects or units" />
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <span class="tot-filter-heading">ToT status</span>
                            <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter projects by Transfer of Technology status">
                                <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-all" value="" @(Model.TotStatusFilter is null ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="tot-status-all">All</label>
                                <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-not-required" value="@ProjectTotStatus.NotRequired" @(Model.TotStatusFilter == ProjectTotStatus.NotRequired ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="tot-status-not-required">@StatusLabel(ProjectTotStatus.NotRequired)</label>
                                <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-not-started" value="@ProjectTotStatus.NotStarted" @(Model.TotStatusFilter == ProjectTotStatus.NotStarted ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="tot-status-not-started">@StatusLabel(ProjectTotStatus.NotStarted)</label>
                                <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-in-progress" value="@ProjectTotStatus.InProgress" @(Model.TotStatusFilter == ProjectTotStatus.InProgress ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="tot-status-in-progress">@StatusLabel(ProjectTotStatus.InProgress)</label>
                                <input type="radio" class="btn-check" name="TotStatusFilter" id="tot-status-completed" value="@ProjectTotStatus.Completed" @(Model.TotStatusFilter == ProjectTotStatus.Completed ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="tot-status-completed">@StatusLabel(ProjectTotStatus.Completed)</label>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <span class="tot-filter-heading">Request state</span>
                            <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter projects by request decision state">
                                <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-all" value="" @(Model.RequestStateFilter is null && !Model.OnlyPending ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-all">All</label>
                                <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-pending" value="@ProjectTotRequestDecisionState.Pending" @(Model.RequestStateFilter == ProjectTotRequestDecisionState.Pending ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-pending">@RequestStateLabel(ProjectTotRequestDecisionState.Pending)</label>
                                <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-approved" value="@ProjectTotRequestDecisionState.Approved" @(Model.RequestStateFilter == ProjectTotRequestDecisionState.Approved ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-approved">@RequestStateLabel(ProjectTotRequestDecisionState.Approved)</label>
                                <input type="radio" class="btn-check" name="RequestStateFilter" id="request-state-rejected" value="@ProjectTotRequestDecisionState.Rejected" @(Model.RequestStateFilter == ProjectTotRequestDecisionState.Rejected ? "checked" : null) @(Model.OnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(Model.OnlyPending ? "disabled" : null)" for="request-state-rejected">@RequestStateLabel(ProjectTotRequestDecisionState.Rejected)</label>
                            </div>
                        </div>
                        <div class="col-12 col-sm-6 col-lg-4">
                            <span class="tot-filter-heading">Approvals</span>
                            <div class="form-check form-switch tot-filter-switch">
                                <input class="form-check-input" type="checkbox" asp-for="OnlyPending" id="onlyPending">
                                <label class="form-check-label" for="onlyPending">Only pending approvals</label>
</div>
</div>
</div>
</div>

<div class="modal fade" id="tot-export-modal" tabindex="-1" aria-labelledby="tot-export-modal-label" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="Export">
                <div class="modal-header">
                    <h2 class="modal-title fs-5" id="tot-export-modal-label">Export Transfer of Technology data</h2>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="text-muted mb-3">Configure the export filters to download an Excel workbook for offline analysis.</p>
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                    <input type="hidden" asp-for="SelectedProjectId" />
                    <input type="hidden" asp-for="TotStatusFilter" />
                    <input type="hidden" asp-for="RequestStateFilter" />
                    <input type="hidden" asp-for="SearchTerm" />
                    <input type="hidden" asp-for="OnlyPending" />
                    <div class="row g-3">
                        <div class="col-12">
                            <span class="tot-filter-heading">ToT status</span>
                            <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter exported projects by Transfer of Technology status">
                                <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-all" value="" @(exportTotStatus is null ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="export-tot-status-all">All</label>
                                <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-not-required" value="@ProjectTotStatus.NotRequired" @(exportTotStatus == ProjectTotStatus.NotRequired ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="export-tot-status-not-required">@StatusLabel(ProjectTotStatus.NotRequired)</label>
                                <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-not-started" value="@ProjectTotStatus.NotStarted" @(exportTotStatus == ProjectTotStatus.NotStarted ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="export-tot-status-not-started">@StatusLabel(ProjectTotStatus.NotStarted)</label>
                                <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-in-progress" value="@ProjectTotStatus.InProgress" @(exportTotStatus == ProjectTotStatus.InProgress ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="export-tot-status-in-progress">@StatusLabel(ProjectTotStatus.InProgress)</label>
                                <input type="radio" class="btn-check" name="Export.TotStatus" id="export-tot-status-completed" value="@ProjectTotStatus.Completed" @(exportTotStatus == ProjectTotStatus.Completed ? "checked" : null)>
                                <label class="btn tot-filter-btn" for="export-tot-status-completed">@StatusLabel(ProjectTotStatus.Completed)</label>
                            </div>
                        </div>
                        <div class="col-12">
                            <span class="tot-filter-heading">Request state</span>
                            <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter exported projects by request decision state">
                                <input type="radio" class="btn-check" name="Export.RequestState" id="export-request-state-all" value="" @(exportRequestState is null && !exportOnlyPending ? "checked" : null) @(exportOnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(exportOnlyPending ? "disabled" : null)" for="export-request-state-all">All</label>
                                <input type="radio" class="btn-check" name="Export.RequestState" id="export-request-state-pending" value="@ProjectTotRequestDecisionState.Pending" @(exportRequestState == ProjectTotRequestDecisionState.Pending ? "checked" : null) @(exportOnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(exportOnlyPending ? "disabled" : null)" for="export-request-state-pending">@RequestStateLabel(ProjectTotRequestDecisionState.Pending)</label>
                                <input type="radio" class="btn-check" name="Export.RequestState" id="export-request-state-approved" value="@ProjectTotRequestDecisionState.Approved" @(exportRequestState == ProjectTotRequestDecisionState.Approved ? "checked" : null) @(exportOnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(exportOnlyPending ? "disabled" : null)" for="export-request-state-approved">@RequestStateLabel(ProjectTotRequestDecisionState.Approved)</label>
                                <input type="radio" class="btn-check" name="Export.RequestState" id="export-request-state-rejected" value="@ProjectTotRequestDecisionState.Rejected" @(exportRequestState == ProjectTotRequestDecisionState.Rejected ? "checked" : null) @(exportOnlyPending ? "disabled" : null)>
                                <label class="btn tot-filter-btn @(exportOnlyPending ? "disabled" : null)" for="export-request-state-rejected">@RequestStateLabel(ProjectTotRequestDecisionState.Rejected)</label>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-check form-switch tot-filter-switch">
                                <input class="form-check-input" type="checkbox" asp-for="Export.OnlyPendingRequests" id="export-only-pending">
                                <label class="form-check-label" for="export-only-pending">Only pending approvals</label>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-lg-3">
                            <label class="form-label" for="export-started-from">Started from</label>
                            <input class="form-control" asp-for="Export.StartedFrom" type="date" id="export-started-from" />
                            <span asp-validation-for="Export.StartedFrom" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6 col-lg-3">
                            <label class="form-label" for="export-started-to">Started to</label>
                            <input class="form-control" asp-for="Export.StartedTo" type="date" id="export-started-to" />
                            <span asp-validation-for="Export.StartedTo" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6 col-lg-3">
                            <label class="form-label" for="export-completed-from">Completed from</label>
                            <input class="form-control" asp-for="Export.CompletedFrom" type="date" id="export-completed-from" />
                            <span asp-validation-for="Export.CompletedFrom" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6 col-lg-3">
                            <label class="form-label" for="export-completed-to">Completed to</label>
                            <input class="form-control" asp-for="Export.CompletedTo" type="date" id="export-completed-to" />
                            <span asp-validation-for="Export.CompletedTo" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary d-inline-flex align-items-center gap-2">
                        <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                        <span>Export workbook</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-outline-secondary" form="tot-filter-form">Reset</button>
                    <button type="submit" class="btn btn-primary" form="tot-filter-form">Apply</button>
                </div>
            </form>
        </div>
    </div>
</div>

@if (Model.Summary is { } summary)
{
    <div class="row g-3 mb-4">
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="d-inline-flex align-items-center justify-content-center rounded-circle bg-primary-subtle text-primary" style="width: 3rem; height: 3rem;">
                            <i class="bi bi-kanban" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Tracked projects</div>
                            <div class="fs-3 fw-bold mb-0">@summary.TotalProjects</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="d-inline-flex align-items-center justify-content-center rounded-circle bg-info-subtle text-info" style="width: 3rem; height: 3rem;">
                            <i class="bi bi-diagram-3" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Active ToT streams</div>
                            <div class="fs-3 fw-bold mb-1">@summary.ProjectsRequiringTot</div>
                            <span class="badge text-bg-light text-secondary">@summary.TotNotRequired not required</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="d-inline-flex align-items-center justify-content-center rounded-circle bg-warning-subtle text-warning" style="width: 3rem; height: 3rem;">
                            <i class="bi bi-hourglass-split" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Pending approvals</div>
                            <div class="fs-3 fw-bold mb-1">@summary.PendingApprovals</div>
                            <span class="badge text-bg-warning text-uppercase">Action needed</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="d-inline-flex align-items-center justify-content-center rounded-circle bg-primary-subtle text-primary" style="width: 3rem; height: 3rem;">
                            <i class="bi bi-lightning-charge" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">In progress</div>
                            <div class="fs-3 fw-bold mb-1">@summary.TotInProgress</div>
                            <span class="badge text-bg-primary-subtle text-primary">@summary.TotNotStarted not started</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="d-inline-flex align-items-center justify-content-center rounded-circle bg-secondary-subtle text-secondary" style="width: 3rem; height: 3rem;">
                            <i class="bi bi-award" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">MET Completed</div>
                            <div class="fs-3 fw-bold mb-1">@summary.ProjectsWithMetCompleted</div>
                            <span class="badge text-bg-success text-uppercase">Momentum</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="d-inline-flex align-items-center justify-content-center rounded-circle bg-success-subtle text-success" style="width: 3rem; height: 3rem;">
                            <i class="bi bi-check-circle" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">ToT completed</div>
                            <div class="fs-3 fw-bold mb-1">@summary.TotCompleted</div>
                            <span class="badge text-bg-secondary">@summary.ProjectsWithFirstProductionModel FoPM Mfr</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
    </div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var filterModalEl = document.getElementById('tot-filter-modal');
        if (filterModalEl) {
            var filterTrigger = document.querySelector('[data-bs-target="#tot-filter-modal"]');
            if (filterTrigger) {
                filterModalEl.addEventListener('show.bs.modal', function () {
                    filterTrigger.setAttribute('aria-expanded', 'true');
                });

                filterModalEl.addEventListener('hidden.bs.modal', function () {
                    filterTrigger.setAttribute('aria-expanded', 'false');
                    filterTrigger.focus();
                });
            }

            filterModalEl.addEventListener('shown.bs.modal', function () {
                var searchInput = document.getElementById('tot-search-term');
                if (searchInput) {
                    searchInput.focus();
                    searchInput.select();
                }
            });
        }
    });
</script>

@{ 
    var totalCount = Model.Projects.Count;
    var appliedFilters = new List<string>();
    if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
    {
        appliedFilters.Add($"Search \"{Model.SearchTerm}\"");
    }
    if (Model.TotStatusFilter is { } summaryStatus)
    {
        appliedFilters.Add($"ToT status: {StatusLabel(summaryStatus)}");
    }
    if (Model.OnlyPending)
    {
        appliedFilters.Add("Request state: Pending approvals only");
    }
    else if (Model.RequestStateFilter is { } summaryRequestState)
    {
        appliedFilters.Add($"Request state: {RequestStateLabel(summaryRequestState)}");
    }

    var summaryText = appliedFilters.Any()
        ? $"Filters: {string.Join(", ", appliedFilters)}"
        : "Filters: None";
    var resultCountText = totalCount == 1
        ? "Showing 1 project"
        : $"Showing {totalCount} projects";
}

<div class="card shadow-sm tot-project-list-card mt-4">
    <div class="card-header d-flex flex-wrap gap-2 align-items-center justify-content-between">
        <div class="fw-semibold">@resultCountText</div>
        <div class="text-muted small">@summaryText</div>
    </div>
    <div class="card-body">
        <div class="tot-project-list">
            @if (!Model.Projects.Any())
            {
                <div class="tot-project-empty text-muted">No completed projects match the selected filters.</div>
            }
            else
            {
                foreach (var row in Model.Projects)
                {
                    var isSelected = Model.SelectedProjectId.HasValue && Model.SelectedProjectId.Value == row.ProjectId;
                    var latestRemark = row.LatestExternalRemark ?? row.LatestInternalRemark;
                    var accentClass = row.RequestState is { } requestState ? RequestStateAccentClass(requestState) : string.Empty;
                    <article class="tot-project-card @accentClass @(isSelected ? "is-selected" : string.Empty)">
                        <div class="tot-project-card-header">
                            <div class="tot-project-card-heading">
                                <div class="tot-project-card-title">@row.ProjectName</div>
                                <div class="tot-project-card-unit">@row.SponsoringUnit</div>
                            </div>
                            <div class="tot-project-card-statuses">
                                @if (row.TotStatus is { } status)
                                {
                                    <span class="badge @TotStatusBadgeClass(status)">@StatusLabel(status)</span>
                                }
                                else
                                {
                                    <span class="badge @TotStatusBadgeClass(ProjectTotStatus.NotStarted)">Not started</span>
                                }

                                @if (row.RequestState is { } state)
                                {
                                    <span class="tot-request-badge @RequestStateBadgeClass(state)">@RequestStateLabel(state)</span>
                                }
                                else
                                {
                                    <span class="tot-project-card-no-request text-muted">No request</span>
                                }
                            </div>
                        </div>
                        <div class="tot-project-card-remark">
                            @if (latestRemark is not null)
                            {
                                var createdText = FormatTimestamp(latestRemark.CreatedAtUtc);
                                <div class="tot-project-card-remark-meta">
                                    <span class="fw-semibold">Latest @latestRemark.TypeLabel remark</span>
                                    @if (latestRemark.EventDate.HasValue)
                                    {
                                        <span> (@FormatDate(latestRemark.EventDate))</span>
                                    }
                                    @if (!string.IsNullOrEmpty(createdText))
                                    {
                                        <span> â€¢ posted @createdText</span>
                                    }
                                </div>
                                <div class="tot-project-card-remark-body">@latestRemark.Body</div>
                            }
                            else
                            {
                                <div class="text-muted">No ToT remarks yet.</div>
                            }
                        </div>
                        <div class="tot-project-card-footer">
                            <a class="btn btn-sm btn-outline-primary"
                               asp-route-TotStatusFilter="@Model.TotStatusFilter"
                               asp-route-RequestStateFilter="@Model.RequestStateFilter"
                               asp-route-SearchTerm="@Model.SearchTerm"
                               asp-route-OnlyPending="@Model.OnlyPending"
                               asp-route-SelectedProjectId="@row.ProjectId">
                                View details
                            </a>
                        </div>
                    </article>
                }
            }
        </div>
    </div>
</div>

@if (Model.SelectedProject is { } selected)
{
    var hasRequest = selected.RequestState is not null;
    <div class="row g-4 mt-4">
        <div class="col-12">
            <div class="card h-100">
                <div class="card-header d-flex flex-wrap gap-2 justify-content-between align-items-center">
                    <h2 class="h5 mb-0">@selected.ProjectName</h2>
                    <div class="d-flex align-items-center gap-2">
                        @if (Model.CanSubmit)
                        {
                            <button type="button"
                                    class="btn btn-primary btn-sm"
                                    data-bs-toggle="modal"
                                    data-bs-target="#tot-submit-modal">
                                Submit update
                            </button>
                        }
                        <button type="button"
                                class="btn btn-outline-primary btn-sm"
                                data-bs-toggle="modal"
                                data-bs-target="#tot-request-modal"
                                @(hasRequest ? null : "disabled")>
                            Latest ToT request
                        </button>
                        @if (hasRequest)
                        {
                            <span class="tot-request-badge @RequestStateBadgeClass(selected.RequestState!.Value)">
                                @RequestStateLabel(selected.RequestState.Value)
                            </span>
                        }
                        else
                        {
                            <span class="badge text-bg-secondary">No request</span>
                        }
                    </div>
                </div>
                <div class="card-body">
                    <div class="tot-summary-card">
                        <div class="row g-3">
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-primary">
                                        <i class="bi bi-kanban" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">Current ToT status</div>
                                        <div class="tot-summary-value">@StatusLabel(selected.TotStatus ?? ProjectTotStatus.NotStarted)</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-success">
                                        <i class="bi bi-play-circle" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">Started on</div>
                                        <div class="tot-summary-value">@(FormatDate(selected.TotStartedOn) ?? "â€”")</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-info">
                                        <i class="bi bi-flag" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">Completed on</div>
                                        <div class="tot-summary-value">@(FormatDate(selected.TotCompletedOn) ?? "â€”")</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-warning">
                                        <i class="bi bi-clipboard-data" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">MET details</div>
                                        <div class="tot-summary-value">@(string.IsNullOrWhiteSpace(selected.TotMetDetails) ? "â€”" : selected.TotMetDetails)</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-secondary">
                                        <i class="bi bi-calendar-check" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">MET completed on</div>
                                        <div class="tot-summary-value">@(FormatDate(selected.TotMetCompletedOn) ?? "â€”")</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-danger">
                                        <i class="bi bi-award" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">First production model manufactured</div>
                                        <div class="tot-summary-value">@FoPmLabel(selected.TotFirstProductionModelManufactured)</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-muted">
                                        <i class="bi bi-gear" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">Manufactured on</div>
                                        <div class="tot-summary-value">@(FormatDate(selected.TotFirstProductionModelManufacturedOn) ?? "â€”")</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-primary">
                                        <i class="bi bi-person-check" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">Last approved by</div>
                                        <div class="tot-summary-value">@(string.IsNullOrWhiteSpace(selected.TotLastApprovedBy) ? "â€”" : selected.TotLastApprovedBy)</div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-6 col-xl-4">
                                <div class="tot-summary-item h-100">
                                    <div class="tot-summary-icon text-success">
                                        <i class="bi bi-clock-history" aria-hidden="true"></i>
                                    </div>
                                    <div class="tot-summary-content">
                                        <div class="tot-summary-label">Approved on</div>
                                        <div class="tot-summary-value">@(FormatTimestamp(selected.TotLastApprovedOnUtc) ?? "â€”")</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mt-1">
        <div class="col-12">
            <div class="card h-100">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h2 class="h5 mb-0">ToT remarks</h2>
                    <a class="btn btn-sm btn-outline-primary"
                       asp-page="/Projects/Overview"
                       asp-route-id="@selected.ProjectId"
                       asp-fragment="remarks-panel">
                        Open remarks panel
                    </a>
                </div>
                <div class="card-body">
                    @{
                        var externalRemark = selected.LatestExternalRemark;
                        var internalRemark = selected.LatestInternalRemark;
                        var hasExternalRemark = externalRemark is not null;
                        var hasInternalRemark = internalRemark is not null;
                        var hasBothRemarks = hasExternalRemark && hasInternalRemark;
                    }
                    @if (!hasExternalRemark && !hasInternalRemark)
                    {
                        <p class="text-muted mb-0">No ToT remarks recorded yet.</p>
                    }
                    else
                    {
                        <div class="tot-remarks-tabs">
                            @if (hasBothRemarks)
                            {
                                <ul class="nav nav-pills tot-remarks-tabs-nav" id="tot-remarks-tablist" role="tablist">
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link active"
                                                id="tot-remark-external-tab"
                                                type="button"
                                                role="tab"
                                                data-bs-toggle="pill"
                                                data-bs-target="#tot-remark-external"
                                                aria-controls="tot-remark-external"
                                                aria-selected="true">
                                            External
                                        </button>
                                    </li>
                                    <li class="nav-item" role="presentation">
                                        <button class="nav-link"
                                                id="tot-remark-internal-tab"
                                                type="button"
                                                role="tab"
                                                data-bs-toggle="pill"
                                                data-bs-target="#tot-remark-internal"
                                                aria-controls="tot-remark-internal"
                                                aria-selected="false">
                                            Internal
                                        </button>
                                    </li>
                                </ul>
                                <div class="tab-content" id="tot-remarks-tabcontent">
                                    <div class="tab-pane fade show active" id="tot-remark-external" role="tabpanel" aria-labelledby="tot-remark-external-tab">
                                        @if (externalRemark is not null)
                                        {
                                            <div class="tot-remark-card" data-remark-type="external">
                                                <div class="tot-remark-card-header">
                                                    <h3 class="h6 tot-remark-card-title mb-0">External remark</h3>
                                                    <div class="tot-remark-meta">
                                                        <span class="tot-remark-meta-item">
                                                            <i class="bi bi-clock-history" aria-hidden="true"></i>
                                                            <span class="tot-remark-meta-label">Posted</span>
                                                            <span>@(FormatTimestamp(externalRemark.CreatedAtUtc) ?? "â€”")</span>
                                                        </span>
                                                        @if (externalRemark.EventDate.HasValue)
                                                        {
                                                            <span class="tot-remark-meta-item">
                                                                <i class="bi bi-calendar-event" aria-hidden="true"></i>
                                                                <span class="tot-remark-meta-label">Event</span>
                                                                <span>@FormatDate(externalRemark.EventDate)</span>
                                                            </span>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="tot-remark-card-body">
                                                    <div class="tot-remark-card-text">@externalRemark.Body</div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="tab-pane fade" id="tot-remark-internal" role="tabpanel" aria-labelledby="tot-remark-internal-tab">
                                        @if (internalRemark is not null)
                                        {
                                            <div class="tot-remark-card" data-remark-type="internal">
                                                <div class="tot-remark-card-header">
                                                    <h3 class="h6 tot-remark-card-title mb-0">Internal remark</h3>
                                                    <div class="tot-remark-meta">
                                                        <span class="tot-remark-meta-item">
                                                            <i class="bi bi-clock-history" aria-hidden="true"></i>
                                                            <span class="tot-remark-meta-label">Posted</span>
                                                            <span>@(FormatTimestamp(internalRemark.CreatedAtUtc) ?? "â€”")</span>
                                                        </span>
                                                        @if (internalRemark.EventDate.HasValue)
                                                        {
                                                            <span class="tot-remark-meta-item">
                                                                <i class="bi bi-calendar-event" aria-hidden="true"></i>
                                                                <span class="tot-remark-meta-label">Event</span>
                                                                <span>@FormatDate(internalRemark.EventDate)</span>
                                                            </span>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="tot-remark-card-body">
                                                    <div class="tot-remark-card-text">@internalRemark.Body</div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                            else if (hasExternalRemark && externalRemark is not null)
                            {
                                <div class="tot-remark-card" data-remark-type="external">
                                    <div class="tot-remark-card-header">
                                        <h3 class="h6 tot-remark-card-title mb-0">External remark</h3>
                                        <div class="tot-remark-meta">
                                            <span class="tot-remark-meta-item">
                                                <i class="bi bi-clock-history" aria-hidden="true"></i>
                                                <span class="tot-remark-meta-label">Posted</span>
                                                <span>@(FormatTimestamp(externalRemark.CreatedAtUtc) ?? "â€”")</span>
                                            </span>
                                            @if (externalRemark.EventDate.HasValue)
                                            {
                                                <span class="tot-remark-meta-item">
                                                    <i class="bi bi-calendar-event" aria-hidden="true"></i>
                                                    <span class="tot-remark-meta-label">Event</span>
                                                    <span>@FormatDate(externalRemark.EventDate)</span>
                                                </span>
                                            }
                                        </div>
                                    </div>
                                    <div class="tot-remark-card-body">
                                        <div class="tot-remark-card-text">@externalRemark.Body</div>
                                    </div>
                                </div>
                            }
                            else if (hasInternalRemark && internalRemark is not null)
                            {
                                <div class="tot-remark-card" data-remark-type="internal">
                                    <div class="tot-remark-card-header">
                                        <h3 class="h6 tot-remark-card-title mb-0">Internal remark</h3>
                                        <div class="tot-remark-meta">
                                            <span class="tot-remark-meta-item">
                                                <i class="bi bi-clock-history" aria-hidden="true"></i>
                                                <span class="tot-remark-meta-label">Posted</span>
                                                <span>@(FormatTimestamp(internalRemark.CreatedAtUtc) ?? "â€”")</span>
                                            </span>
                                            @if (internalRemark.EventDate.HasValue)
                                            {
                                                <span class="tot-remark-meta-item">
                                                    <i class="bi bi-calendar-event" aria-hidden="true"></i>
                                                    <span class="tot-remark-meta-label">Event</span>
                                                    <span>@FormatDate(internalRemark.EventDate)</span>
                                                </span>
                                            }
                                        </div>
                                    </div>
                                    <div class="tot-remark-card-body">
                                        <div class="tot-remark-card-text">@internalRemark.Body</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        @if (Model.CanApprove && selected.RequestState == ProjectTotRequestDecisionState.Pending && selected.RequestRowVersion is not null)
        {
            <div class="col-lg-6">
                <div class="card h-100">
                    <div class="card-header">
                        <h2 class="h5 mb-0">HoD decision</h2>
                    </div>
                    <div class="card-body">
                        <form method="post" asp-page-handler="Decide">
                            <input asp-for="DecideInput.ProjectId" type="hidden" />
                            <input asp-for="DecideInput.RowVersion" type="hidden" />
                            <input type="hidden" asp-for="TotStatusFilter" />
                            <input type="hidden" asp-for="RequestStateFilter" />
                            <input type="hidden" asp-for="SearchTerm" />
                            <input type="hidden" asp-for="OnlyPending" />
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="mt-3">
                                <label class="form-label" asp-for="DecideContextBody">Decision context (optional)</label>
                                <textarea asp-for="DecideContextBody" class="form-control" rows="3"></textarea>
                                <div class="form-text">Decision notes are stored as Transfer of Technology remarks.</div>
                                <span asp-validation-for="DecideContextBody" class="text-danger"></span>
                            </div>
                            <div class="d-flex gap-2">
                                <button type="submit" name="DecideInput.Approve" value="true" class="btn btn-success">Approve</button>
                                <button type="submit" name="DecideInput.Approve" value="false" class="btn btn-outline-danger">Reject</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (hasRequest)
    {
        <partial name="_LatestTotRequestModal" model="selected" />
    }

    @if (Model.CanSubmit)
    {
        <div class="modal fade" id="tot-submit-modal" tabindex="-1" aria-labelledby="tot-submit-modal-label" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-scrollable">
                <div class="modal-content">
                    <div class="modal-header">
                        <h2 class="modal-title fs-5" id="tot-submit-modal-label">Submit update for HoD approval</h2>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <partial name="_SubmitTotUpdateModal" model="Model" />
                    </div>
                </div>
            </div>
        </div>
    }
}

@if (showExportModal)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var exportModalEl = document.getElementById('tot-export-modal');
            if (!exportModalEl) {
                return;
            }

            if (typeof bootstrap !== 'undefined') {
                bootstrap.Modal.getOrCreateInstance(exportModalEl).show();
            } else {
                exportModalEl.classList.add('show');
                exportModalEl.style.display = 'block';
                exportModalEl.removeAttribute('aria-hidden');
            }
        });
    </script>
}

@if (Model.ShowSubmitModal)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var submitModalEl = document.getElementById('tot-submit-modal');
            if (submitModalEl && typeof bootstrap !== 'undefined') {
                var submitModal = bootstrap.Modal.getOrCreateInstance(submitModalEl);
                submitModal.show();
            }
        });
    </script>
}
