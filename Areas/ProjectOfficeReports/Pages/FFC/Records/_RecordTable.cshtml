@model ProjectManagement.Areas.ProjectOfficeReports.Pages.FFC.Records.ManageModel

@{
    string GetMilestoneBadgeClass(bool completed) => completed
        ? "bg-success-subtle text-success-emphasis"
        : "bg-secondary-subtle text-secondary-emphasis";

    string GetMilestoneBadgeText(bool completed) => completed ? "Completed" : "Pending";

    string? FormatMilestoneDate(System.DateOnly? date) => date?.ToString("d");
}

<div class="table-responsive">
<table class="table table-sm align-middle mb-0">
    <thead>
        <tr>
            <th>
                <a asp-page="./Manage" asp-all-route-data='Model.BuildRoute(page: 1, sort: "year", dir: Model.GetSortDirectionFor("year"))' class="text-decoration-none d-inline-flex align-items-center gap-1">
                    <span>Year</span>
                    <i class='@Model.GetSortIconClass("year")'></i>
                </a>
            </th>
            <th>
                <a asp-page="./Manage" asp-all-route-data='Model.BuildRoute(page: 1, sort: "country", dir: Model.GetSortDirectionFor("country"))' class="text-decoration-none d-inline-flex align-items-center gap-1">
                    <span>Country</span>
                    <i class='@Model.GetSortIconClass("country")'></i>
                </a>
            </th>
            <th>IPA</th>
            <th>GSL</th>
            <th>Delivery</th>
            <th>Installation</th>
            <th>Remarks</th>
            <th class="text-end">Actions</th>
        </tr>
    </thead>
    <tbody>
    @if (!Model.Records.Any())
    {
        <tr>
            <td colspan="8" class="text-center text-muted">No records found.</td>
        </tr>
    }
    else
    {
        foreach (var record in Model.Records)
        {
            <tr>
                <td>@record.Year</td>
                <td>@record.Country?.Name</td>
                <td class="text-center">
                    @{ var ipaDate = FormatMilestoneDate(record.IpaDate); }
                    <span class="badge @GetMilestoneBadgeClass(record.IpaYes)">@GetMilestoneBadgeText(record.IpaYes)</span>
                    @if (!string.IsNullOrWhiteSpace(ipaDate))
                    {
                        <small class="text-muted d-block">@ipaDate</small>
                    }
                </td>
                <td class="text-center">
                    @{ var gslDate = FormatMilestoneDate(record.GslDate); }
                    <span class="badge @GetMilestoneBadgeClass(record.GslYes)">@GetMilestoneBadgeText(record.GslYes)</span>
                    @if (!string.IsNullOrWhiteSpace(gslDate))
                    {
                        <small class="text-muted d-block">@gslDate</small>
                    }
                </td>
                <td class="text-center">
                    @{ var deliveryDate = FormatMilestoneDate(record.DeliveryDate); }
                    <span class="badge @GetMilestoneBadgeClass(record.DeliveryYes)">@GetMilestoneBadgeText(record.DeliveryYes)</span>
                    @if (!string.IsNullOrWhiteSpace(deliveryDate))
                    {
                        <small class="text-muted d-block">@deliveryDate</small>
                    }
                </td>
                <td class="text-center">
                    @{ var installationDate = FormatMilestoneDate(record.InstallationDate); }
                    <span class="badge @GetMilestoneBadgeClass(record.InstallationYes)">@GetMilestoneBadgeText(record.InstallationYes)</span>
                    @if (!string.IsNullOrWhiteSpace(installationDate))
                    {
                        <small class="text-muted d-block">@installationDate</small>
                    }
                </td>
                <td class="text-break" style="max-width:220px;">
                    <span class="d-inline-block text-truncate w-100" style="max-width:220px;" data-bs-toggle="tooltip" data-bs-placement="top" title="@record.OverallRemarks">@record.OverallRemarks</span>
                </td>
                <td class="text-end">
                    <authorize roles="Admin,HoD">
                        <a asp-page="./Manage" asp-all-route-data="Model.BuildRouteForEdit(record.Id)" class="btn btn-link btn-sm">Edit</a>
                    </authorize>
                    <a asp-page="./Projects/Manage" asp-route-recordId="@record.Id" class="btn btn-link btn-sm">Projects</a>
                    <a asp-page="./Attachments/Upload" asp-route-recordId="@record.Id" class="btn btn-link btn-sm">Attachments</a>
                    @if (!(User.IsInRole("Admin") || User.IsInRole("HoD")))
                    {
                        <span class="text-muted">Read only</span>
                    }
                </td>
            </tr>
        }
    }
    </tbody>
</table>
</div>

<nav aria-label="Records pagination" class="mt-2">
    <ul class="pagination pagination-sm mb-0">
        <li class="page-item @(Model.PageNumber <= 1 ? "disabled" : string.Empty)">
            <a class="page-link" asp-page="./Manage" asp-all-route-data='Model.BuildRoute(page: Math.Max(1, Model.PageNumber - 1))' aria-label="Previous" tabindex="@(Model.PageNumber <= 1 ? -1 : 0)">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (var pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
        {
            <li class="page-item @(pageNumber == Model.PageNumber ? "active" : string.Empty)">
                <a class="page-link" asp-page="./Manage" asp-all-route-data='Model.BuildRoute(page: pageNumber)'>@pageNumber</a>
            </li>
        }
        <li class="page-item @(Model.PageNumber >= Model.TotalPages ? "disabled" : string.Empty)">
            <a class="page-link" asp-page="./Manage" asp-all-route-data='Model.BuildRoute(page: Math.Min(Model.TotalPages, Model.PageNumber + 1))' aria-label="Next" tabindex="@(Model.PageNumber >= Model.TotalPages ? -1 : 0)">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
