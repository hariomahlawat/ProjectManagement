@model ProjectManagement.Areas.ProjectOfficeReports.ViewModels.FfcRecordCardViewModel
@using System
@using System.Collections.Generic
@using System.Globalization
@using System.Linq
@using ProjectManagement.Areas.ProjectOfficeReports.Domain
@using ProjectManagement.Models
@{
    var record = Model.Record;
    var milestoneStatuses = new[]
    {
        new { Title = "IPA", IsComplete = record.IpaYes, Date = record.IpaDate, Remarks = record.IpaRemarks },
        new { Title = "GSL", IsComplete = record.GslYes, Date = record.GslDate, Remarks = record.GslRemarks },
        new { Title = "Delivery", IsComplete = record.DeliveryYes, Date = record.DeliveryDate, Remarks = record.DeliveryRemarks },
        new { Title = "Installation", IsComplete = record.InstallationYes, Date = record.InstallationDate, Remarks = record.InstallationRemarks }
    };

    var projects = record.Projects
        .OrderBy(p => p.Name)
        .ToList();
    var projectCount = projects.Count;
    var countryName = record.Country?.Name ?? "Unassigned";

    var attachments = record.Attachments;
    var attachmentCount = attachments.Count;
    var pdfCount = attachments.Count(a => a.Kind == FfcAttachmentKind.Pdf);
    var photoCount = attachments.Count(a => a.Kind == FfcAttachmentKind.Photo);

    static string FormatDate(DateOnly? value) => value?.ToString("d MMM yyyy", CultureInfo.InvariantCulture) ?? string.Empty;

    var rollupStatus = ViewData["RollupProjectStatus"] as IReadOnlyDictionary<int, ProjectLifecycleStatus>
        ?? new Dictionary<int, ProjectLifecycleStatus>();
    var rollupExternalRemarks = ViewData["RollupProjectExternalRemark"] as IReadOnlyDictionary<int, string?>
        ?? new Dictionary<int, string?>();
    var rollupStageSummaries = ViewData["RollupProjectStageSummary"] as IReadOnlyDictionary<int, string?>
        ?? new Dictionary<int, string?>();

    static string FormatLifecycleStatus(ProjectLifecycleStatus status) => status switch
    {
        ProjectLifecycleStatus.Active => "Active",
        ProjectLifecycleStatus.Completed => "Completed",
        ProjectLifecycleStatus.Cancelled => "Cancelled",
        _ => status.ToString()
    };

    static string GetProjectBadgeClass(ProjectLifecycleStatus status) => status switch
    {
        ProjectLifecycleStatus.Active => "bg-primary-subtle text-primary",
        ProjectLifecycleStatus.Completed => "bg-success-subtle text-success",
        ProjectLifecycleStatus.Cancelled => "bg-secondary-subtle text-secondary",
        _ => "bg-secondary-subtle text-secondary"
    };
}

<div class="pm-card pm-shadow ffc-record-card">
    <div class="pm-card-header ffc-record-card__header">
        <div class="ffc-record-card__identity">
            <span class="ffc-record-card__year">@record.Year</span>
            <div class="ffc-record-card__identity-text">
                <h2 class="ffc-record-card__country">@countryName</h2>
            </div>
        </div>
        <div class="ffc-record-card__summary" aria-label="Record summary">
            <div class="ffc-record-card__summary-item ffc-record-card__summary-item--projects">
                <span class="ffc-record-card__summary-value ffc-record-card__summary-value--projects">@projectCount</span>
                <span class="ffc-record-card__summary-label">Project@(projectCount == 1 ? string.Empty : "s")</span>
            </div>
            <div class="ffc-record-card__summary-item ffc-record-card__summary-item--attachments">
                <span class="ffc-record-card__summary-value ffc-record-card__summary-value--attachments">@attachmentCount</span>
                <span class="ffc-record-card__summary-label">Attachment@(attachmentCount == 1 ? string.Empty : "s")</span>
            </div>
        </div>
    </div>
    <div class="pm-card-body ffc-record-card__body">
        <section class="ffc-record-card__section" aria-label="Milestone status">
            <h3 class="ffc-record-card__section-title">Milestones</h3>
            <div class="ffc-record-card__statuses">
                @foreach (var status in milestoneStatuses)
                {
                    var dateText = FormatDate(status.Date);
                    var milestoneKey = status.Title.ToLowerInvariant().Replace(" ", "-");
                    var statusClass = status.IsComplete ? "ffc-record-card__status--complete" : "ffc-record-card__status--pending";
                    <article class="ffc-record-card__status @statusClass ffc-record-card__status--@milestoneKey">
                        <header class="ffc-record-card__status-header">
                            <span class="ffc-record-card__status-title">@status.Title</span>
                            <span class="badge rounded-pill @(status.IsComplete ? "text-bg-success" : "text-bg-secondary")" aria-label="@status.Title status">@(status.IsComplete ? "Yes" : "No")</span>
                        </header>
                        @if (!string.IsNullOrWhiteSpace(dateText))
                        {
                            <div class="ffc-record-card__status-date">@dateText</div>
                        }
                        @if (!string.IsNullOrWhiteSpace(status.Remarks))
                        {
                            <p class="ffc-record-card__status-remarks mb-0">@status.Remarks</p>
                        }
                    </article>
                }
            </div>
        </section>

        <section class="ffc-record-card__section" aria-label="Overall remarks">
            <h3 class="ffc-record-card__section-title">Overall remarks</h3>
            @if (string.IsNullOrWhiteSpace(record.OverallRemarks))
            {
                <p class="text-muted small mb-0">No overall remarks recorded.</p>
            }
            else
            {
                <p class="mb-0">@record.OverallRemarks</p>
            }
        </section>

        <section class="ffc-record-card__section" aria-label="Linked projects">
            <h3 class="ffc-record-card__section-title">Project rollup</h3>
            @if (projectCount == 0)
            {
                <p class="text-muted small mb-0">No projects linked yet.</p>
            }
            else
            {
                var statusMap = rollupStatus;
                var remarkMap = rollupExternalRemarks;
                var stageMap = rollupStageSummaries;

                @foreach (var project in projects.Take(3))
                {
                    if (project.LinkedProjectId is int projId)
                    {
                        var displayName = project.LinkedProject?.Name ?? project.Name;
                        var status = (statusMap != null && statusMap.TryGetValue(projId, out var st))
                            ? st
                            : ProjectLifecycleStatus.Active;
                        var externalRemark = (remarkMap != null && remarkMap.TryGetValue(projId, out var remark))
                            ? remark
                            : null;
                        var stageSummary = (stageMap != null && stageMap.TryGetValue(projId, out var stage))
                            ? stage
                            : null;

                        <div class="d-flex align-items-start mb-2 position-relative">
                            <div class="me-2">
                                <span class="badge @GetProjectBadgeClass(status)">@FormatLifecycleStatus(status)</span>
                            </div>
                            <div class="flex-grow-1">
                                <div class="fw-semibold">
                                    <a asp-page="/Projects/Overview"
                                       asp-route-id="@projId"
                                       class="link-body-emphasis text-decoration-none stretched-link"
                                       title="Open @displayName">
                                        @displayName
                                    </a>
                                </div>
                                @if (!string.Equals(displayName, project.Name, StringComparison.Ordinal))
                                {
                                    <div class="text-muted small">@project.Name</div>
                                }
                                @if (status == ProjectLifecycleStatus.Active && !string.IsNullOrWhiteSpace(stageSummary))
                                {
                                    <div class="text-muted small">@stageSummary</div>
                                }
                                <div class="text-muted small">
                                    @if (!string.IsNullOrWhiteSpace(externalRemark))
                                    {
                                        @externalRemark
                                    }
                                    else if (!string.IsNullOrWhiteSpace(project.Remarks))
                                    {
                                        @project.Remarks
                                    }
                                    else
                                    {
                                        <span class="text-body-secondary">not started yet</span>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="mb-2">
                            <div class="fw-semibold">@project.Name</div>
                            @if (!string.IsNullOrWhiteSpace(project.Remarks))
                            {
                                <div class="text-muted small">@project.Remarks</div>
                            }
                        </div>
                    }
                }

                @if (projectCount > 3)
                {
                    <p class="text-muted small mb-0">+@(projectCount - 3) more project(s)</p>
                }
            }
        </section>

        <section class="ffc-record-card__section" aria-label="Attachments">
            <h3 class="ffc-record-card__section-title">Attachments</h3>
            @if (attachmentCount == 0)
            {
                <p class="text-muted small mb-0">No attachments uploaded.</p>
            }
            else
            {
                var pdfSummary = pdfCount > 0 ? $"{pdfCount} PDF{(pdfCount == 1 ? string.Empty : "s")}" : null;
                var photoSummary = photoCount > 0 ? $"{photoCount} photo{(photoCount == 1 ? string.Empty : "s")}" : null;
                var parts = new[] { pdfSummary, photoSummary }
                    .Where(part => !string.IsNullOrWhiteSpace(part))
                    .ToArray();
                <p class="ffc-record-card__attachments mb-0">
                    <span class="fw-semibold">@attachmentCount</span> attachment@(attachmentCount == 1 ? string.Empty : "s")
                    @if (parts.Length > 0)
                    {
                        <span class="text-muted">(@string.Join(" • ", parts))</span>
                    }
                </p>
            }
        </section>

        <footer class="ffc-record-card__footer">
            @if (Model.CanManageRecords)
            {
                <div class="d-flex flex-wrap gap-2">
                    <a asp-area="ProjectOfficeReports"
                       asp-page="/FFC/Records/Manage"
                       asp-route-editId="@record.Id"
                       asp-all-route-data="Model.RouteValues"
                       class="btn btn-outline-primary btn-sm">Manage record</a>
                    <a asp-area="ProjectOfficeReports"
                       asp-page="/FFC/Records/Projects/Manage"
                       asp-route-recordId="@record.Id"
                       class="btn btn-outline-secondary btn-sm">Projects</a>
                    <a asp-area="ProjectOfficeReports"
                       asp-page="/FFC/Records/Attachments/Upload"
                       asp-route-recordId="@record.Id"
                       class="btn btn-outline-secondary btn-sm">Attachments</a>
                </div>
            }
            else
            {
                <p class="ffc-record-card__read-only text-muted small mb-0">You have read-only access to this record.</p>
            }
        </footer>
    </div>
</div>
