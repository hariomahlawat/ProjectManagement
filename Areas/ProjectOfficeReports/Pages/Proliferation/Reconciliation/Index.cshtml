@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Proliferation.Reconciliation.IndexModel
@{
    ViewData["Title"] = "Proliferation reconciliation";
    var sources = new[] { ProliferationSource.Internal, ProliferationSource.External };
}

@functions {
    private static string FormatNumber(int? value) => value.HasValue ? value.Value.ToString("N0") : "—";
    private static string FormatDecimal(decimal? value) => value.HasValue ? value.Value.ToString("N2") : "—";
    private static string ModeBadgeClass(ProliferationPreferenceMode mode) => mode switch
    {
        ProliferationPreferenceMode.UseYearly => "bg-primary",
        ProliferationPreferenceMode.UseGranular => "bg-success",
        _ => "bg-secondary"
    };
    private static string RowVersionString(ProliferationPreferenceMetadata preference)
        => preference.RowVersion is { Length: > 0 } rv ? Convert.ToBase64String(rv) : string.Empty;
}

<div class="row align-items-center mb-3">
    <div class="col">
        <h1 class="h3 mb-0">Proliferation reconciliation</h1>
        <p class="text-muted mb-0">Compare yearly and granular submissions, review variances and adjust data source preferences.</p>
    </div>
</div>

<div class="card shadow-sm mb-4">
    <div class="card-body">
        <form method="get" class="row gy-2 gx-3 align-items-end">
            <div class="col-12 col-md-4">
                <label class="form-label fw-semibold">Source</label>
                <div class="d-flex gap-3">
                    @foreach (var source in sources)
                    {
                        var radioId = $"source-{(int)source}";
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="Source" id="@radioId" value="@source" @(Model.Source == source ? "checked" : null) />
                            <label class="form-check-label" for="@radioId">@source</label>
                        </div>
                    }
                </div>
            </div>
            <div class="col-12 col-md-3">
                <label for="year-select" class="form-label fw-semibold">Year</label>
                <select id="year-select" class="form-select" name="Year">
                    <option value="">Latest available</option>
                    @foreach (var year in Model.YearOptions)
                    {
                        <option value="@year" @(Model.Year == year ? "selected" : null)>@year</option>
                    }
                </select>
            </div>
            <div class="col-12 col-md-auto">
                <button type="submit" class="btn btn-primary">Apply filters</button>
            </div>
        </form>
    </div>
</div>

@if (!Model.Rows.Any())
{
    <div class="alert alert-info">No reconciliation data was found for the selected filters.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th scope="col">Project</th>
                    <th scope="col" class="text-nowrap">Year</th>
                    <th scope="col">Yearly metrics</th>
                    <th scope="col">Granular metrics</th>
                    <th scope="col">Variance</th>
                    <th scope="col">Preference</th>
                    <th scope="col" class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var row in Model.Rows)
                {
                    var hasYearly = row.Yearly is not null;
                    var hasGranular = row.GranularSum is not null;
                    var rowVersion = RowVersionString(row.Preference);
                    var disableAuto = !row.Preference.HasPreference;
                    var disableYearly = !hasYearly || row.Preference.Mode == ProliferationPreferenceMode.UseYearly;
                    var disableGranular = !hasGranular || row.Source != ProliferationSource.External || row.Preference.Mode == ProliferationPreferenceMode.UseGranular;
                    <tr data-pro-rec-row>
                        <td>
                            <div class="fw-semibold">@row.ProjectName</div>
                            <div class="text-muted small">@row.Source</div>
                        </td>
                        <td>@row.Year</td>
                        <td>
                            <div>Direct: @FormatNumber(row.Yearly?.DirectBeneficiaries)</div>
                            <div>Indirect: @FormatNumber(row.Yearly?.IndirectBeneficiaries)</div>
                            <div>Investment: @FormatDecimal(row.Yearly?.InvestmentValue)</div>
                        </td>
                        <td>
                            <div>Direct: @FormatNumber(row.GranularSum?.DirectBeneficiaries)</div>
                            <div>Indirect: @FormatNumber(row.GranularSum?.IndirectBeneficiaries)</div>
                            <div>Investment: @FormatDecimal(row.GranularSum?.InvestmentValue)</div>
                        </td>
                        <td>
                            <div>Direct: @FormatNumber(row.Variance?.DirectBeneficiaries)</div>
                            <div>Indirect: @FormatNumber(row.Variance?.IndirectBeneficiaries)</div>
                            <div>Investment: @FormatDecimal(row.Variance?.InvestmentValue)</div>
                        </td>
                        <td>
                            <span class="badge @ModeBadgeClass(row.Preference.Mode)">@row.Preference.Mode</span>
                            @if (row.Preference.HasPreference)
                            {
                                <div class="small text-muted mt-1">
                                    Preferred year: @row.Preference.PreferredYear
                                    @if (row.Preference.PreferredYearMatches)
                                    {
                                        <span class="text-success">(matches selected year)</span>
                                    }
                                    else
                                    {
                                        <span class="text-warning">(out of sync with selected year)</span>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="small text-muted mt-1">Using automatic mode.</div>
                            }
                        </td>
                        <td class="text-end">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-outline-secondary btn-sm" data-pro-rec-action="auto" data-project-id="@row.ProjectId" data-source="@row.Source" data-year="@row.Year" data-row-version="@rowVersion" @(disableAuto ? "disabled" : null)>Set auto</button>
                                <button type="button" class="btn btn-outline-primary btn-sm" data-pro-rec-action="yearly" data-project-id="@row.ProjectId" data-source="@row.Source" data-year="@row.Year" data-row-version="@rowVersion" @(disableYearly ? "disabled" : null)>Use yearly</button>
                                <button type="button" class="btn btn-outline-success btn-sm" data-pro-rec-action="granular" data-project-id="@row.ProjectId" data-source="@row.Source" data-year="@row.Year" data-row-version="@rowVersion" @(disableGranular ? "disabled" : null)>Use granular</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<form method="post" class="d-none" data-pro-rec-antiforgery>
    @Html.AntiForgeryToken()
</form>

<div class="visually-hidden" data-pro-rec-toast-container></div>

@section Scripts {
    <script src="~/js/pages/project-office-reports/proliferation-reconciliation.js" asp-append-version="true"></script>
}
