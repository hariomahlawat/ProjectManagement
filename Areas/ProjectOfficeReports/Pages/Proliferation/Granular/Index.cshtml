@page
@using ProjectManagement.Areas.ProjectOfficeReports.Domain
@using ProjectManagement.Infrastructure
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Proliferation.Granular.IndexModel
@{
    ViewData["Title"] = "Granular proliferation metrics";
    string? toast = TempData["ToastMessage"] as string;
    string? toastWarning = TempData["ToastWarning"] as string;
    string? toastError = TempData["ToastError"] as string;
    var approvedCount = Model.ApprovedEntries.Count;
    var pendingCount = Model.PendingRequests.Count;
    var projectOptions = Model.Projects.Count;
}

@section Styles {
    <link rel="stylesheet" href="~/css/project-office-reports/proliferation-management.css" asp-append-version="true" />
}

<section class="pro-shell container-xxl py-4">
    <header class="pro-hero pro-hero--metrics">
        <div class="pro-hero__content">
            <span class="pro-hero__eyebrow">Granular metrics</span>
            <h1 class="pro-hero__title">Granular proliferation metrics</h1>
            <p class="pro-hero__subtitle">
                Track monthly or quarterly reach for completed projects, submit new entries, and approve pending requests.
            </p>
        </div>
        <dl class="pro-hero__stats">
            <div class="pro-hero__stat">
                <dt class="pro-hero__stat-label">Projects available</dt>
                <dd class="pro-hero__stat-value">@projectOptions</dd>
            </div>
            <div class="pro-hero__stat">
                <dt class="pro-hero__stat-label">Approved entries</dt>
                <dd class="pro-hero__stat-value">@approvedCount</dd>
            </div>
            <div class="pro-hero__stat">
                <dt class="pro-hero__stat-label">Pending approvals</dt>
                <dd class="pro-hero__stat-value">@pendingCount</dd>
            </div>
        </dl>
    </header>

    <section class="pro-section">
        @if (!string.IsNullOrWhiteSpace(toast))
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @toast
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (!string.IsNullOrWhiteSpace(toastWarning))
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                @toastWarning
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (!string.IsNullOrWhiteSpace(toastError))
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @toastError
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    </section>

    <section class="pro-section">
        <div class="row g-4">
            <div class="col-xl-5">
                <div class="card pro-card pro-card--form h-100">
                    <div class="card-header pro-card__header">
                        <h2 class="h5 mb-0">Submit granular metrics</h2>
                    </div>
                    <div class="card-body pro-card__body">
                        <form method="post" asp-page-handler="Submit" class="pro-form">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div>
                                <label asp-for="Input.ProjectId" class="form-label"></label>
                                <select asp-for="Input.ProjectId" class="form-select">
                                    <option value="">Select a completed project</option>
                                    @foreach (var project in Model.Projects)
                                    {
                                        <option value="@project.Id">@project.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="Input.ProjectId" class="text-danger"></span>
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <label asp-for="Input.Source" class="form-label"></label>
                                    <select asp-for="Input.Source" class="form-select">
                                        @foreach (ProliferationSource source in Enum.GetValues<ProliferationSource>())
                                        {
                                            if (source == ProliferationSource.Unknown)
                                            {
                                                continue;
                                            }
                                            <option value="@source">@source</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Input.Source" class="text-danger"></span>
                                </div>
                                <div class="col-sm-6">
                                    <label asp-for="Input.Year" class="form-label"></label>
                                    <input asp-for="Input.Year" class="form-control" type="number" min="1900" max="9999" />
                                    <span asp-validation-for="Input.Year" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="row g-3">
                                <div class="col-sm-6">
                                    <label asp-for="Input.Granularity" class="form-label"></label>
                                    <select asp-for="Input.Granularity" class="form-select">
                                        @foreach (ProliferationGranularity granularity in Enum.GetValues<ProliferationGranularity>())
                                        {
                                            <option value="@granularity">@granularity</option>
                                        }
                                    </select>
                                    <span asp-validation-for="Input.Granularity" class="text-danger"></span>
                                </div>
                                <div class="col-sm-6">
                                    <label asp-for="Input.Period" class="form-label"></label>
                                    <input asp-for="Input.Period" class="form-control" type="number" min="1" max="12" />
                                    <span asp-validation-for="Input.Period" class="text-danger"></span>
                                </div>
                            </div>
                            <div>
                                <label asp-for="Input.PeriodLabel" class="form-label"></label>
                                <input asp-for="Input.PeriodLabel" class="form-control" />
                                <span asp-validation-for="Input.PeriodLabel" class="text-danger"></span>
                            </div>
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <label asp-for="Input.DirectBeneficiaries" class="form-label"></label>
                                    <input asp-for="Input.DirectBeneficiaries" class="form-control" type="number" min="0" />
                                    <span asp-validation-for="Input.DirectBeneficiaries" class="text-danger"></span>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="Input.IndirectBeneficiaries" class="form-label"></label>
                                    <input asp-for="Input.IndirectBeneficiaries" class="form-control" type="number" min="0" />
                                    <span asp-validation-for="Input.IndirectBeneficiaries" class="text-danger"></span>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="Input.InvestmentValue" class="form-label"></label>
                                    <input asp-for="Input.InvestmentValue" class="form-control" type="number" step="0.01" min="0" />
                                    <span asp-validation-for="Input.InvestmentValue" class="text-danger"></span>
                                </div>
                            </div>
                            <div>
                                <label asp-for="Input.Notes" class="form-label"></label>
                                <textarea asp-for="Input.Notes" class="form-control" rows="3"></textarea>
                                <span asp-validation-for="Input.Notes" class="text-danger"></span>
                            </div>
                            <div class="d-flex justify-content-end">
                                <button type="submit" class="btn btn-primary">Submit for approval</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-xl-7">
                <div class="card pro-card pro-card--table mb-4">
                    <div class="card-header pro-card__header">
                        <h2 class="h5 mb-0">Approved granular entries</h2>
                    </div>
                    <div class="card-body pro-card__body">
                        @if (Model.ApprovedEntries.Count == 0)
                        {
                            <p class="text-muted mb-0">No approved granular records yet.</p>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-sm align-middle pro-table">
                                    <thead>
                                        <tr>
                                            <th>Project</th>
                                            <th>Source</th>
                                            <th>Year</th>
                                            <th>Granularity</th>
                                            <th>Period</th>
                                            <th class="text-end">Direct</th>
                                            <th class="text-end">Indirect</th>
                                            <th class="text-end">Investment (₹)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var entry in Model.ApprovedEntries)
                                        {
                                            <tr>
                                                <td>@entry.ProjectName</td>
                                                <td>@entry.Source</td>
                                                <td>@entry.Year</td>
                                                <td>@entry.Granularity</td>
                                                <td>
                                                    <div>@entry.PeriodLabel ?? $"{entry.Period}"</div>
                                                </td>
                                                <td class="text-end"><span class="pro-metric-value">@FormatInt(entry.DirectBeneficiaries)</span></td>
                                                <td class="text-end"><span class="pro-metric-value">@FormatInt(entry.IndirectBeneficiaries)</span></td>
                                                <td class="text-end"><span class="pro-metric-value">@FormatDecimal(entry.InvestmentValue)</span></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>

                <div class="card pro-card pro-card--table">
                    <div class="card-header pro-card__header d-flex align-items-center justify-content-between">
                        <h2 class="h5 mb-0">Pending approvals</h2>
                        @if (Model.CanApprove)
                        {
                            <span class="badge bg-primary">Approver</span>
                        }
                    </div>
                    <div class="card-body pro-card__body">
                        @if (Model.PendingRequests.Count == 0)
                        {
                            <p class="text-muted mb-0">No granular submissions awaiting approval.</p>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-sm align-middle pro-table">
                                    <thead>
                                        <tr>
                                            <th>Project</th>
                                            <th>Source</th>
                                            <th>Year</th>
                                            <th>Granularity</th>
                                            <th>Period</th>
                                            <th class="text-end">Direct</th>
                                            <th class="text-end">Indirect</th>
                                            <th class="text-end">Investment</th>
                                            <th>Submitted</th>
                                            @if (Model.CanApprove)
                                            {
                                                <th class="text-end">Actions</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var request in Model.PendingRequests)
                                        {
                                            <tr>
                                                <td>@request.ProjectName</td>
                                                <td>@request.Source</td>
                                                <td>@request.Year</td>
                                                <td>@request.Granularity</td>
                                                <td>
                                                    <div>@request.PeriodLabel ?? $"{request.Period}"</div>
                                                </td>
                                                <td class="text-end"><span class="pro-metric-value">@FormatInt(request.DirectBeneficiaries)</span></td>
                                                <td class="text-end"><span class="pro-metric-value">@FormatInt(request.IndirectBeneficiaries)</span></td>
                                                <td class="text-end"><span class="pro-metric-value">@FormatDecimal(request.InvestmentValue)</span></td>
                                                <td>
                                                    <div class="small text-muted">@request.SubmittedBy</div>
                                                    <div class="small">@IstClock.ToIst(request.SubmittedAt.UtcDateTime).ToString("dd MMM yyyy, HH:mm")</div>
                                                </td>
                                                @if (Model.CanApprove)
                                                {
                                                    <td class="text-end">
                                                        <form method="post" asp-page-handler="Decide" class="pro-approval-form">
                                                            <input type="hidden" name="Decision.RequestId" value="@request.Id" />
                                                            <input type="hidden" name="Decision.ProjectId" value="@request.ProjectId" />
                                                            <input type="hidden" name="Decision.Source" value="@request.Source" />
                                                            <input type="hidden" name="Decision.Year" value="@request.Year" />
                                                            <input type="hidden" name="Decision.Granularity" value="@request.Granularity" />
                                                            <input type="hidden" name="Decision.Period" value="@request.Period" />
                                                            <input type="hidden" name="Decision.RowVersion" value="@request.RowVersionBase64" />
                                                            <textarea class="form-control form-control-sm" name="Decision.Notes" rows="2" placeholder="Optional comment"></textarea>
                                                            <div class="pro-approval-form-buttons">
                                                                <button type="submit" name="Decision.Approve" value="true" class="btn btn-success btn-sm">Approve</button>
                                                                <button type="submit" name="Decision.Approve" value="false" class="btn btn-outline-danger btn-sm">Reject</button>
                                                            </div>
                                                        </form>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

@functions {
    private static string FormatInt(int? value) => value.HasValue ? value.Value.ToString("N0") : "—";
    private static string FormatDecimal(decimal? value) => value.HasValue ? value.Value.ToString("N2") : "—";
}
