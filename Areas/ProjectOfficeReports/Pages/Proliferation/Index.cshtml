@page
@model ProjectManagement.Areas.ProjectOfficeReports.Pages.Proliferation.IndexModel
@using System.Globalization
@using ProjectManagement.Areas.ProjectOfficeReports.Application
@using ProjectManagement.Areas.ProjectOfficeReports.Domain
@{
    ViewData["Title"] = "Proliferation tracker";

    string SourceLabel(ProliferationSource source) => source switch
    {
        ProliferationSource.Internal => "Internal",
        ProliferationSource.External => "External",
        _ => "Unknown"
    };

    string ModeLabel(ProliferationPreferenceMode mode) => mode switch
    {
        ProliferationPreferenceMode.UseYearly => "Yearly",
        ProliferationPreferenceMode.UseGranular => "Granular",
        _ => "Auto"
    };

    string ModeChipClass(ProliferationPreferenceMode mode) => mode switch
    {
        ProliferationPreferenceMode.UseYearly => "pro-mode-chip pro-mode-yearly",
        ProliferationPreferenceMode.UseGranular => "pro-mode-chip pro-mode-granular",
        _ => "pro-mode-chip pro-mode-auto"
    };

    string FormatInt(int? value) => value.HasValue
        ? value.Value.ToString("N0", CultureInfo.InvariantCulture)
        : "—";

    string FormatDecimal(decimal? value) => value.HasValue
        ? value.Value.ToString("N2", CultureInfo.InvariantCulture)
        : "—";

    string FormatVarianceInt(int? value)
    {
        if (!value.HasValue)
        {
            return "—";
        }

        if (value.Value == 0)
        {
            return "0";
        }

        var formatted = Math.Abs(value.Value).ToString("N0", CultureInfo.InvariantCulture);
        return value.Value > 0 ? $"+{formatted}" : $"-{formatted}";
    }

    string FormatVarianceDecimal(decimal? value)
    {
        if (!value.HasValue)
        {
            return "—";
        }

        if (value.Value == 0)
        {
            return "0.00";
        }

        var formatted = Math.Abs(value.Value).ToString("N2", CultureInfo.InvariantCulture);
        return value.Value > 0 ? $"+{formatted}" : $"-{formatted}";
    }

    string MetricVarianceClass(int? value) => value switch
    {
        > 0 => "pro-metric-value is-positive",
        < 0 => "pro-metric-value is-negative",
        0 => "pro-metric-value is-neutral",
        _ => "pro-metric-value"
    };

    string MetricVarianceClass(decimal? value)
    {
        if (!value.HasValue)
        {
            return "pro-metric-value";
        }

        if (value.Value > 0)
        {
            return "pro-metric-value is-positive";
        }

        if (value.Value < 0)
        {
            return "pro-metric-value is-negative";
        }

        return "pro-metric-value is-neutral";
    }

    var showExportModal = ViewData["ShowExportModal"] as bool? ?? false;
    var showContextModal = Model.ShowContextModal;
    var hasRows = Model.Rows.Count > 0;
}

<div class="d-flex justify-content-between align-items-center flex-wrap gap-3 mb-4">
    <div>
        <h1 class="h3 mb-1">Proliferation tracker</h1>
        <p class="text-muted mb-0">Review yearly and granular proliferation performance, and compare effective metrics across sources.</p>
    </div>
    <div class="d-flex flex-wrap gap-2">
        @if (Model.CanExport)
        {
            if (hasRows)
            {
                <button type="button"
                        class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                        data-bs-toggle="modal"
                        data-bs-target="#proliferation-export-modal"
                        aria-haspopup="dialog"
                        aria-controls="proliferation-export-modal"
                        aria-expanded="false">
                    <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                    <span>Export data</span>
                </button>
            }
            else
            {
                <button type="button"
                        class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                        disabled
                        aria-disabled="true">
                    <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                    <span>Export data</span>
                </button>
            }
        }
        else
        {
            <button type="button"
                    class="btn btn-outline-primary d-inline-flex align-items-center gap-2"
                    disabled
                    aria-disabled="true">
                <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                <span>Export data</span>
            </button>
        }
        <button type="button"
                class="btn btn-light tot-filter-trigger"
                data-bs-toggle="modal"
                data-bs-target="#proliferation-filter-modal"
                aria-haspopup="dialog"
                aria-controls="proliferation-filter-modal"
                aria-expanded="false">
            <i class="bi bi-search" aria-hidden="true"></i>
            <span class="tot-filter-trigger-label">Search &amp; filter</span>
            <span class="visually-hidden">Open proliferation tracker filters</span>
        </button>
    </div>
</div>

<div class="modal fade" id="proliferation-filter-modal" tabindex="-1" aria-labelledby="proliferation-filter-modal-label" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <form id="proliferation-filter-form" method="get">
                <div class="modal-header">
                    <h2 class="modal-title fs-5" id="proliferation-filter-modal-label">Search &amp; filter records</h2>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <label class="form-label tot-filter-heading" for="proliferation-search">Search</label>
                            <input type="search"
                                   class="form-control"
                                   id="proliferation-search"
                                   name="SearchTerm"
                                   value="@Model.SearchTerm"
                                   placeholder="Search projects or units" />
                        </div>
                        <div class="col-12 col-md-6">
                            <label class="form-label tot-filter-heading" for="proliferation-year">Year</label>
                            <select class="form-select" asp-for="Year" id="proliferation-year">
                                <option value="">All years</option>
                                @foreach (var year in Model.YearOptions)
                                {
                                    if (Model.Year == year)
                                    {
                                        <option value="@year" selected>@year</option>
                                    }
                                    else
                                    {
                                        <option value="@year">@year</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-12">
                            <span class="tot-filter-heading d-block">Source</span>
                            <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter projects by source">
                                <input type="radio" class="btn-check" name="Source" id="proliferation-source-all" value="" @(Model.Source is null ? "checked" : null) />
                                <label class="btn tot-filter-btn" for="proliferation-source-all">All sources</label>
                                <input type="radio" class="btn-check" name="Source" id="proliferation-source-internal" value="@ProliferationSource.Internal" @(Model.Source == ProliferationSource.Internal ? "checked" : null) />
                                <label class="btn tot-filter-btn" for="proliferation-source-internal">@SourceLabel(ProliferationSource.Internal)</label>
                                <input type="radio" class="btn-check" name="Source" id="proliferation-source-external" value="@ProliferationSource.External" @(Model.Source == ProliferationSource.External ? "checked" : null) />
                                <label class="btn tot-filter-btn" for="proliferation-source-external">@SourceLabel(ProliferationSource.External)</label>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <label class="form-label tot-filter-heading" for="proliferation-unit">Sponsoring unit</label>
                            <select class="form-select" asp-for="SponsoringUnitId" id="proliferation-unit">
                                <option value="">All sponsoring units</option>
                                @foreach (var unit in Model.SponsoringUnits)
                                {
                                    if (Model.SponsoringUnitId == unit.Id)
                                    {
                                        <option value="@unit.Id" selected>@unit.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@unit.Id">@unit.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-12 col-md-6">
                            <label class="form-label tot-filter-heading" for="proliferation-simulator">Simulator</label>
                            <select class="form-select" asp-for="SimulatorUserId" id="proliferation-simulator">
                                <option value="">All simulators</option>
                                @foreach (var simulator in Model.Simulators)
                                {
                                    if (Model.SimulatorUserId == simulator.UserId)
                                    {
                                        <option value="@simulator.UserId" selected>@simulator.DisplayName</option>
                                    }
                                    else
                                    {
                                        <option value="@simulator.UserId">@simulator.DisplayName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="reset" class="btn btn-outline-secondary" form="proliferation-filter-form">Reset</button>
                    <button type="submit" class="btn btn-primary" form="proliferation-filter-form">Apply</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="proliferation-export-modal" tabindex="-1" aria-labelledby="proliferation-export-modal-label" aria-hidden="true" data-proliferation-auto-show="@(showExportModal ? "true" : "false")">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <form method="post" asp-page-handler="Export">
                <div class="modal-header">
                    <h2 class="modal-title fs-5" id="proliferation-export-modal-label">Export proliferation data</h2>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="text-muted">Configure the workbook export before downloading. Filters from the list are included automatically.</p>
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                    <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                    <input type="hidden" name="Source" value="@Model.Source" />
                    <input type="hidden" name="Year" value="@Model.Year" />
                    <input type="hidden" name="SponsoringUnitId" value="@Model.SponsoringUnitId" />
                    <input type="hidden" name="SimulatorUserId" value="@Model.SimulatorUserId" />
                    <div class="row g-3">
                        <div class="col-12">
                            <span class="tot-filter-heading d-block">Source</span>
                            <div class="btn-group tot-filter-btn-group w-100" role="group" aria-label="Filter exported rows by source">
                                <input type="radio" class="btn-check" name="Export.Source" id="export-source-all" value="" @(Model.Export?.Source is null ? "checked" : null) />
                                <label class="btn tot-filter-btn" for="export-source-all">All sources</label>
                                <input type="radio" class="btn-check" name="Export.Source" id="export-source-internal" value="@ProliferationSource.Internal" @(Model.Export?.Source == ProliferationSource.Internal ? "checked" : null) />
                                <label class="btn tot-filter-btn" for="export-source-internal">@SourceLabel(ProliferationSource.Internal)</label>
                                <input type="radio" class="btn-check" name="Export.Source" id="export-source-external" value="@ProliferationSource.External" @(Model.Export?.Source == ProliferationSource.External ? "checked" : null) />
                                <label class="btn tot-filter-btn" for="export-source-external">@SourceLabel(ProliferationSource.External)</label>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <label class="form-label" for="export-year-from">Year from</label>
                            <input class="form-control" asp-for="Export.YearFrom" type="number" id="export-year-from" min="1900" max="2100" />
                            <span asp-validation-for="Export.YearFrom" class="text-danger"></span>
                        </div>
                        <div class="col-12 col-md-6">
                            <label class="form-label" for="export-year-to">Year to</label>
                            <input class="form-control" asp-for="Export.YearTo" type="number" id="export-year-to" min="1900" max="2100" />
                            <span asp-validation-for="Export.YearTo" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary d-inline-flex align-items-center gap-2">
                        <i class="bi bi-file-earmark-spreadsheet" aria-hidden="true"></i>
                        <span>Export workbook</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@if (Model.PageWarnings.Any())
{
    <div class="alert alert-warning d-flex align-items-start gap-2" role="status">
        <i class="bi bi-exclamation-triangle-fill" aria-hidden="true"></i>
        <div>
            <h2 class="h6 mb-1">Attention</h2>
            <ul class="mb-0 ps-3">
                @foreach (var warning in Model.PageWarnings)
                {
                    <li>@warning</li>
                }
            </ul>
        </div>
    </div>
}

@if (Model.Summary is { } summary)
{
    <div class="row g-3 mb-4">
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="pro-summary-icon bg-primary-subtle text-primary">
                            <i class="bi bi-kanban" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Tracked records</div>
                            <div class="fs-3 fw-bold mb-1">@summary.TotalRows</div>
                            <span class="badge text-bg-light text-secondary">@summary.DistinctProjects projects</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="pro-summary-icon bg-info-subtle text-info">
                            <i class="bi bi-intersect" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Sources</div>
                            <div class="fs-3 fw-bold mb-1">@summary.InternalRows</div>
                            <span class="badge text-bg-light text-secondary">@summary.ExternalRows external</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="pro-summary-icon bg-secondary-subtle text-secondary">
                            <i class="bi bi-sliders" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Preference mode</div>
                            <div class="fs-3 fw-bold mb-1">@summary.AutoModeCount</div>
                            <span class="badge text-bg-light text-secondary">@summary.YearlyModeCount yearly • @summary.GranularModeCount granular</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="pro-summary-icon bg-success-subtle text-success">
                            <i class="bi bi-people-fill" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Effective direct</div>
                            <div class="fs-3 fw-bold mb-1">@summary.EffectiveDirectTotal.ToString("N0", CultureInfo.InvariantCulture)</div>
                            <span class="badge text-bg-light text-secondary">Beneficiaries</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="pro-summary-icon bg-warning-subtle text-warning">
                            <i class="bi bi-people" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Effective indirect</div>
                            <div class="fs-3 fw-bold mb-1">@summary.EffectiveIndirectTotal.ToString("N0", CultureInfo.InvariantCulture)</div>
                            <span class="badge text-bg-light text-secondary">Beneficiaries</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-sm-6 col-lg-4 col-xxl-2">
            <div class="card h-100 border-0 shadow-sm">
                <div class="card-body py-3">
                    <div class="d-flex align-items-center gap-3">
                        <div class="pro-summary-icon bg-primary-subtle text-primary">
                            <i class="bi bi-cash-coin" aria-hidden="true"></i>
                        </div>
                        <div>
                            <div class="text-muted text-uppercase small fw-semibold">Effective investment</div>
                            <div class="fs-4 fw-bold mb-1">₹@summary.EffectiveInvestmentTotal.ToString("N2", CultureInfo.InvariantCulture)</div>
                            <span class="badge text-bg-light text-secondary">Total value</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="card shadow-sm">
    <div class="card-header d-flex flex-wrap gap-2 align-items-center justify-content-between">
        <div class="fw-semibold">@((hasRows ? $"Showing {Model.Rows.Count} records" : "No records"))</div>
        <div class="text-muted small">
            @{
                var appliedFilters = new List<string>();
                if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
                {
                    appliedFilters.Add($"Search \"{Model.SearchTerm}\"");
                }
                if (Model.Source is { } src)
                {
                    appliedFilters.Add($"Source: {SourceLabel(src)}");
                }
                if (Model.Year is { } yearFilter)
                {
                    appliedFilters.Add($"Year: {yearFilter}");
                }
                if (Model.SponsoringUnitId.HasValue)
                {
                    var unitName = Model.SponsoringUnits.FirstOrDefault(u => u.Id == Model.SponsoringUnitId.Value)?.Name ?? $"Unit #{Model.SponsoringUnitId.Value}";
                    appliedFilters.Add($"Unit: {unitName}");
                }
                if (!string.IsNullOrWhiteSpace(Model.SimulatorUserId))
                {
                    var simulatorName = Model.Simulators.FirstOrDefault(s => string.Equals(s.UserId, Model.SimulatorUserId, StringComparison.Ordinal))?.DisplayName ?? Model.SimulatorUserId;
                    appliedFilters.Add($"Simulator: {simulatorName}");
                }

                var filtersText = string.Join(", ", appliedFilters.Any() ? appliedFilters : new[] { "None" });
            }
            Filters: @filtersText
        </div>
    </div>
    <div class="card-body p-0">
        @if (!hasRows)
        {
            <div class="p-4 text-center text-muted">
                <i class="bi bi-database-slash display-6 d-block mb-2" aria-hidden="true"></i>
                <p class="mb-0">No proliferation records match the selected filters.</p>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0 table-proliferation">
                    <thead class="table-light">
                        <tr>
                            <th scope="col">Project</th>
                            <th scope="col">Source &amp; year</th>
                            <th scope="col">Yearly metrics</th>
                            <th scope="col">Granular metrics</th>
                            <th scope="col">Effective metrics</th>
                            <th scope="col">Variance</th>
                            <th scope="col" class="text-nowrap">Preference</th>
                            <th scope="col" class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var row in Model.Rows)
                        {
                            var isSelected = Model.SelectedKey is { } key && key.ProjectId == row.ProjectId && key.Source == row.Source && key.Year == row.Year;
                            var preferenceChipClass = ModeChipClass(row.Preference.Mode);
                            if (row.Preference.HasPreference && !row.Preference.PreferredYearMatches)
                            {
                                preferenceChipClass += " is-mismatch";
                            }

                            <tr class="@(isSelected ? "is-selected" : null)">
                                <td>
                                    <div class="fw-semibold">@row.ProjectName</div>
                                    <div class="text-muted small">@(!string.IsNullOrEmpty(row.SponsoringUnitName) ? row.SponsoringUnitName : "—")</div>
                                    @if (!string.IsNullOrEmpty(row.SimulatorDisplayName))
                                    {
                                        <div class="text-muted small">Simulator: @row.SimulatorDisplayName</div>
                                    }
                                </td>
                                <td>
                                    <div class="d-flex flex-column">
                                    <span class="badge text-bg-light text-secondary mb-1">@SourceLabel(row.Source)</span>
                                    <span class="text-muted small">Year @row.Year</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="pro-metric-stack">
                                        <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="pro-metric-value">@FormatInt(row.Yearly?.DirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="pro-metric-value">@FormatInt(row.Yearly?.IndirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="pro-metric-value">₹@FormatDecimal(row.Yearly?.InvestmentValue)</span></div>
                                    </div>
                                </td>
                                <td>
                                    <div class="pro-metric-stack">
                                        <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="pro-metric-value">@FormatInt(row.GranularSum?.DirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="pro-metric-value">@FormatInt(row.GranularSum?.IndirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="pro-metric-value">₹@FormatDecimal(row.GranularSum?.InvestmentValue)</span></div>
                                    </div>
                                </td>
                                <td>
                                    <div class="pro-metric-stack">
                                        <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="pro-metric-value">@FormatInt(row.Effective?.DirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="pro-metric-value">@FormatInt(row.Effective?.IndirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="pro-metric-value">₹@FormatDecimal(row.Effective?.InvestmentValue)</span></div>
                                    </div>
                                </td>
                                <td>
                                    <div class="pro-metric-stack">
                                        <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="@MetricVarianceClass(row.Variance?.DirectBeneficiaries)">@FormatVarianceInt(row.Variance?.DirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="@MetricVarianceClass(row.Variance?.IndirectBeneficiaries)">@FormatVarianceInt(row.Variance?.IndirectBeneficiaries)</span></div>
                                        <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="@MetricVarianceClass(row.Variance?.InvestmentValue)">₹@FormatVarianceDecimal(row.Variance?.InvestmentValue)</span></div>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex flex-column gap-1">
                                        <span class="@preferenceChipClass">@ModeLabel(row.Preference.Mode)</span>
                                        @if (row.Preference.HasPreference)
                                        {
                                            <span class="text-muted small @(row.Preference.PreferredYearMatches ? string.Empty : "text-danger fw-semibold")">Preferred year: @row.Preference.PreferredYear</span>
                                        }
                                    </div>
                                </td>
                                <td class="text-end">
                                    <form method="post" asp-page-handler="Context" class="d-inline">
                                        <input type="hidden" name="SearchTerm" value="@Model.SearchTerm" />
                                        <input type="hidden" name="Source" value="@Model.Source" />
                                        <input type="hidden" name="Year" value="@Model.Year" />
                                        <input type="hidden" name="SponsoringUnitId" value="@Model.SponsoringUnitId" />
                                        <input type="hidden" name="SimulatorUserId" value="@Model.SimulatorUserId" />
                                        <input type="hidden" name="Context.ProjectId" value="@row.ProjectId" />
                                        <input type="hidden" name="Context.Source" value="@row.Source" />
                                        <input type="hidden" name="Context.Year" value="@row.Year" />
                                        <button type="submit" class="btn btn-sm btn-outline-primary">View details</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@if (Model.SelectedRow is { } selected)
{
    <div class="modal fade" id="proliferation-context-modal" tabindex="-1" aria-labelledby="proliferation-context-modal-label" aria-hidden="true" data-proliferation-auto-show="@(showContextModal ? "true" : "false")">
        <div class="modal-dialog modal-lg modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="me-3">
                        <h2 class="modal-title fs-5 mb-0" id="proliferation-context-modal-label">@selected.ProjectName</h2>
                        <p class="text-muted mb-0">@SourceLabel(selected.Source) · Year @selected.Year</p>
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="pro-context-section">
                        <h3 class="h6 text-uppercase text-muted mb-3">Overview</h3>
                        <div class="row g-3">
                            <div class="col-12 col-md-6">
                                <div class="pro-context-card">
                                    <div class="text-muted small text-uppercase fw-semibold mb-2">Sponsoring unit</div>
                                    <div class="fw-semibold">@(!string.IsNullOrEmpty(selected.SponsoringUnitName) ? selected.SponsoringUnitName : "—")</div>
                                </div>
                            </div>
                            <div class="col-12 col-md-6">
                                <div class="pro-context-card">
                                    <div class="text-muted small text-uppercase fw-semibold mb-2">Simulator</div>
                                    <div class="fw-semibold">@(!string.IsNullOrEmpty(selected.SimulatorDisplayName) ? selected.SimulatorDisplayName : "—")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="pro-context-section">
                        <h3 class="h6 text-uppercase text-muted mb-3">Metrics comparison</h3>
                        <div class="pro-context-grid">
                            <div class="pro-context-card">
                                <div class="text-muted small text-uppercase fw-semibold mb-2">Yearly reported</div>
                                <div class="pro-metric-stack">
                                    <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="pro-metric-value">@FormatInt(selected.Yearly?.DirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="pro-metric-value">@FormatInt(selected.Yearly?.IndirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="pro-metric-value">₹@FormatDecimal(selected.Yearly?.InvestmentValue)</span></div>
                                </div>
                            </div>
                            <div class="pro-context-card">
                                <div class="text-muted small text-uppercase fw-semibold mb-2">Granular sum</div>
                                <div class="pro-metric-stack">
                                    <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="pro-metric-value">@FormatInt(selected.GranularSum?.DirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="pro-metric-value">@FormatInt(selected.GranularSum?.IndirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="pro-metric-value">₹@FormatDecimal(selected.GranularSum?.InvestmentValue)</span></div>
                                </div>
                            </div>
                            <div class="pro-context-card">
                                <div class="text-muted small text-uppercase fw-semibold mb-2">Effective metrics</div>
                                <div class="pro-metric-stack">
                                    <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="pro-metric-value">@FormatInt(selected.Effective?.DirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="pro-metric-value">@FormatInt(selected.Effective?.IndirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="pro-metric-value">₹@FormatDecimal(selected.Effective?.InvestmentValue)</span></div>
                                </div>
                            </div>
                            <div class="pro-context-card">
                                <div class="text-muted small text-uppercase fw-semibold mb-2">Variance (Yearly − Granular)</div>
                                <div class="pro-metric-stack">
                                    <div class="pro-metric-line"><span class="pro-metric-label">Direct</span><span class="@MetricVarianceClass(selected.Variance?.DirectBeneficiaries)">@FormatVarianceInt(selected.Variance?.DirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Indirect</span><span class="@MetricVarianceClass(selected.Variance?.IndirectBeneficiaries)">@FormatVarianceInt(selected.Variance?.IndirectBeneficiaries)</span></div>
                                    <div class="pro-metric-line"><span class="pro-metric-label">Investment</span><span class="@MetricVarianceClass(selected.Variance?.InvestmentValue)">₹@FormatVarianceDecimal(selected.Variance?.InvestmentValue)</span></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="pro-context-section">
                        <h3 class="h6 text-uppercase text-muted mb-3">Preference</h3>
                        <div class="pro-context-card">
                            <div class="d-flex flex-column gap-2">
                                <span class="@ModeChipClass(selected.Preference.Mode)">@ModeLabel(selected.Preference.Mode)</span>
                                @if (selected.Preference.HasPreference)
                                {
                                    <span class="@(selected.Preference.PreferredYearMatches ? "text-muted" : "text-danger fw-semibold")">Preferred year: @selected.Preference.PreferredYear</span>
                                }
                                else
                                {
                                    <span class="text-muted">No preferred year recorded.</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@section Styles {
    <link rel="stylesheet" href="~/css/project-office-reports/proliferation.css" asp-append-version="true" />
}

@section Scripts {
    <script type="module" src="~/js/pages/project-office-reports/proliferation.js" asp-append-version="true"></script>
}
