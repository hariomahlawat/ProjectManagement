@page "{id:int}"
@model ProjectManagement.Areas.Admin.Pages.Lookups.LineDirectorates.DeactivateModel
@{ 
    var actionVerb = Model.Restore ? "Reactivate" : "Deactivate";
    ViewData["Title"] = $"{actionVerb} Line Directorate";
}

<nav aria-label="breadcrumb" class="mb-2">
  <ol class="breadcrumb small mb-0">
    <li class="breadcrumb-item"><a asp-area="Admin" asp-page="/Index">Admin</a></li>
    <li class="breadcrumb-item"><a asp-area="Admin" asp-page="/Lookups/LineDirectorates/Index">Line Directorates</a></li>
    <li class="breadcrumb-item active" aria-current="page">@actionVerb</li>
  </ol>
</nav>
<h1 class="mb-4">@ViewData["Title"]</h1>

<div class="col-lg-6">
    <div class="alert alert-warning">
        <p class="mb-2"><strong>@Model.Name</strong></p>
        @if (Model.Restore)
        {
            <p class="mb-0">This line directorate will be selectable again once reactivated.</p>
        }
        else if (Model.ProjectCount > 0)
        {
            <p class="mb-0">This line directorate is referenced by <strong>@Model.ProjectCount</strong> project(s). Remove the assignments before deactivation.</p>
        }
        else
        {
            <p class="mb-0">Deactivated line directorates cannot be selected on project forms.</p>
        }
    </div>

    <form method="post" class="d-flex gap-2">
        <button type="submit" class="btn btn-@(Model.Restore ? "success" : "danger")">@actionVerb</button>
        <a asp-page="./Index" class="btn btn-outline-secondary">Cancel</a>
    </form>
</div>

@if (!ModelState.IsValid)
{
    <div class="text-danger mt-3">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <div>@error.ErrorMessage</div>
        }
    </div>
}
