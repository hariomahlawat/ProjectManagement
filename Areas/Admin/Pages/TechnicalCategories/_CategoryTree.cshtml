@model IReadOnlyList<ProjectManagement.Areas.Admin.Pages.TechnicalCategories.IndexModel.CategoryNode>
@using System.Linq

<ul class="list-unstyled ms-0">
@foreach (var node in Model)
{
    var category = node.Category;
    var hasChildren = node.Children.Any();
    <li class="border rounded p-2 mb-2" data-category-id="@category.Id">
        <div class="d-flex flex-wrap justify-content-between align-items-center gap-2">
            <div class="d-flex align-items-center gap-2">
                @if (hasChildren)
                {
                    <button type="button"
                            class="btn btn-sm btn-outline-secondary toggle-children"
                            data-target="#category-children-@category.Id"
                            aria-expanded="true"
                            aria-controls="category-children-@category.Id">
                        <span class="visually-hidden">Toggle children</span>
                        <span aria-hidden="true">▾</span>
                    </button>
                }
                else
                {
                    <span class="btn btn-sm btn-outline-secondary disabled opacity-50" aria-hidden="true">·</span>
                }
                <div>
                    <div class="fw-semibold d-flex flex-wrap align-items-center gap-2">
                        <span>@category.Name</span>
                        @if (node.ProjectCount > 0)
                        {
                            <span class="badge bg-info text-dark">Used by @node.ProjectCount project@(node.ProjectCount == 1 ? string.Empty : "s")</span>
                        }
                    </div>
                    <div class="text-muted small">
                        Sort: @category.SortOrder · @(category.IsActive ? "Active" : "Inactive")
                    </div>
                </div>
            </div>
            <div class="d-flex flex-wrap gap-1">
                <a class="btn btn-sm btn-outline-primary" asp-page="Create" asp-route-parentId="@category.Id">Add child</a>
                <a class="btn btn-sm btn-outline-secondary" asp-page="Edit" asp-route-id="@category.Id">Edit</a>
                <a class="btn btn-sm btn-outline-danger" asp-page="Delete" asp-route-id="@category.Id">Delete</a>
                <form method="post" asp-page-handler="Toggle" class="d-inline">
                    <input type="hidden" name="id" value="@category.Id" />
                    <button type="submit" class="btn btn-sm @(category.IsActive ? "btn-warning" : "btn-success")">
                        @(category.IsActive ? "Deactivate" : "Activate")
                    </button>
                </form>
                <form method="post" asp-page-handler="Move" class="d-inline">
                    <input type="hidden" name="id" value="@category.Id" />
                    <input type="hidden" name="offset" value="-1" />
                    <button type="submit" class="btn btn-sm btn-outline-secondary" title="Move up">↑</button>
                </form>
                <form method="post" asp-page-handler="Move" class="d-inline">
                    <input type="hidden" name="id" value="@category.Id" />
                    <input type="hidden" name="offset" value="1" />
                    <button type="submit" class="btn btn-sm btn-outline-secondary" title="Move down">↓</button>
                </form>
            </div>
        </div>
        @if (hasChildren)
        {
            <div class="ms-4 mt-2" id="category-children-@category.Id">
                <partial name="_CategoryTree" model="node.Children" />
            </div>
        }
    </li>
}
</ul>
