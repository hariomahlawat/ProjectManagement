@page
@model ProjectManagement.Pages.Process.IndexModel
@{
    ViewData["Title"] = "SDD Procurement Flow";
}

<section class="process-hero mb-5">
    <div class="d-flex flex-column flex-lg-row align-items-lg-center gap-4">
        <div class="hero-badge text-center text-lg-start p-4 rounded-4 shadow-sm order-0">
            <span class="badge bg-primary-subtle text-primary-emphasis text-uppercase mb-2">Updated on</span>
            <p class="h2 mb-0 fw-semibold">
                @(Model.ProcessUpdatedOn.HasValue
                    ? Model.ProcessUpdatedOn.Value.ToLocalTime().ToString("dd MMM yyyy")
                    : "Not available")
            </p>
        </div>
        <div class="flex-grow-1 order-1">
            <h1 class="display-6 fw-semibold text-primary mb-3">Procurement Process &amp; Checklist</h1>
            <p class="lead text-muted mb-3">
                Explore each procurement stage, visualise dependencies, and review the recommended actions before moving ahead.
            </p>
            <p class="text-muted mb-0 small text-uppercase">
                Current version: <span class="fw-semibold text-body">@Model.ProcessVersion</span>
            </p>
        </div>
    </div>
</section>

<div class="process-flow-shell" data-process-flow-root data-process-version="@Model.ProcessVersion" data-can-edit="@(Model.CanEditChecklist ? "true" : "false")">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3 mb-4">
        <div>
            <h2 class="h5 mb-1 text-uppercase text-muted">Stage flow</h2>
            <p class="mb-0 text-muted small">Select a stage in the diagram to review its checklist.</p>
        </div>
        <button type="button"
                class="btn btn-primary d-lg-none"
                data-bs-toggle="offcanvas"
                data-bs-target="#checklistOffcanvas"
                aria-controls="checklistOffcanvas">
            View checklist
        </button>
    </div>

    <div class="row g-4 align-items-stretch">
        <div class="col-12 col-lg-7 col-xl-8">
            <div class="card h-100 shadow-sm">
                <div class="card-body">
                    <div class="process-flow-canvas" data-flow-canvas role="region" aria-live="polite" aria-busy="true" aria-label="Procurement stage flow">
                        <div class="text-center text-muted py-5" data-flow-placeholder>
                            <div class="spinner-border text-primary mb-3" role="status" aria-hidden="true"></div>
                            <p class="mb-0">Loading flow…</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-5 col-xl-4 d-none d-lg-block">
            <div class="card pm-card h-100 shadow-sm sticky-lg-top process-stage-info" data-checklist-panel>
                <div class="card-body">
                    <div class="process-stage-info__body">
                        <header class="stage-panel-header">
                            <div class="stage-panel-heading">
                                <h2 class="stage-panel-title h4 mb-1" data-stage-title aria-live="polite">Select a stage</h2>
                                <p class="stage-panel-subtitle text-muted mb-0" data-stage-subtitle>Choose a stage on the diagram to see its checklist.</p>
                            </div>
                            <span class="stage-panel-optional badge rounded-pill bg-info-subtle text-info-emphasis d-inline-flex align-items-center gap-2" data-stage-optional hidden>
                                <i class="bi bi-stars"></i>
                                Optional stage
                            </span>
                        </header>

                        <div class="stage-meta-grid" role="list">
                            <div class="stage-meta-card" role="listitem">
                                <span class="stage-meta-label text-uppercase text-muted small">Code</span>
                                <span class="stage-meta-value h6 mb-0" data-stage-code>—</span>
                            </div>
                            <div class="stage-meta-card" role="listitem">
                                <span class="stage-meta-label text-uppercase text-muted small">Parallel group</span>
                                <span class="stage-meta-value h6 mb-0" data-stage-parallel>—</span>
                            </div>
                            <div class="stage-meta-card" role="listitem">
                                <span class="stage-meta-label text-uppercase text-muted small">Depends on</span>
                                <div class="stage-meta-value stage-meta-dependencies" data-stage-dependencies>
                                    <span class="text-muted">—</span>
                                </div>
                            </div>
                        </div>

                        <section class="stage-section" aria-labelledby="stageChecklistHeading">
                            <div class="stage-section__header">
                                <h3 class="h5 mb-0" id="stageChecklistHeading">Stage checklist</h3>
                                <div class="btn-group" data-checklist-actions hidden>
                                    <button type="button" class="btn btn-outline-primary btn-sm" data-action="add-item">
                                        <i class="bi bi-plus-lg me-1" aria-hidden="true"></i>
                                        Add item
                                    </button>
                                </div>
                            </div>
                            <ol class="stage-checklist" data-checklist-list data-checklist-primary aria-live="polite" aria-busy="false"></ol>
                        </section>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="checklistOffcanvas" aria-labelledby="checklistOffcanvasLabel">
    <div class="offcanvas-header border-bottom">
        <h2 class="h5 mb-0" id="checklistOffcanvasLabel" data-stage-title>Stage checklist</h2>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close checklist panel"></button>
    </div>
    <div class="offcanvas-body d-flex flex-column gap-4" data-checklist-panel>
        <div class="stage-panel-heading">
            <p class="stage-panel-subtitle text-muted mb-2" data-stage-subtitle>Choose a stage on the diagram to see its checklist.</p>
            <div class="stage-meta-grid stage-meta-grid--compact" role="list">
                <div class="stage-meta-card" role="listitem">
                    <span class="stage-meta-label text-uppercase text-muted small">Code</span>
                    <span class="stage-meta-value fw-semibold" data-stage-code>—</span>
                </div>
                <div class="stage-meta-card" role="listitem">
                    <span class="stage-meta-label text-uppercase text-muted small">Parallel group</span>
                    <span class="stage-meta-value fw-semibold" data-stage-parallel>—</span>
                </div>
                <div class="stage-meta-card" role="listitem">
                    <span class="stage-meta-label text-uppercase text-muted small">Depends on</span>
                    <div class="stage-meta-value stage-meta-dependencies" data-stage-dependencies>
                        <span class="text-muted">—</span>
                    </div>
                </div>
            </div>
            <span class="stage-panel-optional badge rounded-pill bg-info-subtle text-info-emphasis mt-3 d-inline-flex align-items-center gap-2" data-stage-optional hidden>
                <i class="bi bi-stars"></i>
                Optional stage
            </span>
        </div>

        <div class="flex-grow-1 d-flex flex-column">
            <div class="stage-section__header mb-3">
                <h3 class="h5 mb-0">Stage checklist</h3>
                <div class="btn-group" data-checklist-actions hidden>
                    <button type="button" class="btn btn-outline-primary btn-sm" data-action="add-item">
                        <i class="bi bi-plus-lg me-1" aria-hidden="true"></i>
                        Add item
                    </button>
                </div>
            </div>
            <ol class="stage-checklist flex-grow-1" data-checklist-list aria-live="polite" aria-busy="false"></ol>
        </div>
    </div>
</div>

<div class="modal fade" id="checklistItemModal" tabindex="-1" aria-labelledby="checklistItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form class="modal-content" data-checklist-form>
            <div class="modal-header">
                <h2 class="modal-title fs-5" id="checklistItemModalLabel">Checklist item</h2>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="checklistItemText" class="form-label">Description</label>
                    <textarea class="form-control" id="checklistItemText" name="text" rows="4" maxlength="512" required></textarea>
                    <div class="form-text">Describe the action required for this stage (max 512 characters).</div>
                </div>
                <input type="hidden" name="itemId" />
                <input type="hidden" name="itemRowVersion" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary">
                    <span data-submit-label>Add item</span>
                    <span class="spinner-border spinner-border-sm align-middle ms-2" role="status" aria-hidden="true" hidden></span>
                </button>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="checklistDeleteModal" tabindex="-1" aria-labelledby="checklistDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <form class="modal-content" data-checklist-delete-form>
            <div class="modal-header">
                <h2 class="modal-title fs-5" id="checklistDeleteModalLabel">Remove checklist item?</h2>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-0">This action cannot be undone. The item will be removed from the stage checklist.</p>
                <input type="hidden" name="itemId" />
                <input type="hidden" name="itemRowVersion" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-danger">
                    <span data-submit-label>Delete item</span>
                    <span class="spinner-border spinner-border-sm align-middle ms-2" role="status" aria-hidden="true" hidden></span>
                </button>
            </div>
        </form>
    </div>
</div>

@section Styles {
    <style>
        .process-hero .hero-badge {
            background: linear-gradient(135deg, rgba(13, 110, 253, 0.08), rgba(32, 201, 151, 0.08));
            border: 1px solid rgba(13, 110, 253, 0.15);
            min-width: 220px;
        }

        .process-flow-shell {
            display: flex;
            flex-direction: column;
        }

        /*
            Process flow visual tokens — adjust the custom properties below to retheme the pastel
            canvas without touching the JavaScript layout math. Designers can override these at the
            page or theme level as needed.
        */
        .process-flow-canvas {
            --process-flow-bg: linear-gradient(145deg, rgba(13, 110, 253, 0.07), rgba(32, 201, 151, 0.05));
            --process-flow-border: rgba(13, 110, 253, 0.06);
            --process-flow-connector: rgba(73, 80, 87, 0.45);
            --process-flow-connector-selected: rgba(13, 110, 253, 0.6);
            --process-flow-connector-predecessor: rgba(25, 135, 84, 0.6);
            --process-flow-connector-successor: rgba(13, 110, 253, 0.75);
            --process-flow-node-terminator-fill: rgba(226, 239, 255, 0.85);
            --process-flow-node-terminator-stroke: rgba(64, 122, 214, 0.9);
            --process-flow-node-process-fill: rgba(227, 245, 239, 0.9);
            --process-flow-node-process-stroke: rgba(38, 180, 144, 0.85);
            --process-flow-node-decision-fill: rgba(239, 231, 252, 0.9);
            --process-flow-node-decision-stroke: rgba(132, 94, 194, 0.8);
            --process-flow-node-optional-dash: 8 6;
            --process-flow-node-predecessor-fill: rgba(25, 135, 84, 0.16);
            --process-flow-node-predecessor-stroke: rgba(25, 135, 84, 0.7);
            --process-flow-node-successor-fill: rgba(13, 110, 253, 0.18);
            --process-flow-node-successor-stroke: rgba(13, 110, 253, 0.75);
            --process-flow-node-selected-fill: rgba(13, 110, 253, 0.22);
            --process-flow-node-selected-stroke: rgba(13, 110, 253, 0.9);

            min-height: 600px;
            height: clamp(560px, 70vh, 900px);
            position: relative;
            padding: 2rem;
            border-radius: 1.5rem;
            background: var(--process-flow-bg);
            box-shadow: inset 0 0 0 1px var(--process-flow-border);
        }

        .process-flow-canvas svg {
            width: 100%;
            height: 100%;
            border-radius: 1.25rem;
        }

        .process-flow-canvas .flow-connectors {
            pointer-events: none;
        }

        .process-flow-canvas .flow-connector {
            fill: none;
            color: var(--process-flow-connector);
            stroke: currentColor;
            stroke-width: 2.75;
            marker-end: url(#pm-flow-arrow);
            transition: color 0.25s ease, stroke-width 0.25s ease, opacity 0.25s ease;
        }

        .process-flow-canvas .flow-connector--dashed {
            stroke-dasharray: 8 6;
        }

        .process-flow-canvas .flow-connector.is-selected-edge {
            color: var(--process-flow-connector-selected);
            stroke-width: 3.25;
        }

        .process-flow-canvas .flow-connector.is-predecessor-edge {
            color: var(--process-flow-connector-predecessor);
        }

        .process-flow-canvas .flow-connector.is-successor-edge {
            color: var(--process-flow-connector-successor);
        }

        .process-flow-canvas .flow-node {
            cursor: pointer;
            transition: filter 0.25s ease, stroke 0.25s ease;
        }

        .process-flow-canvas .flow-node:focus-visible {
            outline: none;
        }

        .process-flow-canvas .flow-node__body {
            filter: url(#pm-flow-shadow);
            stroke-width: 2.5;
            transition: filter 0.25s ease, stroke 0.25s ease, fill 0.25s ease;
        }

        .process-flow-canvas .flow-node--terminator .flow-node__body {
            fill: var(--process-flow-node-terminator-fill);
            stroke: var(--process-flow-node-terminator-stroke);
        }

        .process-flow-canvas .flow-node--process .flow-node__body {
            fill: var(--process-flow-node-process-fill);
            stroke: var(--process-flow-node-process-stroke);
        }

        .process-flow-canvas .flow-node--decision .flow-node__body {
            fill: var(--process-flow-node-decision-fill);
            stroke: var(--process-flow-node-decision-stroke);
        }

        .process-flow-canvas .flow-node.is-optional .flow-node__body {
            stroke-dasharray: var(--process-flow-node-optional-dash);
        }

        .process-flow-canvas .flow-node__label {
            font-size: 0.95rem;
            font-weight: 600;
            fill: var(--bs-body-color);
            letter-spacing: 0.02em;
            pointer-events: none;
        }

        .process-flow-canvas .flow-node:hover .flow-node__body,
        .process-flow-canvas .flow-node:focus-visible .flow-node__body,
        .process-flow-canvas .flow-node.is-selected .flow-node__body {
            filter: url(#pm-flow-glow);
        }

        .process-flow-canvas .flow-node.is-predecessor .flow-node__body {
            fill: var(--process-flow-node-predecessor-fill);
            stroke: var(--process-flow-node-predecessor-stroke);
        }

        .process-flow-canvas .flow-node.is-successor .flow-node__body {
            fill: var(--process-flow-node-successor-fill);
            stroke: var(--process-flow-node-successor-stroke);
        }

        .process-flow-canvas .flow-node.is-selected .flow-node__body {
            fill: var(--process-flow-node-selected-fill);
            stroke: var(--process-flow-node-selected-stroke);
        }

        .process-stage-info {
            --process-stage-sticky-offset: 1.5rem;
            --process-stage-info-chrome: 6rem; /* accounts for header spacing and card padding */
            top: var(--process-stage-sticky-offset);
            display: flex;
            flex-direction: column;
            max-height: calc(100vh - var(--process-stage-sticky-offset));
        }

        .process-stage-info .card-body {
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        .process-stage-info__body {
            max-height: calc(100vh - (var(--process-stage-sticky-offset) + var(--process-stage-info-chrome)));
            overflow-y: auto;
            padding-right: 0.25rem;
        }

        .stage-panel-header {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stage-panel-heading {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .stage-panel-title {
            font-weight: 600;
        }

        .stage-panel-optional {
            align-self: flex-start;
        }

        .stage-meta-grid {
            display: grid;
            gap: 1rem;
            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
            margin-bottom: 2rem;
        }

        .stage-meta-grid--compact {
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            margin-bottom: 1.5rem;
        }

        .stage-meta-card {
            background: rgba(248, 249, 250, 0.65);
            border-radius: 0.85rem;
            padding: 0.9rem 1rem;
            display: flex;
            flex-direction: column;
            gap: 0.35rem;
            box-shadow: inset 0 0 0 1px rgba(222, 226, 230, 0.6);
        }

        .stage-meta-label {
            letter-spacing: 0.08em;
        }

        .stage-meta-value {
            display: block;
            color: var(--bs-body-color);
            word-break: break-word;
        }

        .stage-meta-dependencies {
            display: flex;
            flex-wrap: wrap;
            gap: 0.4rem;
        }

        .stage-meta-badge {
            font-size: 0.75rem;
            padding: 0.35rem 0.65rem;
        }

        .stage-section {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .stage-section__header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            gap: 0.75rem;
        }

        .stage-checklist {
            list-style: decimal inside;
            padding-left: 1.25rem;
            display: grid;
            gap: 0.75rem;
        }

        .stage-checklist[aria-busy="true"]::after {
            content: "";
            display: none;
        }

        .stage-checklist .checklist-item {
            background: rgba(248, 249, 250, 0.7);
            border-radius: 0.75rem;
            padding: 0.75rem 0.75rem 0.75rem 1rem;
            display: grid;
            grid-template-columns: auto 1fr auto;
            gap: 0.75rem;
            align-items: flex-start;
        }

        .stage-checklist .checklist-item.read-only {
            grid-template-columns: 1fr;
        }

        .stage-checklist .checklist-item .checklist-handle {
            cursor: grab;
            color: var(--bs-secondary-color);
        }

        .stage-checklist .checklist-item .checklist-handle:active {
            cursor: grabbing;
        }

        .stage-checklist .checklist-item .item-actions .btn {
            padding: 0.25rem 0.5rem;
        }

        .stage-checklist .checklist-empty {
            list-style: none;
            padding-left: 0;
            color: var(--bs-secondary-color);
        }

        @@media (max-width: 991.98px) {
            .process-flow-canvas {
                min-height: 440px;
                height: 440px;
                padding: 1.25rem;
            }

            .process-stage-info {
                max-height: none;
            }

            .process-stage-info .card-body {
                height: auto;
            }

            .process-stage-info__body {
                max-height: none;
                overflow: visible;
                padding-right: 0;
            }

            .stage-panel-header {
                margin-bottom: 1.5rem;
            }

            .stage-meta-grid {
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            }
        }

        @@media (max-width: 575.98px) {
            .process-flow-canvas {
                min-height: 320px;
                height: 320px;
                padding: 1rem;
            }
        }
    </style>
}

@section Scripts {
    <script src="~/lib/sortable/1.15.2/Sortable.min.js" asp-append-version="true"></script>
    <script type="module" src="~/js/process-flow.js" asp-append-version="true"></script>
}
