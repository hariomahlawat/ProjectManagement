@page
@model ProjectManagement.Pages.Activities.ApprovalsModel
@using System.Globalization
@{
    ViewData["Title"] = "Activity delete approvals";
    string FormatDate(DateTimeOffset? value) => value?.ToLocalTime().ToString("dd MMM yyyy, HH:mm", CultureInfo.CurrentCulture) ?? "—";
}

<div class="container-xxl activities-approvals-page">
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Activities/Index">Activities</a></li>
            <li class="breadcrumb-item active" aria-current="page">Delete approvals</li>
        </ol>
    </nav>

    <div class="pm-card pm-shadow mb-4">
        <div class="pm-card-header d-flex flex-column flex-md-row gap-3 align-items-start align-items-md-center">
            <div class="flex-grow-1">
                <h1 class="pm-card-title mb-1">Activity delete approvals</h1>
                <p class="pm-card-subtitle mb-0 text-muted">Review and decide pending delete requests from project office managers.</p>
            </div>
            <a class="btn btn-outline-secondary btn-sm" asp-page="./Index">
                <i class="bi bi-arrow-left" aria-hidden="true"></i>
                <span>Back to activities</span>
            </a>
        </div>
    </div>

    <div class="pm-card pm-shadow">
        <div class="pm-card-body">
            @if (Model.Pending.Count == 0)
            {
                <div class="text-center py-5">
                    <i class="bi bi-inbox fs-1 text-muted" aria-hidden="true"></i>
                    <h2 class="h5 mt-3">No pending delete requests</h2>
                    <p class="text-muted mb-0">You will be notified when a project office manager submits a new delete request.</p>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table align-middle">
                        <thead>
                            <tr>
                                <th scope="col">Activity</th>
                                <th scope="col">Requested by</th>
                                <th scope="col">Requested at</th>
                                <th scope="col">Reason</th>
                                <th scope="col" class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var request in Model.Pending)
                            {
                                <tr>
                                    <td>
                                        <div class="fw-semibold">@request.ActivityTitle</div>
                                        <div class="text-muted small">@request.ActivityTypeName@if (!string.IsNullOrWhiteSpace(request.ActivityLocation)){ @(" · " + request.ActivityLocation)}</div>
                                        <div class="text-muted small">Event: @FormatDate(request.ScheduledStartUtc)</div>
                                    </td>
                                    <td>
                                        <div class="fw-semibold">@(!string.IsNullOrWhiteSpace(request.RequestedByDisplayName) ? request.RequestedByDisplayName : request.RequestedByUserId)</div>
                                        @if (!string.IsNullOrWhiteSpace(request.RequestedByEmail))
                                        {
                                            <div class="text-muted small">@request.RequestedByEmail</div>
                                        }
                                    </td>
                                    <td>@FormatDate(request.RequestedAtUtc)</td>
                                    <td>
                                        @if (string.IsNullOrWhiteSpace(request.Reason))
                                        {
                                            <span class="text-muted">—</span>
                                        }
                                        else
                                        {
                                            <div class="small">@request.Reason</div>
                                        }
                                    </td>
                                    <td class="text-end">
                                        <div class="d-flex flex-column flex-md-row gap-2 justify-content-end">
                                            <form method="post" asp-page-handler="Approve" asp-route-requestId="@request.Id" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-success btn-sm">Approve</button>
                                            </form>
                                            <form method="post" asp-page-handler="Reject" asp-route-requestId="@request.Id" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <div class="input-group input-group-sm">
                                                    <input type="text" class="form-control" name="reason" placeholder="Reason" required />
                                                    <button type="submit" class="btn btn-outline-danger">Reject</button>
                                                </div>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>
