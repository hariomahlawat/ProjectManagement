@page
@model ProjectManagement.Pages.Activities.IndexModel
@using ProjectManagement.Contracts.Activities
@{
    ViewData["Title"] = "Activities";
    var vm = Model.ViewModel;
    var hasRows = vm is not null && vm.Rows.Count > 0;
    var pageSize = vm?.PageSize ?? Model.PageSize;
    var currentPage = vm?.Page ?? Model.Page;
    var totalCount = vm?.TotalCount ?? 0;
    var resultsStart = hasRows ? ((currentPage - 1) * pageSize) + 1 : 0;
    var resultsEnd = hasRows ? resultsStart + vm!.Rows.Count - 1 : 0;
    string FormatEventDate(DateTimeOffset? value) => value?.ToLocalTime().ToString("dd MMM yyyy", System.Globalization.CultureInfo.CurrentCulture) ?? "—";
    string FormatTimestamp(DateTimeOffset? value) => value?.ToLocalTime().ToString("dd MMM yyyy, HH:mm", System.Globalization.CultureInfo.CurrentCulture) ?? "—";
}

@section Styles
{
    <link rel="stylesheet" href="~/css/activities/index.css" asp-append-version="true" />
}

@section Scripts
{
    <script src="~/js/pages/activities-index.js" asp-append-version="true"></script>
}

<div class="container-xxl activities-page" data-module="activities-index">
    <div class="activities-header">
        <div class="activities-header__heading">
            <span class="pm-card-icon" aria-hidden="true"><i class="bi bi-calendar-event"></i></span>
            <div>
                <h1 class="pm-card-title mb-1">Activities</h1>
                <p class="pm-card-subtitle mb-0">Record and review misc activities with photos, videos and documents.</p>
            </div>
        </div>
        <div class="activities-header__actions">
            <button type="button"
                    class="btn btn-outline-primary btn-sm"
                    data-bs-toggle="offcanvas"
                    data-bs-target="#activitiesFilterOffcanvas"
                    aria-controls="activitiesFilterOffcanvas">
                <i class="bi bi-funnel" aria-hidden="true"></i>
                <span>Filters</span>
            </button>
            @if (Model.IsDeleteApprover)
            {
                <a class="btn btn-outline-secondary btn-sm" asp-page="./Approvals">
                    <i class="bi bi-check2-square" aria-hidden="true"></i>
                    <span>Approvals</span>
                </a>
            }

            <form method="post"
                  asp-page-handler="Export"
                  class="d-inline"
                  data-activities-export-form>
                @Html.AntiForgeryToken()
                <input type="hidden" name="FromDate" value="@(Model.FromDate?.ToString("yyyy-MM-dd"))" />
                <input type="hidden" name="ToDate" value="@(Model.ToDate?.ToString("yyyy-MM-dd"))" />
                <input type="hidden" name="ActivityTypeId" value="@(Model.ActivityTypeId?.ToString())" />
                <input type="hidden" name="AttachmentType" value="@Model.AttachmentType" />
                <input type="hidden" name="SortBy" value="@Model.SortBy" />
                <input type="hidden" name="SortDir" value="@Model.SortDirection" />
                <input type="hidden" name="PageSize" value="@Model.PageSize" />
                <button type="submit"
                        class="btn btn-outline-secondary btn-sm"
                        @(Model.CanExportActivities ? null : "disabled")>
                    <i class="bi bi-download" aria-hidden="true"></i>
                    <span>Export spreadsheet</span>
                </button>
            </form>
            @if (Model.CanCreateActivities)
            {
                <a class="btn btn-primary btn-sm" asp-page="./Edit">
                    <i class="bi bi-plus-lg" aria-hidden="true"></i>
                    <span>Add activity</span>
                </a>
            }
        </div>
    </div>

    <div class="offcanvas offcanvas-end activities-filter-offcanvas"
         tabindex="-1"
         id="activitiesFilterOffcanvas"
         aria-labelledby="activitiesFilterOffcanvasLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="activitiesFilterOffcanvasLabel">Activity filters</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <form method="get" class="row g-3 activities-filter-form" aria-label="Activity filters">
                <input type="hidden" name="Page" value="1" />
                <input type="hidden" asp-for="SortBy" />
                <div class="col-12 col-sm-6">
                    <label class="form-label" asp-for="FromDate">From date</label>
                    <input asp-for="FromDate" class="form-control" type="date" />
                </div>
                <div class="col-12 col-sm-6">
                    <label class="form-label" asp-for="ToDate">To date</label>
                    <input asp-for="ToDate" class="form-control" type="date" />
                </div>
                <div class="col-12">
                    <label class="form-label" asp-for="ActivityTypeId">Activity type</label>
                    <select asp-for="ActivityTypeId" class="form-select" asp-items="Model.ActivityTypeOptions"></select>
                </div>
                <div class="col-12 col-sm-6">
                    <label class="form-label" asp-for="AttachmentType">Attachment type</label>
                    <select asp-for="AttachmentType" class="form-select" asp-items="Model.AttachmentTypeOptions" data-activities-autosubmit></select>
                </div>
                <div class="col-12 col-sm-6">
                    <label class="form-label" for="SortDir">Order</label>
                    <select id="SortDir" name="SortDir" class="form-select" data-activities-autosubmit>
                        <option value="desc" selected="@(Model.IsSortDescending ? "selected" : null)">Descending</option>
                        <option value="asc" selected="@(!Model.IsSortDescending ? "selected" : null)">Ascending</option>
                    </select>
                </div>
                <div class="col-12 col-sm-6">
                    <label class="form-label" asp-for="PageSize">Page size</label>
                    <select asp-for="PageSize" class="form-select" asp-items="Model.PageSizeOptions" data-activities-autosubmit></select>
                </div>
                <div class="col-12 d-flex flex-wrap gap-2 justify-content-end">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-funnel" aria-hidden="true"></i>
                        <span>Apply</span>
                    </button>
                    <a asp-page="./Index" class="btn btn-outline-secondary">Reset</a>
                </div>
            </form>
        </div>
    </div>

    <div class="activities-summary pm-card pm-shadow mt-3">
        <div class="pm-card-body d-flex flex-column flex-md-row gap-3 align-items-md-center">
            <div class="activities-summary__metric">
                <span class="activities-summary__label">Total activities</span>
                <span class="activities-summary__value">@totalCount</span>
            </div>
            <div class="activities-summary__metric">
                <span class="activities-summary__label">Showing</span>
                <span class="activities-summary__value">@(hasRows ? $"{resultsStart:N0}–{resultsEnd:N0}" : "0")</span>
            </div>
            <div class="activities-summary__metric">
                <span class="activities-summary__label">Filters</span>
                <span class="activities-summary__value">@GetActiveFilterCount()</span>
            </div>
            <div class="ms-md-auto text-muted small">
                Updated @(DateTime.Now.ToString("dd MMM yyyy, HH:mm", System.Globalization.CultureInfo.CurrentCulture)).
            </div>
        </div>
    </div>

    <div class="pm-card pm-shadow activities-table-card mt-3">
        <div class="pm-card-body">
            @if (!hasRows)
            {
                <div class="activities-empty text-center py-5">
                    <i class="bi bi-inbox activities-empty__icon" aria-hidden="true"></i>
                    <h2 class="h5 mt-3">No activities found</h2>
                    <p class="text-muted">Try adjusting the filters or add a new activity.</p>
                </div>
            }
            else
            {
                <div class="table-responsive activities-table-wrapper">
                    <table class="table table-hover align-middle activities-table">
                        <thead>
                            <tr>
                                <th scope="col">Activity</th>
                                <th scope="col">
                                    <a class="activities-sort-link" asp-page="./Index" asp-all-route-data="Model.BuildRoute(page: 1, sort: ActivityListSort.ActivityType, sortDir: Model.GetSortDirectionFor(ActivityListSort.ActivityType))">
                                        Type
                                        <i class="@Model.GetSortIconClass(ActivityListSort.ActivityType)" aria-hidden="true"></i>
                                    </a>
                                </th>
                                <th scope="col">
                                    <a class="activities-sort-link" asp-page="./Index" asp-all-route-data="Model.BuildRoute(page: 1, sort: ActivityListSort.ScheduledStart, sortDir: Model.GetSortDirectionFor(ActivityListSort.ScheduledStart))">
                                        Event date
                                        <i class="@Model.GetSortIconClass(ActivityListSort.ScheduledStart)" aria-hidden="true"></i>
                                    </a>
                                </th>
                                <th scope="col">
                                    <a class="activities-sort-link" asp-page="./Index" asp-all-route-data="Model.BuildRoute(page: 1, sort: ActivityListSort.CreatedAt, sortDir: Model.GetSortDirectionFor(ActivityListSort.CreatedAt))">
                                        Created
                                        <i class="@Model.GetSortIconClass(ActivityListSort.CreatedAt)" aria-hidden="true"></i>
                                    </a>
                                </th>
                                <th scope="col">Attachments</th>
                                <th scope="col" class="text-end">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var row in vm!.Rows)
                            {
                                <tr>
                                    <td>
                                        <div class="activities-table__title">@row.Title</div>
                                        @if (!string.IsNullOrWhiteSpace(row.Location))
                                        {
                                            <div class="activities-table__meta text-muted">
                                                <i class="bi bi-geo-alt" aria-hidden="true"></i>
                                                <span>@row.Location</span>
                                            </div>
                                        }
                                        @if (row.HasPendingDelete)
                                        {
                                            <div class="mt-2">
                                                <span class="badge text-bg-warning text-dark">Pending delete approval</span>
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge rounded-pill text-bg-light activities-type-badge">@row.ActivityType</span>
                                    </td>
                                    <td>
                                        <div class="activities-table__schedule">
                                            <div><i class="bi bi-clock" aria-hidden="true"></i> <span>@FormatEventDate(row.ScheduledStartUtc)</span></div>
                                            @if (row.ScheduledEndUtc.HasValue)
                                            {
                                                <div class="text-muted"><i class="bi bi-arrow-right" aria-hidden="true"></i> <span>@FormatEventDate(row.ScheduledEndUtc)</span></div>
                                            }
                                        </div>
                                    </td>
                                    <td>
                                        <div class="activities-table__creator">@row.CreatedByDisplayName</div>
                                        <div class="text-muted small">@FormatTimestamp(row.CreatedAtUtc)</div>
                                    </td>
                                    <td>
                                        <div class="d-flex flex-wrap gap-2 align-items-center">
                                            <span class="badge text-bg-secondary activities-attachment-total" title="Total attachments">
                                                <i class="bi bi-paperclip" aria-hidden="true"></i>
                                                <span>@row.AttachmentCount</span>
                                            </span>
                                            @if (row.HasPdf)
                                            {
                                                <span class="badge text-bg-danger-subtle text-danger activities-attachment-badge" title="PDF attachments">
                                                    <i class="bi bi-file-earmark-pdf" aria-hidden="true"></i>
                                                    <span>@row.PdfAttachmentCount</span>
                                                </span>
                                            }
                                            @if (row.HasPhoto)
                                            {
                                                <span class="badge text-bg-primary-subtle text-primary activities-attachment-badge" title="Photo attachments">
                                                    <i class="bi bi-camera" aria-hidden="true"></i>
                                                    <span>@row.PhotoAttachmentCount</span>
                                                </span>
                                            }
                                            @if (row.HasVideo)
                                            {
                                                <span class="badge text-bg-success-subtle text-success activities-attachment-badge" title="Video attachments">
                                                    <i class="bi bi-camera-video" aria-hidden="true"></i>
                                                    <span>@row.VideoAttachmentCount</span>
                                                </span>
                                            }
                                        </div>
                                    </td>
                                    <td class="text-end">
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Activity actions">
                                            <a class="btn btn-outline-secondary" asp-page="./Details" asp-route-id="@row.Id">
                                                <span class="visually-hidden">View</span>
                                                <i class="bi bi-eye" aria-hidden="true"></i>
                                            </a>
                                            @if (row.CanEdit)
                                            {
                                                <a class="btn btn-outline-primary" asp-page="./Edit" asp-route-id="@row.Id">
                                                    <span class="visually-hidden">Edit</span>
                                                    <i class="bi bi-pencil" aria-hidden="true"></i>
                                                </a>
                                            }
                                            @if (row.CanDelete)
                                            {
                                                <form method="post"
                                                      asp-page-handler="RequestDelete"
                                                      asp-all-route-data="Model.BuildRouteForDeleteRequest(row.Id)"
                                                      class="d-inline"
                                                      data-activities-delete-form>
                                                    @Html.AntiForgeryToken()
                                                    <button type="submit"
                                                            class="btn btn-outline-danger js-activities-confirm-delete"
                                                            data-confirm="Request deletion of this activity?">
                                                        <span class="visually-hidden">Request delete</span>
                                                        <i class="bi bi-trash" aria-hidden="true"></i>
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @if (vm!.TotalPages > 1)
                {
                    <nav aria-label="Activity pagination" class="activities-pagination">
                        <ul class="pagination justify-content-end flex-wrap">
                            <li class="page-item @(currentPage <= 1 ? "disabled" : null)">
                                <a class="page-link" asp-page="./Index" asp-all-route-data="Model.BuildRoute(page: Math.Max(1, currentPage - 1))" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                            @for (var p = 1; p <= vm.TotalPages; p++)
                            {
                                if (p == currentPage || Math.Abs(p - currentPage) <= 2 || p == 1 || p == vm.TotalPages)
                                {
                                    var isActive = p == currentPage;
                                    <li class="page-item @(isActive ? "active" : null)">
                                        <a class="page-link" asp-page="./Index" asp-all-route-data="Model.BuildRoute(page: p)">@p</a>
                                    </li>
                                }
                                else if (p == 2 && currentPage > 4)
                                {
                                    <li class="page-item disabled"><span class="page-link">&hellip;</span></li>
                                }
                                else if (p == vm.TotalPages - 1 && currentPage < vm.TotalPages - 3)
                                {
                                    <li class="page-item disabled"><span class="page-link">&hellip;</span></li>
                                }
                            }
                            <li class="page-item @(currentPage >= vm.TotalPages ? "disabled" : null)">
                                <a class="page-link" asp-page="./Index" asp-all-route-data="Model.BuildRoute(page: Math.Min(vm.TotalPages, currentPage + 1))" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
        </div>
    </div>
</div>

@await Html.PartialAsync("_DeleteConfirmModal")

@functions {
    private int GetActiveFilterCount()
    {
        var count = 0;
        if (Model.FromDate.HasValue)
        {
            count++;
        }
        if (Model.ToDate.HasValue)
        {
            count++;
        }
        if (Model.ActivityTypeId.HasValue)
        {
            count++;
        }
        if (Model.AttachmentType != ActivityAttachmentTypeFilter.Any)
        {
            count++;
        }
        return count;
    }
}
