@page
@model ProjectManagement.Pages.Projects.Plan.DraftModel
@{
    ViewData["Title"] = "Baseline Plan Draft";
}

<h1 class="mb-3">Baseline Plan Draft</h1>
<p class="text-muted">Project: <strong>@Model.ProjectName</strong></p>
@if (Model.Draft is not null)
{
    <p class="text-muted">Version @Model.Draft.VersionNo (@Model.Draft.Status)</p>
}

@if (Model.Draft is not null && Model.Draft.Status != ProjectManagement.Models.Plans.PlanVersionStatus.Draft)
{
    <div class="alert alert-info" role="alert">
        Editing is locked while the plan is @Model.Draft.Status.
    </div>
}

@if (!string.IsNullOrWhiteSpace(Model.StatusMessage))
{
    <div class="alert alert-success" role="alert">
        @Model.StatusMessage
    </div>
}

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form method="post" asp-route-id="@Model.ProjectId">
    <div class="table-responsive mb-4">
        <table class="table table-sm align-middle">
            <thead>
                <tr>
                    <th scope="col" style="width: 6rem;">Stage</th>
                    <th scope="col">Description</th>
                    <th scope="col" style="width: 12rem;">Planned Start</th>
                    <th scope="col" style="width: 12rem;">Planned Due</th>
                </tr>
            </thead>
            <tbody>
            @for (var i = 0; i < Model.StageTemplates.Count; i++)
            {
                var template = Model.StageTemplates[i];
                <tr>
                    <td>
                        <div class="fw-semibold">@template.Code</div>
                        <div class="text-muted small">@template.Sequence</div>
                    </td>
                    <td>
                        <div class="fw-semibold">@template.Name</div>
                        @if (template.Optional)
                        {
                            <span class="badge bg-secondary">Optional</span>
                        }
                        @if (!string.IsNullOrWhiteSpace(template.ParallelGroup))
                        {
                            <span class="badge bg-info text-dark">Parallel @template.ParallelGroup</span>
                        }
                    </td>
                    <td>
                        <input type="hidden" asp-for="Stages[i].StageCode" />
                        @if (Model.AllowEdit)
                        {
                            <input asp-for="Stages[i].PlannedStart" type="date" class="form-control form-control-sm" />
                        }
                        else
                        {
                            <input asp-for="Stages[i].PlannedStart" type="date" class="form-control form-control-sm" disabled />
                        }
                        <span asp-validation-for="Stages[i].PlannedStart" class="text-danger small"></span>
                    </td>
                    <td>
                        @if (Model.AllowEdit)
                        {
                            <input asp-for="Stages[i].PlannedDue" type="date" class="form-control form-control-sm" />
                        }
                        else
                        {
                            <input asp-for="Stages[i].PlannedDue" type="date" class="form-control form-control-sm" disabled />
                        }
                        <span asp-validation-for="Stages[i].PlannedDue" class="text-danger small"></span>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="d-flex flex-wrap gap-2">
        @if (Model.AllowEdit)
        {
            <button type="submit" class="btn btn-primary" asp-page-handler="Save">Save Draft</button>
            <button type="submit" class="btn btn-outline-primary" asp-page-handler="Preview">Preview</button>
        }
        else if (Model.IsPreview)
        {
            <a class="btn btn-primary" asp-page="./Draft" asp-route-id="@Model.ProjectId">Edit Draft</a>
        }
        @if (Model.CanSubmit)
        {
            <button type="submit" class="btn btn-success" asp-page-handler="Submit">Submit for approval</button>
        }
        <a class="btn btn-outline-secondary" asp-page="/Projects/View" asp-route-id="@Model.ProjectId">Back</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        (() => {
            const starts = document.querySelectorAll('input[name$=".PlannedStart"]');
            for (const start of starts) {
                const dueName = start.name.replace('.PlannedStart', '.PlannedDue');
                const due = document.querySelector(`input[name="${dueName}"]`);
                if (!due) {
                    continue;
                }

                const validate = () => {
                    start.setCustomValidity('');
                    due.setCustomValidity('');

                    const startValue = start.value;
                    const dueValue = due.value;

                    if (startValue && dueValue && dueValue < startValue) {
                        due.setCustomValidity('Planned due must be on or after the planned start date.');
                    }
                };

                start.addEventListener('input', validate);
                due.addEventListener('input', validate);

                validate();
            }
        })();
    </script>
}
