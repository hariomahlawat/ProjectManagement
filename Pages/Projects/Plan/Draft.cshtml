@page
@using System
@using Microsoft.AspNetCore.Mvc.Rendering
@using ProjectManagement.Models.Plans
@model ProjectManagement.Pages.Projects.Plan.DraftModel
@{
    ViewData["Title"] = "Baseline Plan Draft";
}

<h1 class="mb-3">Baseline Plan Draft</h1>
<p class="text-muted">Project: <strong>@Model.ProjectName</strong></p>
@if (Model.Draft is not null)
{
    <p class="text-muted">Version @Model.Draft.VersionNo (@Model.Draft.Status)</p>
}

@if (Model.Draft is not null && Model.Draft.Status != PlanVersionStatus.Draft)
{
    <div class="alert alert-info" role="alert">
        Editing is locked while the plan is @Model.Draft.Status.
    </div>
}

@if (!string.IsNullOrWhiteSpace(Model.StatusMessage))
{
    <div class="alert alert-success" role="alert">
        @Model.StatusMessage
    </div>
}

<div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

<textarea id="plan-calculator-data" class="d-none">@Model.StageMetadataJson</textarea>

<form id="plan-draft-form" method="post" asp-route-id="@Model.ProjectId" data-allow-edit="@(Model.AllowEdit ? "true" : "false")">
    <div class="card mb-4">
        <div class="card-header">
            <strong>Step 1:</strong> Anchor options
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <label asp-for="Input.AnchorStageCode" class="form-label">Anchor stage</label>
                    <select asp-for="Input.AnchorStageCode" class="form-select" disabled="@(Model.AllowEdit ? null : "disabled")">
                        @foreach (var stage in Model.StageTemplates)
                        {
                            <option value="@stage.Code">@stage.Code - @stage.Name</option>
                        }
                    </select>
                    <span asp-validation-for="Input.AnchorStageCode" class="text-danger small"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="Input.AnchorDate" class="form-label">Anchor date</label>
                    <input asp-for="Input.AnchorDate" type="date" class="form-control" disabled="@(Model.AllowEdit ? null : "disabled")" />
                    <span asp-validation-for="Input.AnchorDate" class="text-danger small"></span>
                </div>
                <div class="col-md-3">
                    <label asp-for="Input.TransitionRule" class="form-label">Transition rule</label>
                    <select asp-for="Input.TransitionRule" class="form-select" asp-items="Html.GetEnumSelectList<PlanTransitionRule>()" disabled="@(Model.AllowEdit ? null : "disabled")"></select>
                    <span asp-validation-for="Input.TransitionRule" class="text-danger small"></span>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <div class="form-check">
                        <input asp-for="Input.SkipWeekends" class="form-check-input" disabled="@(Model.AllowEdit ? null : "disabled")" />
                        <label asp-for="Input.SkipWeekends" class="form-check-label">Skip weekends</label>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-check mt-2">
                        <input asp-for="Input.PncApplicable" class="form-check-input" disabled="@(Model.AllowEdit ? null : "disabled")" />
                        <label asp-for="Input.PncApplicable" class="form-check-label">PNC applicable</label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header">
            <strong>Step 2:</strong> Stage durations (days)
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-sm align-middle">
                    <thead>
                        <tr>
                            <th scope="col" style="width: 24rem;">Stage</th>
                            <th scope="col" style="width: 12rem;">Duration (days)</th>
                        </tr>
                    </thead>
                    <tbody>
                    @for (var i = 0; i < Model.StageTemplates.Count; i++)
                    {
                        var template = Model.StageTemplates[i];
                        <tr data-stage-code="@template.Code">
                            <td>
                                <div class="fw-semibold">@template.Code</div>
                                <div class="text-muted small">@template.Name</div>
                                @if (template.Optional)
                                {
                                    <span class="badge bg-secondary">Optional</span>
                                }
                                @if (!string.IsNullOrWhiteSpace(template.ParallelGroup))
                                {
                                    <span class="badge bg-info text-dark">Parallel @template.ParallelGroup</span>
                                }
                                @if (string.Equals(template.Code, "BENCH", StringComparison.OrdinalIgnoreCase))
                                {
                                    <div class="text-muted small">Runs in parallel after BID; must finish before COB.</div>
                                }
                                <input type="hidden" asp-for="Input.Stages[i].StageCode" value="@template.Code" />
                            </td>
                            <td>
                                <input asp-for="Input.Stages[i].DurationDays" type="number" min="0" class="form-control form-control-sm" readonly="@(Model.AllowEdit ? null : "readonly")" />
                                <span asp-validation-for="Input.Stages[i].DurationDays" class="text-danger small"></span>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div><strong>Step 3:</strong> Review &amp; manual overrides</div>
            <div class="form-check form-switch">
                <input asp-for="Input.UnlockManualDates" class="form-check-input" disabled="@(Model.AllowEdit ? null : "disabled")" />
                <label asp-for="Input.UnlockManualDates" class="form-check-label">Unlock manual date edits</label>
            </div>
        </div>
        <div class="card-body">
            @if (Model.HasManualOverrides)
            {
                <p class="text-warning small mb-3">Manual overrides are in effect for stages marked below.</p>
            }
            <div class="table-responsive">
                <table class="table table-sm align-middle">
                    <thead>
                        <tr>
                            <th scope="col" style="width: 20rem;">Stage</th>
                            <th scope="col" style="width: 10rem;">Planned start</th>
                            <th scope="col" style="width: 10rem;">Planned due</th>
                            <th scope="col" style="width: 11rem;">Manual start</th>
                            <th scope="col" style="width: 11rem;">Manual due</th>
                        </tr>
                    </thead>
                    <tbody>
                    @for (var i = 0; i < Model.StageTemplates.Count; i++)
                    {
                        var template = Model.StageTemplates[i];
                        var hasSchedule = Model.ComputedSchedule.TryGetValue(template.Code, out var schedule);
                        var manualStartReadOnly = !Model.AllowEdit || !Model.Input.UnlockManualDates;
                        var manualDueReadOnly = manualStartReadOnly;
                        var hasManualOverride = Model.ManualOverrideStages.Contains(template.Code);
                        <tr data-stage-code="@template.Code">
                            <td>
                                <div class="fw-semibold">@template.Code</div>
                                <div class="text-muted small">@template.Name</div>
                                @if (hasManualOverride)
                                {
                                    <span class="badge bg-warning text-dark">Manual</span>
                                }
                            </td>
                            <td>
                                <span class="plan-start" data-stage-code="@template.Code">
                                    @(hasSchedule ? schedule.start.ToString("dd MMM yyyy") : "–")
                                </span>
                            </td>
                            <td>
                                <span class="plan-due" data-stage-code="@template.Code">
                                    @(hasSchedule ? schedule.due.ToString("dd MMM yyyy") : "–")
                                </span>
                            </td>
                            <td>
                                <input asp-for="Input.Stages[i].ManualStart" type="date" class="form-control form-control-sm" data-manual-start="@template.Code" readonly="@(manualStartReadOnly ? "readonly" : null)" />
                                <span asp-validation-for="Input.Stages[i].ManualStart" class="text-danger small"></span>
                            </td>
                            <td>
                                <input asp-for="Input.Stages[i].ManualDue" type="date" class="form-control form-control-sm" data-manual-due="@template.Code" readonly="@(manualDueReadOnly ? "readonly" : null)" />
                                <span asp-validation-for="Input.Stages[i].ManualDue" class="text-danger small"></span>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="d-flex flex-wrap gap-2">
        @if (Model.AllowEdit)
        {
            <button type="submit" class="btn btn-primary" asp-page-handler="Save">Save Draft</button>
        }
        @if (Model.AllowEdit)
        {
            <button type="submit" class="btn btn-success" asp-page-handler="Submit" disabled="@(Model.CanSubmit ? null : "disabled")">Submit for approval</button>
        }
        <a class="btn btn-outline-secondary" asp-page="/Projects/View" asp-route-id="@Model.ProjectId">Back</a>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/plan.js"></script>
}
