@page "{id:int}"
@using System
@using System.Linq
@using System.Text.Json
@using ProjectManagement.Models
@using ProjectManagement.Models.Execution
@using ProjectManagement.Models.Plans
@using ProjectManagement.ViewModels
@model ProjectManagement.Pages.Projects.OverviewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var project = Model.Project;
    var pageTitle = project?.Name ?? "Project";
    var isAdmin = User.IsInRole("Admin");
    var isHoD = User.IsInRole("HoD");
    var isProjectOfficer = User.IsInRole("Project Officer");
    var isThisProjectsPo = isProjectOfficer &&
        string.Equals(Model.Project?.LeadPoUserId, Model.CurrentUserId, StringComparison.Ordinal);
    var isThisProjectsHod = isHoD &&
        string.Equals(Model.Project?.HodUserId, Model.CurrentUserId, StringComparison.Ordinal);
    var planState = Model.PlanEdit?.State ?? new PlanEditorStateVm();
    var planLocked = planState.IsLocked;
    var hasMyDraft = planState.HasMyDraft;
    var pendingOwnedByCurrentUser = planState.PendingOwnedByCurrentUser;
    var canEditTimeline = (isAdmin || isThisProjectsPo || isThisProjectsHod) && !planLocked;
    var submissionBlocked = planState.HasPendingSubmission && !planState.PendingOwnedByCurrentUser;
    var completedStages = Model.Timeline.CompletedCount;
    var totalStages = Model.Timeline.TotalStages;
    var progressMax = totalStages == 0 ? 1 : totalStages;
    var canManagePhotos = isAdmin || isThisProjectsPo || isThisProjectsHod;
    var coverPhoto = Model.CoverPhoto;
    var coverVersion = Model.CoverPhotoVersion ?? coverPhoto?.Version;
    var additionalPhotos = Model.Photos.Where(p => coverPhoto == null || p.Id != coverPhoto.Id).ToList();
    Func<ProjectPhoto, string, int?, string> photoUrl = (photo, size, version) =>
        Url.Page("/Projects/Photos/View", new { id = Model.Project!.Id, photoId = photo.Id, size, v = version })!;
    var coverXs = coverPhoto != null ? photoUrl(coverPhoto, "xs", coverVersion) : null;
    var coverSm = coverPhoto != null ? photoUrl(coverPhoto, "sm", coverVersion) : null;
    var coverMd = coverPhoto != null ? photoUrl(coverPhoto, "md", coverVersion) : null;
    var coverXl = coverPhoto != null ? photoUrl(coverPhoto, "xl", coverVersion) : null;
    var coverSrcSet = coverPhoto != null
        ? string.Join(", ", new[]
        {
            $"{coverXs} 400w",
            $"{coverSm} 800w",
            $"{coverMd} 1200w",
            $"{coverXl} 1600w"
        })
        : null;
    var previewPhotos = additionalPhotos.Take(4).ToList();
    var remainingPhotos = Math.Max(0, additionalPhotos.Count - previewPhotos.Count);
    string? galleryModalId = null;
    ProjectPhotoLightboxViewModel? galleryModalModel = null;
    if (additionalPhotos.Any())
    {
        galleryModalId = $"project-gallery-modal-{Model.Project!.Id}";
        galleryModalModel = new ProjectPhotoLightboxViewModel(
            Model.Project!.Id,
            project?.Name ?? "Project",
            Model.Photos,
            coverPhoto?.Id,
            Model.CoverPhotoVersion ?? coverPhoto?.Version,
            galleryModalId);
    }
    ViewData["Title"] = pageTitle;
    var remarksConfigJson = JsonSerializer.Serialize(Model.RemarksPanel, new JsonSerializerOptions(JsonSerializerDefaults.Web));
}

@functions
{
    private static string StageStatusLabel(string? status) => status switch
    {
        "Completed" => "Completed",
        "InProgress" => "In progress",
        "Blocked" => "Blocked",
        "Skipped" => "Skipped",
        "NotStarted" => "Not started",
        null => "Unknown",
        _ when string.IsNullOrWhiteSpace(status) => "Unknown",
        _ => status!
    };

    private static string StageStatusLabel(StageStatus status) => StageStatusLabel(status.ToString());

}

<div class="container-xxl">
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Projects/Index">Projects</a></li>
            <li class="breadcrumb-item active" aria-current="page">Overview</li>
        </ol>
    </nav>

    <div class="d-flex flex-column flex-md-row align-items-md-center justify-content-between mb-3 gap-3">
        <div>
            <h1 class="h3 mb-1">
                @pageTitle
                @if (!string.IsNullOrWhiteSpace(project?.CaseFileNumber))
                {
                    <small class="text-muted">(@project?.CaseFileNumber)</small>
                }
            </h1>
            <div class="text-muted">Created on @(project is { } p ? p.CreatedAt.ToString("dd MMM yyyy") : "â€”")</div>
        </div>
        <partial name="_AssignRolesOffcanvas" model="Model.AssignRoles" />
    </div>

    @if (string.Equals(Request.Query["oc"], "procurement", StringComparison.Ordinal))
    {
        <div id="open-procurement" data-open="1"></div>
    }
    @if (TempData["OpenOffcanvas"] as string == "assign-roles")
    {
        <div id="open-assign-roles" data-open="1"></div>
    }
    @if (TempData["OpenOffcanvas"] as string == "plan-edit")
    {
        <div id="open-plan-edit" data-open="1"></div>
    }
    @if (TempData["OpenOffcanvas"] as string == "plan-review")
    {
        <div id="open-plan-review" data-open="1"></div>
    }
    @if (TempData["Error"] is string err)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @err
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Flash"] is string ok)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @ok
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="alert alert-warning d-flex align-items-center justify-content-between@(Model.HasBackfill ? string.Empty : " d-none")"
         role="alert"
         data-backfill-banner>
        <div>
            <strong>Action needed:</strong> Some earlier stages were auto-completed and need dates or costs.
        </div>
        <button type="button" class="btn btn-sm btn-warning text-dark" data-action="open-backfill">Backfill now</button>
    </div>

    @if (project?.HodUserId == null || project?.LeadPoUserId == null)
    {
        <div class="alert alert-warning d-flex align-items-center" role="alert">
            <div class="me-3">
                @if (project?.HodUserId == null)
                {
                    <div>Head of Department not assigned.</div>
                }
                @if (project?.LeadPoUserId == null)
                {
                    <div>Project Officer not assigned.</div>
                }
            </div>
            @if (User.IsInRole("Admin") || User.IsInRole("HoD"))
            {
                <button type="button"
                        class="btn btn-sm btn-warning"
                        data-bs-toggle="offcanvas"
                        data-bs-target="#offcanvasAssignRoles"
                        aria-controls="offcanvasAssignRoles">
                    Assign Roles
                </button>
            }
        </div>
    }

    @if (planState.HasPendingSubmission)
    {
        <div class="alert alert-info d-flex align-items-center justify-content-between" role="alert">
            <div>
                @if (planState.PendingOwnedByCurrentUser)
                {
                    <strong>Your plan submission is awaiting HoD review.</strong>
                }
                else
                {
                    <strong>Timeline plan awaiting HoD review.</strong>
                }
                @if (planState.PendingSubmittedOn is DateTimeOffset pendingOn)
                {
                    <span class="ms-1">Submitted on @pendingOn.ToLocalTime().ToString("dd MMM yyyy").</span>
                }
                @if (!string.IsNullOrWhiteSpace(planState.PendingSubmittedBy))
                {
                    <span class="ms-1">Submitted by @planState.PendingSubmittedBy.</span>
                }
            </div>
            @if (isHoD)
            {
                <button class="btn btn-sm btn-primary"
                        type="button"
                        data-bs-toggle="offcanvas"
                        data-bs-target="#offcanvasPlanReview"
                        aria-controls="offcanvasPlanReview">
                    Review &amp; approve
                </button>
            }
        </div>
    }

    <div class="row g-3 mb-4">
        <div class="col-lg-8 d-flex flex-column gap-3">
            <div class="card pm-card">
                <div class="card-header pm-card-header">
                    <div class="pm-card-heading">
                        <span class="pm-card-icon" aria-hidden="true">
                            <i class="bi bi-layout-text-window"></i>
                        </span>
                        <div>
                            <h2 class="pm-card-title h5 mb-0">Project overview</h2>
                            <p class="pm-card-subtitle mb-0">Description and key project facts</p>
                        </div>
                    </div>
                    @if (canManagePhotos || isThisProjectsPo || isAdmin || isHoD)
                    {
                        <div class="pm-card-menu dropdown">
                            <button class="btn pm-card-menu-toggle"
                                    type="button"
                                    data-bs-toggle="dropdown"
                                    aria-expanded="false"
                                    aria-label="Project overview actions">
                                <i class="bi bi-three-dots-vertical" aria-hidden="true"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                @if (canManagePhotos)
                                {
                                    <li>
                                        <a class="dropdown-item d-flex align-items-center gap-2"
                                           asp-page="/Projects/Photos/Index"
                                           asp-route-id="@Model.Project!.Id">
                                            <i class="bi bi-sliders" aria-hidden="true"></i>
                                            <span>Manage photos</span>
                                        </a>
                                    </li>
                                }
                                @if (isThisProjectsPo)
                                {
                                    <li>
                                        <a class="dropdown-item"
                                           asp-page="/Projects/Meta/Request"
                                           asp-route-id="@Model.Project!.Id">Request change</a>
                                    </li>
                                }
                                @if (isAdmin || isHoD)
                                {
                                    <li>
                                        <a class="dropdown-item"
                                           asp-page="/Projects/Meta/Edit"
                                           asp-route-id="@Model.Project!.Id">Edit details</a>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
                <div class="card-body pm-card-body">
                    <div class="row g-4 align-items-start">
                        <div class="col-12 col-lg-5 col-xl-4">
                            <div class="project-photo-cover">
                                <div class="ratio ratio-4x3 w-100">
                                    @if (coverPhoto != null)
                                    {
                                        <picture>
                                            <source type="image/webp"
                                                    srcset="@coverSrcSet"
                                                    sizes="(min-width: 1200px) 360px, (min-width: 992px) 320px, 100vw" />
                                            <img class="w-100 h-100 object-fit-cover rounded border"
                                                 width="360"
                                                 height="270"
                                                 src="@coverXs"
                                                 srcset="@coverSrcSet"
                                                 sizes="(min-width: 1200px) 360px, (min-width: 992px) 320px, 100vw"
                                                 alt="@(string.IsNullOrWhiteSpace(coverPhoto.Caption) ? $"{project?.Name} cover photo" : coverPhoto.Caption)" />
                                        </picture>
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center justify-content-center w-100 h-100 rounded border bg-light text-muted">
                                            <span>No cover photo</span>
                                        </div>
                                    }
                                </div>
                                @if (!string.IsNullOrWhiteSpace(coverPhoto?.Caption))
                                {
                                    <div class="mt-2 text-muted small">@coverPhoto.Caption</div>
                                }
                            </div>
                        </div>
                        <div class="col-12 col-lg-7 col-xl-8">
                            <dl class="row mb-0">
                                <dt class="col-sm-4">Category</dt>
                                <dd class="col-sm-8">
                                    @if (Model.CategoryPath.Any())
                                    {
                                        <span class="badge text-bg-light">@string.Join(" â€º ", Model.CategoryPath.Select(c => c.Name))</span>
                                    }
                                    else
                                    {
                                        <span>â€”</span>
                                    }
                                </dd>

                                <dt class="col-sm-4">Sponsoring Unit</dt>
                                <dd class="col-sm-8">@(Model.Project?.SponsoringUnit?.Name ?? "â€”")</dd>

                                <dt class="col-sm-4">Sponsoring Line Dte</dt>
                                <dd class="col-sm-8">@(Model.Project?.SponsoringLineDirectorate?.Name ?? "â€”")</dd>

                                <dt class="col-sm-4">Head of Department</dt>
                                <dd class="col-sm-8">@DisplayUser(project?.HodUser)</dd>

                                <dt class="col-sm-4">Project Officer</dt>
                                <dd class="col-sm-8">@DisplayUser(project?.LeadPoUser)</dd>
                            </dl>
                        </div>
                        <div class="col-12">
                            <h3 class="h6 mb-2">Project description</h3>
                            <div class="project-overview__description">@(!string.IsNullOrWhiteSpace(project?.Description) ? project.Description : "â€”")</div>
                        </div>
                    </div>

                </div>
            </div>
            <partial name="_ProjectProcurementAtAGlance" model="Model.Procurement" />

            <div class="card pm-card">
                <div class="card-header pm-card-header">
                    <div class="pm-card-heading">
                        <span class="pm-card-icon" aria-hidden="true">
                            <i class="bi bi-file-earmark-text"></i>
                        </span>
                        <div>
                            <h3 class="pm-card-title h5 mb-0">Documents</h3>
                            <p class="pm-card-subtitle mb-0">Project files organised by stage.</p>
                        </div>
                    </div>
                    <div class="pm-card-actions align-items-center gap-2">
                        @if (Model.IsDocumentApprover && Model.DocumentPendingRequestCount > 0)
                        {
                            <span class="badge text-bg-warning">@Model.DocumentPendingRequestCount pending</span>
                        }
                        @{
                            var canUploadDocuments = isAdmin || isThisProjectsPo || isThisProjectsHod;
                            var canViewRecycleBin = isAdmin;

                            if (canUploadDocuments || canViewRecycleBin)
                            {
                                <div class="pm-card-menu dropdown ms-1">
                                    <button class="btn pm-card-menu-toggle"
                                            type="button"
                                            data-bs-toggle="dropdown"
                                            aria-expanded="false"
                                            aria-label="Document actions">
                                        <i class="bi bi-three-dots-vertical" aria-hidden="true"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end">
                                        @if (canUploadDocuments)
                                        {
                                            <li>
                                                <a class="dropdown-item"
                                                   asp-page="/Projects/Documents/UploadRequest"
                                                   asp-route-id="@Model.Project!.Id">Upload</a>
                                            </li>
                                        }
                                        @if (canViewRecycleBin)
                                        {
                                            <li>
                                                <a class="dropdown-item d-flex align-items-center gap-2"
                                                   asp-area="Admin"
                                                   asp-page="/Documents/Recycle">
                                                    <i class="bi bi-trash" aria-hidden="true"></i>
                                                    <span>Recycle Bin</span>
                                                </a>
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="card-body pm-card-body">
                    @{
                        var documentList = Model.DocumentList;
                        var displayedCount = documentList.Groups.Sum(g => g.Items.Count);
                    }
                    <div class="mb-3 text-muted small">
                        @if (Model.DocumentList.TotalItems > 0)
                        {
                            <span>Showing @displayedCount of @Model.DocumentList.TotalItems @Model.DocumentList.StatusHeading.</span>
                        }
                        else
                        {
                            <span>No @Model.DocumentList.StatusHeading found for this project.</span>
                        }
                    </div>
                    @if (!Model.DocumentList.HasItems)
                    {
                        <div class="border rounded p-4 text-center text-muted bg-light-subtle">
                            <p class="mb-2">No @Model.DocumentList.StatusHeading found for this project.</p>
                            @if (isAdmin || isThisProjectsPo || isThisProjectsHod)
                            {
                                <a class="btn btn-sm btn-primary"
                                   asp-page="/Projects/Documents/UploadRequest"
                                   asp-route-id="@Model.Project!.Id">Upload document</a>
                            }
                        </div>
                    }
                    else
                    {
                        var documentRows = Model.DocumentList.Groups
                            .SelectMany(group => group.Items.Select(item => new { group.StageDisplayName, Item = item }))
                            .ToList();
                        <div class="table-responsive">
                            <table class="table table-sm align-middle documents-table">
                                <thead>
                                    <tr>
                                        <th scope="col" class="text-muted text-uppercase small">Stage</th>
                                        <th scope="col" class="text-muted text-uppercase small">Document</th>
                                        <th scope="col" class="text-muted text-uppercase small">Status</th>
                                        <th scope="col" class="text-end text-muted text-uppercase small">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var row in documentRows)
                                    {
                                        var item = row.Item;
                                        var canReplaceDocument = item.DocumentId.HasValue && (isAdmin || isThisProjectsPo || isThisProjectsHod) && !item.IsRemoved && !item.IsPending;
                                        var canRequestDelete = item.DocumentId.HasValue && isThisProjectsPo && !item.IsRemoved && !item.IsPending;
                                        var canDirectDelete = item.DocumentId.HasValue && (isAdmin || isThisProjectsHod) && !item.IsRemoved && !item.IsPending;
                                        var canReviewRequest = Model.IsDocumentApprover && item.RequestId.HasValue;
                                        var hasActions = canReplaceDocument || canRequestDelete || canDirectDelete || canReviewRequest;
                                        <tr>
                                            <td class="text-nowrap align-top">
                                                <span class="text-muted">@row.StageDisplayName</span>
                                            </td>
                                            <td>
                                                <div class="fw-semibold">
                                                    @if (!string.IsNullOrEmpty(item.PreviewUrl))
                                                    {
                                                        <a href="@item.PreviewUrl">@item.Title</a>
                                                    }
                                                    else
                                                    {
                                                        @item.Title
                                                    }
                                                </div>
                                                <div class="text-muted small mt-1">
                                                    <span>@item.FileSizeDisplay</span>
                                                    @if (!string.IsNullOrWhiteSpace(item.MetadataSummary))
                                                    {
                                                        <span class="ms-2">@item.MetadataSummary</span>
                                                    }
                                                </div>
                                                @if (!string.IsNullOrWhiteSpace(item.SecondarySummary))
                                                {
                                                    <div class="text-muted small mt-1">@item.SecondarySummary</div>
                                                }
                                                @if (!string.IsNullOrWhiteSpace(item.FileName) && !string.Equals(item.FileName, item.Title, StringComparison.OrdinalIgnoreCase))
                                                {
                                                    <div class="text-muted small mt-1">File: @item.FileName</div>
                                                }
                                            </td>
                                            <td class="align-top">
                                                <span class="badge text-bg-@item.StatusVariant">@item.StatusLabel</span>
                                            </td>
                                            <td class="text-end align-top">
                                                @if (hasActions)
                                                {
                                                    <div class="dropdown">
                                                        <button class="btn btn-link btn-icon dropdown-toggle"
                                                                type="button"
                                                                data-bs-toggle="dropdown"
                                                                aria-expanded="false"
                                                                aria-label="Document actions">
                                                            <i class="bi bi-three-dots-vertical" aria-hidden="true"></i>
                                                        </button>
                                                        <ul class="dropdown-menu dropdown-menu-end">
                                                            @if (canReplaceDocument)
                                                            {
                                                                <li>
                                                                    <a class="dropdown-item"
                                                                       asp-page="/Projects/Documents/ReplaceRequest"
                                                                       asp-route-id="@Model.Project!.Id"
                                                                       asp-route-documentId="@item.DocumentId">Replace</a>
                                                                </li>
                                                            }
                                                            @if (canRequestDelete)
                                                            {
                                                                <li>
                                                                    <a class="dropdown-item"
                                                                       asp-page="/Projects/Documents/DeleteRequest"
                                                                       asp-route-id="@Model.Project!.Id"
                                                                       asp-route-documentId="@item.DocumentId">Request delete</a>
                                                                </li>
                                                            }
                                                            @if (canDirectDelete)
                                                            {
                                                                <li>
                                                                    <a class="dropdown-item"
                                                                       asp-page="/Projects/Documents/DeleteRequest"
                                                                       asp-route-id="@Model.Project!.Id"
                                                                       asp-route-documentId="@item.DocumentId">Delete document</a>
                                                                </li>
                                                            }
                                                            @if (canReviewRequest)
                                                            {
                                                                <li>
                                                                    <a class="dropdown-item"
                                                                       asp-page="/Projects/Documents/Approvals/Review"
                                                                       asp-route-id="@Model.Project!.Id"
                                                                       asp-route-requestId="@item.RequestId">Review request</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    @if (Model.DocumentList.ShowPagination)
                    {
                        <nav class="mt-3">
                            <ul class="pagination pagination-sm mb-0">
                                @for (var pageNumber = 1; pageNumber <= Model.DocumentList.TotalPages; pageNumber++)
                                {
                                    var stageValue = Model.DocumentList.SelectedStageValue;
                                    var statusValue = Model.DocumentList.SelectedStatusValue;
                                    var isDefaultStatus = string.Equals(
                                        statusValue,
                                        ProjectDocumentListViewModel.PublishedStatusValue,
                                        StringComparison.OrdinalIgnoreCase);
                                    var pageUrl = Url.Page(
                                        null,
                                        new
                                        {
                                            id = Model.Project!.Id,
                                            docStage = string.IsNullOrEmpty(stageValue) ? null : stageValue,
                                            docStatus = isDefaultStatus ? null : statusValue,
                                            docPage = pageNumber
                                        });
                                    <li class="page-item @(pageNumber == Model.DocumentList.Page ? "active" : string.Empty)">
                                        <a class="page-link" href="@pageUrl">@pageNumber</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    }
                </div>
            </div>

            <div class="card pm-card">
                @{
                    var stageTotal = Model.Stages.Count;
                    var stageCompleted = Model.Stages.Count(s => s.Status == StageStatus.Completed);
                    var stageBlocked = Model.Stages.Count(s => s.Status == StageStatus.Blocked);
                    var stageProgressPercent = stageTotal == 0
                        ? 0
                        : (int)Math.Round((decimal)stageCompleted / stageTotal * 100, MidpointRounding.AwayFromZero);
                }
                <div class="card-header pm-card-header">
                    <div class="pm-card-heading">
                        <span class="pm-card-icon" aria-hidden="true">
                            <i class="bi bi-list-check"></i>
                        </span>
                        <div>
                            <h3 class="pm-card-title h5 mb-0">Stage progress</h3>
                            <p class="pm-card-subtitle mb-0">Current status.</p>
                        </div>
                    </div>
                    @if (stageTotal > 0)
                    {
                        <div class="pm-card-meta">
                            <div class="pm-card-progress" aria-hidden="true">
                                <span class="pm-card-progress-bar" style="width: @stageProgressPercent%;"></span>
                            </div>
                            <span class="text-muted small">@stageCompleted of @stageTotal completed</span>
                            @if (stageBlocked > 0)
                            {
                                <span class="badge bg-warning-subtle text-warning-emphasis small">@stageBlocked blocked</span>
                            }
                        </div>
                    }
                </div>
                <div class="card-body pm-card-body">
                    @if (!Model.Stages.Any())
                    {
                        <p class="mb-0 text-muted">No stage updates recorded yet.</p>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table align-middle mb-0">
                                <thead>
                                    <tr>
                                        <th>Stage</th>
                                        <th>Status</th>
                                        <th>Completed On</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @foreach (var stage in Model.Stages)
                                {
                                    <tr>
                                        <td>@stage.StageCode</td>
                                        <td>@stage.Status</td>
                                        <td>@(stage.CompletedOn?.ToString("dd MMM yyyy") ?? "â€”")</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
            <div class="card pm-card">
                <div class="card-body pm-card-body">
                    <div class="project-gallery" data-gallery data-gallery-project="@Model.Project!.Id" data-gallery-modal-id="@(galleryModalId ?? string.Empty)">
                        <div class="project-gallery__header">
                            <h3 class="h6 mb-2">Gallery</h3>
                            <p class="text-muted small mb-0">Browse project highlights without leaving the page.</p>
                        </div>
                        @if (additionalPhotos.Any())
                        {
                            <div class="project-gallery__grid" role="list">
                                @for (var i = 0; i < previewPhotos.Count; i++)
                                {
                                    var photo = previewPhotos[i];
                                    var thumbUrl = photoUrl(photo, "sm", photo.Version);
                                    var mediumUrl = photoUrl(photo, "md", photo.Version);
                                    var largeUrl = photoUrl(photo, "xl", photo.Version);
                                    var thumbSrcSet = string.Join(", ", new[]
                                    {
                                        $"{thumbUrl} 1x",
                                        $"{mediumUrl} 1.5x",
                                        $"{largeUrl} 2x"
                                    });
                                    var captionText = string.IsNullOrWhiteSpace(photo.Caption) ? null : photo.Caption;
                                    var altText = captionText ?? $"{project?.Name ?? "Project"} photo";
                                    <a class="project-gallery__item"
                                       role="listitem"
                                       href="@largeUrl"
                                       data-gallery-trigger
                                       data-gallery-photo-id="@photo.Id"
                                       data-gallery-full="@largeUrl"
                                       data-gallery-srcset="@thumbSrcSet"
                                       data-gallery-caption="@captionText"
                                       data-gallery-alt="@altText"
                                       aria-label="View photo @(i + 1) of @additionalPhotos.Count@(captionText is null ? string.Empty : $": {captionText}")">
                                        <div class="project-gallery__media">
                                            <picture>
                                                <source type="image/webp" srcset="@thumbSrcSet" />
                                                <img class="project-gallery__img"
                                                     loading="lazy"
                                                     width="320"
                                                     height="240"
                                                     src="@thumbUrl"
                                                     srcset="@thumbSrcSet"
                                                     alt="@altText" />
                                            </picture>
                                        </div>
                                        <div class="project-gallery__overlay" aria-hidden="true">
                                            <span class="project-gallery__overlay-text">@(captionText ?? "View photo")</span>
                                        </div>
                                    </a>
                                }

                                <a class="project-gallery__item project-gallery__item--cta"
                                   role="listitem"
                                   href="@Url.Page("/Projects/Photos/Index", new { id = Model.Project!.Id })"
                                   data-gallery-open
                                   aria-controls="@galleryModalId"
                                   aria-label="View the full project photo gallery">
                                    <div class="project-gallery__cta-body">
                                        <span class="project-gallery__cta-icon" aria-hidden="true">&#128247;</span>
                                        <span class="project-gallery__cta-text">View gallery</span>
                                        @if (remainingPhotos > 0)
                                        {
                                            <span class="project-gallery__cta-meta">+@remainingPhotos more</span>
                                        }
                                    </div>
                                </a>
                            </div>
                        }
                        else
                        {
                            var emptyStateHeadingId = $"project-photo-empty-title-{Model.Project?.Id ?? 0}";
                            var emptyStateDescriptionId = $"{emptyStateHeadingId}-desc";
                            <div class="project-photo-empty border rounded bg-light-subtle text-center"
                                 role="region"
                                 aria-labelledby="@emptyStateHeadingId"
                                 aria-describedby="@emptyStateDescriptionId">
                                <div class="project-photo-empty-body">
                                    <span class="project-photo-empty-icon" aria-hidden="true">
                                        <i class="bi bi-images"></i>
                                    </span>
                                    <h3 id="@emptyStateHeadingId" class="h6 fw-semibold mb-2">No photos yet</h3>
                                    <p id="@emptyStateDescriptionId" class="mb-3 text-muted">
                                        Add a cover or gallery photo to help everyone recognise this project at a glance.
                                    </p>
                                    @if (canManagePhotos)
                                    {
                                        <a class="btn btn-primary"
                                           asp-page="/Projects/Photos/Index"
                                           asp-route-id="@Model.Project!.Id"
                                           aria-label="Upload the first project photo">
                                            Upload photo
                                        </a>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            @if (additionalPhotos.Any())
            {
                <partial name="_ProjectPhotoLightbox" model="galleryModalModel" />
            }
        </div>
        <div class="col-lg-4 d-flex flex-column gap-3">
            @if (Model.IsDocumentApprover && Model.DocumentPendingRequests.Any())
            {
                <div class="card pm-card">
                    <div class="card-header pm-card-header">
                        <div class="pm-card-heading">
                            <span class="pm-card-icon" aria-hidden="true">
                                <i class="bi bi-inbox"></i>
                            </span>
                            <div>
                                <h3 class="pm-card-title h6 mb-0">Document requests</h3>
                                <p class="pm-card-subtitle mb-0">Newest submissions awaiting your decision.</p>
                            </div>
                        </div>
                    </div>
                    <div class="card-body pm-card-body d-flex flex-column gap-3">
                        @foreach (var request in Model.DocumentPendingRequests)
                        {
                            <div class="border rounded p-3">
                                <div class="d-flex justify-content-between align-items-start gap-2">
                                    <div>
                                        <div class="fw-semibold">@request.Title</div>
                                        <div class="text-muted small">@request.StageDisplayName Â· @request.RequestTypeLabel</div>
                                        <div class="text-muted small">@request.RequestedSummary</div>
                                        <div class="text-muted small">@request.FileName (@request.FileSizeDisplay)</div>
                                    </div>
                                    <span class="badge text-bg-warning">Pending</span>
                                </div>
                                <div class="d-flex flex-wrap gap-2 mt-3">
                                    <form method="post"
                                          class="d-inline"
                                          asp-page="/Projects/Documents/Approvals/Review"
                                          asp-page-handler="Approve"
                                          asp-route-id="@Model.Project!.Id"
                                          asp-route-requestId="@request.RequestId">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="Input.RequestId" value="@request.RequestId" />
                                        <input type="hidden" name="Input.RowVersion" value="@request.RowVersion" />
                                        <button type="submit" class="btn btn-sm btn-success">Approve</button>
                                    </form>
                                    <form method="post"
                                          class="d-inline"
                                          asp-page="/Projects/Documents/Approvals/Review"
                                          asp-page-handler="Reject"
                                          asp-route-id="@Model.Project!.Id"
                                          asp-route-requestId="@request.RequestId">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="Input.RequestId" value="@request.RequestId" />
                                        <input type="hidden" name="Input.RowVersion" value="@request.RowVersion" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger">Reject</button>
                                    </form>
                                    <a class="btn btn-sm btn-outline-secondary"
                                       asp-page="/Projects/Documents/Approvals/Review"
                                       asp-route-id="@Model.Project!.Id"
                                       asp-route-requestId="@request.RequestId">Review</a>
                                </div>
                            </div>
                        }
                        <a class="btn btn-sm btn-outline-secondary align-self-start"
                           asp-page="/Projects/Documents/Approvals/Index"
                           asp-route-id="@Model.Project!.Id">View all requests</a>
                    </div>
                </div>
            }
            @if (Model.MetaChangeRequest is { } metaRequest)
            {
                if (isHoD || isAdmin)
                {
                    <div class="card pm-card">
                        <div class="card-header pm-card-header">
                            <div class="pm-card-heading">
                                <span class="pm-card-icon" aria-hidden="true">
                                    <i class="bi bi-clipboard2-data"></i>
                                </span>
                                <div>
                                    <h3 class="pm-card-title h6 mb-0">Meta change pending</h3>
                                    <p class="pm-card-subtitle mb-0">Requested @metaRequest.RequestedOnUtc.ToLocalTime().ToString("dd MMM yyyy, HH:mm")</p>
                                </div>
                            </div>
                        </div>
                        <div class="card-body pm-card-body d-flex flex-column gap-3">
                            @if (metaRequest.HasDrift)
                            {
                                <div class="alert alert-warning border-warning-subtle bg-warning-subtle text-dark" role="alert">
                                    <div class="fw-semibold">Project details have changed since this request was raised</div>
                                    <div class="small mb-2">Review the diffs below. You may approve, reject, or open direct edit to reconcile.</div>
                                    <ul class="small mb-0 ps-3">
                                        @foreach (var drift in metaRequest.Drift)
                                        {
                                            if (drift.IsProjectRecord)
                                            {
                                                <li>@drift.Field: @drift.CurrentValue.</li>
                                            }
                                            else
                                            {
                                                <li>@drift.Field changed: <span class="fw-semibold">@drift.OriginalValue</span> â†’ <span class="fw-semibold">@drift.CurrentValue</span></li>
                                            }
                                        }
                                    </ul>
                                </div>
                            }
                            <div>
                                <div class="fw-semibold">@metaRequest.RequestedBy</div>
                                @if (!string.IsNullOrWhiteSpace(metaRequest.RequestNote))
                                {
                                    <div class="mt-2">
                                        <div class="text-muted small text-uppercase">PO note</div>
                                        <div>@metaRequest.RequestNote</div>
                                    </div>
                                }
                            </div>
                            <div class="d-flex flex-column gap-3">
                                <div>
                                    <div class="fw-semibold">Name</div>
                                    <div class="text-muted small">Current</div>
                                    <div>@metaRequest.Name.CurrentValue</div>
                                    <div class="text-muted small mt-1">Proposed</div>
                                    <div>
                                        <span class="fw-semibold">@metaRequest.Name.ProposedValue</span>
                                        @if (metaRequest.Name.HasChanged)
                                        {
                                            <span class="badge text-bg-warning ms-1">Changed</span>
                                        }
                                    </div>
                                </div>
                                <div>
                                    <div class="fw-semibold">Description</div>
                                    <div class="text-muted small">Current</div>
                                    <div>@metaRequest.Description.CurrentValue</div>
                                    <div class="text-muted small mt-1">Proposed</div>
                                    <div class="border rounded p-2 bg-light">
                                        @metaRequest.Description.ProposedValue
                                    </div>
                                    @if (metaRequest.Description.HasChanged)
                                    {
                                        <span class="badge text-bg-warning mt-1">Changed</span>
                                    }
                                </div>
                                <div>
                                    <div class="fw-semibold">Case file number</div>
                                    <div class="text-muted small">Current</div>
                                    <div>@metaRequest.CaseFileNumber.CurrentValue</div>
                                    <div class="text-muted small mt-1">Proposed</div>
                                    <div>
                                        <span class="fw-semibold">@metaRequest.CaseFileNumber.ProposedValue</span>
                                        @if (metaRequest.CaseFileNumber.HasChanged)
                                        {
                                            <span class="badge text-bg-warning ms-1">Changed</span>
                                        }
                                    </div>
                                </div>
                                <div>
                                    <div class="fw-semibold">Category</div>
                                    <div class="text-muted small">Current</div>
                                    <div>@metaRequest.Category.CurrentValue</div>
                                    <div class="text-muted small mt-1">Proposed</div>
                                    <div>
                                        <span class="fw-semibold">@metaRequest.Category.ProposedValue</span>
                                        @if (metaRequest.Category.HasChanged)
                                        {
                                            <span class="badge text-bg-warning ms-1">Changed</span>
                                        }
                                    </div>
                                </div>
                                <div>
                                    <div class="fw-semibold">Sponsoring Unit</div>
                                    <div class="text-muted small">Current</div>
                                    <div>@metaRequest.SponsoringUnit.CurrentValue</div>
                                    <div class="text-muted small mt-1">Proposed</div>
                                    <div>
                                        <span class="fw-semibold">@metaRequest.SponsoringUnit.ProposedValue</span>
                                        @if (metaRequest.SponsoringUnit.HasChanged)
                                        {
                                            <span class="badge text-bg-warning ms-1">Changed</span>
                                        }
                                    </div>
                                </div>
                                <div>
                                    <div class="fw-semibold">Sponsoring Line Dte</div>
                                    <div class="text-muted small">Current</div>
                                    <div>@metaRequest.SponsoringLineDirectorate.CurrentValue</div>
                                    <div class="text-muted small mt-1">Proposed</div>
                                    <div>
                                        <span class="fw-semibold">@metaRequest.SponsoringLineDirectorate.ProposedValue</span>
                                        @if (metaRequest.SponsoringLineDirectorate.HasChanged)
                                        {
                                            <span class="badge text-bg-warning ms-1">Changed</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            <form method="post" class="d-flex flex-column gap-3" asp-page="/Projects/Meta/Decide" asp-route-id="@Model.Project!.Id">
                                <input type="hidden" name="RequestId" value="@metaRequest.RequestId" />
                                <div>
                                    <label for="meta-decision-note" class="form-label small mb-1">Decision note <span class="text-muted">(optional)</span></label>
                                    <textarea id="meta-decision-note" name="Note" rows="2" maxlength="1024" class="form-control form-control-sm"></textarea>
                                </div>
                                <div class="d-flex flex-wrap gap-2">
                                    <button type="submit" name="Action" value="Approve" class="btn btn-sm btn-success">Approve</button>
                                    <button type="submit" name="Action" value="Reject" class="btn btn-sm btn-outline-danger">Reject</button>
                                    <a class="btn btn-sm btn-outline-secondary" asp-page="/Projects/Meta/Edit" asp-route-id="@Model.Project!.Id">Open direct edit</a>
                                </div>
                            </form>
                        </div>
                    </div>
                }
                else if (isThisProjectsPo)
                {
                    <div class="alert alert-info" role="alert">
                        <div class="fw-semibold mb-1">Meta change request sent</div>
                        <div class="small">Awaiting HoD review.</div>
                    </div>
                }
            }
            @if (isThisProjectsHod)
            {
                if (Model.Timeline.PendingRequests.Any())
                {
                    var decisionTokens = Antiforgery.GetAndStoreTokens(HttpContext);
                    <div class="card pm-card" data-stage-requests-card>
                        <div class="card-header pm-card-header">
                            <div class="pm-card-heading">
                                <span class="pm-card-icon" aria-hidden="true">
                                    <i class="bi bi-repeat"></i>
                                </span>
                                <div>
                                    <h3 class="pm-card-title h6 mb-0">Stage change requests</h3>
                                    <p class="pm-card-subtitle mb-0">Pending updates awaiting HoD decisions.</p>
                                </div>
                            </div>
                        </div>
                        <div class="card-body pm-card-body d-flex flex-column gap-3">
                            <input type="hidden" value="@decisionTokens.RequestToken" data-stage-decision-token />
                            <div class="text-muted small @(Model.Timeline.PendingRequests.Any() ? "d-none" : string.Empty)" data-stage-requests-empty>
                                No pending stage change requests.
                            </div>
                            <div class="d-flex flex-column gap-3" data-stage-decision-list>
                                @foreach (var request in Model.Timeline.PendingRequests)
                                {
                                    var stageLabel = $"{request.StageCode} â€” {request.StageName}".Trim(' ', 'â€”');
                                    <div class="border rounded p-3" data-stage-request-item data-request-id="@request.RequestId" data-stage-code="@request.StageCode" data-stage-label="@stageLabel">
                                        <div class="d-flex justify-content-between align-items-start gap-2">
                                            <div>
                                                <div class="fw-semibold">@stageLabel</div>
                                                <div class="text-muted small">
                                                    Requested by @request.RequestedBy on @request.RequestedOn.ToLocalTime().ToString("dd MMM yyyy")
                                                </div>
                                            </div>
                                            <span class="badge bg-warning text-dark">@StageStatusLabel(request.RequestedStatus)</span>
                                        </div>
                                        <dl class="row small mt-3 mb-0">
                                            <dt class="col-4">Current</dt>
                                            <dd class="col-8">@StageStatusLabel(request.CurrentStatus)</dd>
                                            <dt class="col-4">Target</dt>
                                            <dd class="col-8">
                                                @StageStatusLabel(request.RequestedStatus)
                                                @if (request.RequestedDate.HasValue)
                                                {
                                                    <span>Â· @request.RequestedDate.Value.ToString("dd MMM yyyy")</span>
                                                }
                                            </dd>
                                            @if (!string.IsNullOrWhiteSpace(request.Note))
                                            {
                                                <dt class="col-4">PO note</dt>
                                                <dd class="col-8">@request.Note</dd>
                                            }
                                        </dl>
                                        <div class="mt-3">
                                            <label class="form-label mb-1 small" for="decision-note-@request.RequestId">Decision note <span class="text-muted">(optional)</span></label>
                                            <textarea class="form-control form-control-sm" id="decision-note-@request.RequestId" rows="2" maxlength="1024" data-stage-decision-note></textarea>
                                        </div>
                                        <div class="d-flex gap-2 mt-3">
                                            <button type="button" class="btn btn-sm btn-success" data-stage-decision="Approve">Approve</button>
                                            <button type="button" class="btn btn-sm btn-outline-danger" data-stage-decision="Reject">Reject</button>
                                        </div>
                                        <div class="text-danger small mt-2 d-none" data-stage-decision-error></div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            <div class="card pm-card" data-panel-project-id="@Model.Project!.Id">
                <div class="card-header pm-card-header flex-column gap-3">
                    <div class="d-flex flex-column gap-2">
                        <div class="d-flex flex-column flex-xl-row align-items-start gap-3 justify-content-xl-between">
                            <div class="flex-grow-1 w-100">
                                <div class="d-flex flex-column gap-3" data-panel-section="timeline">
                                    <div class="d-flex flex-wrap align-items-center gap-2">
                                        <div class="pm-card-heading">
                                            <span class="pm-card-icon" aria-hidden="true">
                                                <i class="bi bi-clock-history"></i>
                                            </span>
                                            <div>
                                                <h5 class="pm-card-title mb-0">Timeline</h5>
                                                @{
                                                    string? viewerRole = null;
                                                    if (isHoD && isThisProjectsPo)
                                                    {
                                                        viewerRole = "Head of Department & Project Officer";
                                                    }
                                                    else if (isHoD)
                                                    {
                                                        viewerRole = "Head of Department";
                                                    }
                                                    else if (isThisProjectsPo)
                                                    {
                                                        viewerRole = "Project Officer";
                                                    }
                                                }
                                            </div>
                                        </div>
                                        <div class="d-flex flex-wrap align-items-center gap-2 ms-lg-2 mt-2 mt-lg-0">
                                            @if (!string.IsNullOrEmpty(viewerRole))
                                            {
                                                <span class="text-muted small" data-role-indicator title="Current permissions for timeline actions">Viewing as @viewerRole</span>
                                            }
                                            @if (pendingOwnedByCurrentUser)
                                            {
                                                <span class="badge text-bg-warning">Submitted for approval</span>
                                            }
                                            else if (Model.Timeline.PlanPendingApproval)
                                            {
                                                <span class="badge text-bg-warning">Another submission pending</span>
                                            }
                                            else if (hasMyDraft)
                                            {
                                                <span class="badge text-bg-secondary">Draft saved (not submitted)</span>
                                            }
                                            <span class="badge text-bg-secondary@(Model.HasBackfill ? string.Empty : " d-none")"
                                                  title="Resolve procurement backfill to proceed"
                                                  data-backfill-summary>
                                                Backfill required
                                            </span>
                                            @if (project?.PlanApprovedAt is DateTimeOffset approvedAt)
                                            {
                                                <span class="badge text-bg-success">Approved on @approvedAt.ToLocalTime().ToString("dd MMM yyyy")</span>
                                            }
                                        </div>
                                    </div>
                                    @if (hasMyDraft && !pendingOwnedByCurrentUser)
                                    {
                                        <div class="d-flex flex-wrap align-items-center gap-2">
                                            <button class="btn btn-sm btn-outline-secondary d-inline-flex align-items-center gap-2"
                                                    type="button"
                                                    data-bs-toggle="offcanvas"
                                                    data-bs-target="#offcanvasPlanEdit"
                                                    aria-controls="offcanvasPlanEdit">
                                                <span>Your draft saved</span>
                                                @if (planState.LastSavedOn is DateTimeOffset savedOn)
                                                {
                                                    <span class="text-muted">@savedOn.ToLocalTime().ToString("dd MMM HH:mm")</span>
                                                }
                                                <span class="fw-semibold">Continue editing</span>
                                            </button>
                                            <button class="btn btn-sm btn-outline-secondary"
                                                    type="button"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#discardDraftModal">
                                                Discard draft
                                            </button>
                                        </div>
                                    }
                                </div>
                                <div class="d-flex flex-column gap-3 d-none" data-panel-section="remarks" id="project-panel-section-remarks" role="region" aria-labelledby="project-panel-toggle-remarks" aria-hidden="true">
                                    <div class="d-flex flex-wrap align-items-center gap-3 w-100">
                                        <div class="pm-card-heading">
                                            <span class="pm-card-icon" aria-hidden="true">
                                                <i class="bi bi-chat-dots"></i>
                                            </span>
                                            <div>
                                                <h5 class="pm-card-title mb-0">Remarks</h5>
                                                <p class="pm-card-subtitle mb-0">Monitor and update project progress.</p>
                                            </div>
                                        </div>
                                        <div class="d-flex flex-wrap align-items-center gap-2 ms-lg-auto">
                                            <div class="btn-group btn-group-sm mt-2 mt-lg-0" role="group" aria-label="Filter remarks by type" data-remarks-type-group>
                                                <button type="button" class="btn btn-outline-primary active" data-remarks-type="all" aria-pressed="true">All</button>
                                                <button type="button" class="btn btn-outline-primary" data-remarks-type="Internal" aria-pressed="false">Internal</button>
                                                <button type="button" class="btn btn-outline-primary" data-remarks-type="External" aria-pressed="false">External</button>
                                            </div>
                                            <div class="btn-group btn-group-sm mt-2 mt-lg-0" role="group" aria-label="Filter remarks by time" data-remarks-time-group>
                                                <button type="button" class="btn btn-outline-primary active" data-remarks-time="all" aria-pressed="true">All</button>
                                                <button type="button" class="btn btn-outline-primary" data-remarks-time="last-month" aria-pressed="false">Last month</button>
                                            </div>
                                            @if (Model.RemarksPanel.ShowDeletedToggle)
                                            {
                                                <div class="form-check form-switch ms-lg-2">
                                                    <input class="form-check-input" type="checkbox" role="switch" id="remarks-include-deleted" data-remarks-include-deleted>
                                                    <label class="form-check-label" for="remarks-include-deleted">Show deleted</label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex flex-column align-items-stretch gap-2">
                                <div class="btn-group btn-group-sm align-self-lg-end" role="group" aria-label="Toggle timeline or remarks" data-panel-switch>
                                    <button type="button" class="btn btn-outline-primary active" id="project-panel-toggle-timeline" data-panel-target="timeline" aria-pressed="true" aria-expanded="true" aria-controls="project-panel-body-timeline">Timeline</button>
                                    <button type="button" class="btn btn-outline-primary" id="project-panel-toggle-remarks" data-panel-target="remarks" aria-pressed="false" aria-expanded="false" aria-controls="project-panel-body-remarks">Remarks</button>
                                </div>
                                <div class="pm-card-actions d-flex flex-wrap align-items-center gap-2 justify-content-lg-end" data-panel-section="timeline" id="project-panel-section-timeline" role="region" aria-labelledby="project-panel-toggle-timeline" aria-hidden="false">
                                    @{
                                        var canReviewTimeline = planState.HasPendingSubmission && isHoD;
                                        var canEditTimelinePlan = canEditTimeline && !(hasMyDraft && !pendingOwnedByCurrentUser);

                                        if (canReviewTimeline || canEditTimelinePlan)
                                        {
                                            <div class="pm-card-menu dropdown">
                                                <button class="btn pm-card-menu-toggle"
                                                        type="button"
                                                        data-bs-toggle="dropdown"
                                                        aria-expanded="false"
                                                        aria-label="Timeline actions">
                                                    <i class="bi bi-three-dots-vertical" aria-hidden="true"></i>
                                                </button>
                                                <ul class="dropdown-menu dropdown-menu-end">
                                                    @if (canReviewTimeline)
                                                    {
                                                        <li>
                                                            <button class="dropdown-item"
                                                                    type="button"
                                                                    data-bs-toggle="offcanvas"
                                                                    data-bs-target="#offcanvasPlanReview"
                                                                    aria-controls="offcanvasPlanReview">
                                                                Review &amp; approve
                                                            </button>
                                                        </li>
                                                    }
                                                    @if (canEditTimelinePlan)
                                                    {
                                                        <li>
                                                            <button class="dropdown-item"
                                                                    type="button"
                                                                    data-bs-toggle="offcanvas"
                                                                    data-bs-target="#offcanvasPlanEdit"
                                                                    aria-controls="offcanvasPlanEdit">
                                                                Edit timeline
                                                            </button>
                                                        </li>
                                                    }
                                                </ul>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="pm-card-meta w-100" data-panel-section="timeline" id="project-panel-meta-timeline" role="region" aria-labelledby="project-panel-toggle-timeline" aria-hidden="false">
                            <progress class="pm-progress pm-progress-slim pm-progress-fixed-180"
                                      value="@completedStages"
                                      max="@progressMax"
                                      aria-label="Timeline stages completed">
                            </progress>
                            <span class="text-muted small">@completedStages of @totalStages complete</span>
                        </div>
                    </div>
                </div>
                <div class="card-body pm-card-body">
                    <div data-panel="timeline" id="project-panel-body-timeline" role="region" aria-labelledby="project-panel-toggle-timeline" aria-hidden="false">
                        @if (submissionBlocked)
                        {
                            <div class="alert alert-warning" role="status">
                                Another plan is already awaiting approval. You can keep editing your draft, but submitting is disabled until the review is complete.
                            </div>
                        }
                        @{ ViewBag.IsProjectOfficerForProject = isThisProjectsPo; }
                        <partial name="_ProjectTimeline" model="Model.Timeline" />
                    </div>
                    <div class="d-none" data-panel="remarks" id="project-panel-body-remarks" role="region" aria-labelledby="project-panel-toggle-remarks" aria-hidden="true">
                        <div class="remarks-panel" data-remarks-panel data-config='@remarksConfigJson'>
                            @if (Model.RemarksPanel.ShowComposer)
                            {
                                <form class="remarks-composer" data-remarks-composer>
                                    @Html.AntiForgeryToken()
                                    <div class="d-flex flex-column gap-3">
                                        <div>
                                            <label for="remark-body" class="form-label fw-semibold mb-1">Add a remark</label>
                                            <textarea id="remark-body" class="form-control" rows="3" maxlength="4000" data-remarks-body required></textarea>
                                            <div class="form-text">Maximum 4000 characters.</div>
                                            @if (!string.IsNullOrWhiteSpace(Model.RemarksPanel.ActorDisplayName))
                                            {
                                                <div class="small text-muted mt-1">Posting as @Model.RemarksPanel.ActorDisplayName</div>
                                            }
                                        </div>
                                        <div class="remarks-composer-options d-flex flex-wrap align-items-center gap-2">
                                            <div class="btn-group btn-group-sm" role="group" aria-label="Remark audience" data-remarks-composer-type>
                                                <button type="button" class="btn btn-outline-secondary active" data-remarks-composer-option="Internal" aria-pressed="true">Internal</button>
                                                @if (Model.RemarksPanel.AllowExternal)
                                                {
                                                    <button type="button" class="btn btn-outline-secondary" data-remarks-composer-option="External" aria-pressed="false">External</button>
                                                }
                                            </div>
                                            <div class="remarks-composer-external d-flex flex-wrap align-items-end gap-2 d-none" data-remarks-external-fields>
                                                <div>
                                                    <label for="remark-event-date" class="form-label mb-1 small">Event date</label>
                                                    <input type="date" id="remark-event-date" class="form-control form-control-sm" data-remarks-event-date value="@Model.RemarksPanel.Today" max="@Model.RemarksPanel.Today" />
                                                </div>
                                                <div>
                                                    <label for="remark-stage" class="form-label mb-1 small">Stage <span class="text-muted">(optional)</span></label>
                                                    <select id="remark-stage" class="form-select form-select-sm" data-remarks-stage>
                                                        <option value="">Not linked</option>
                                                        @foreach (var stage in Model.RemarksPanel.StageOptions)
                                                        {
                                                            <option value="@stage.Value">@stage.Label</option>
                                                        }
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="d-flex flex-column flex-sm-row gap-2 align-items-sm-center justify-content-between">
                                            <div class="small" data-remarks-feedback></div>
                                            <div class="d-flex gap-2 ms-sm-auto">
                                                <button type="reset" class="btn btn-sm btn-outline-secondary" data-remarks-reset>Clear</button>
                                                <button type="submit" class="btn btn-primary btn-sm" data-remarks-submit>Post remark</button>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            }
                            else
                            {
                                <div class="alert alert-info border-info-subtle bg-info-subtle text-dark" role="status">
                                    Remarks can only be posted by the assigned project team and leadership.
                                </div>
                            }
                            <div class="remarks-list" data-remarks-list>
                                <div class="text-muted" data-remarks-empty>Loading remarksâ€¦</div>
                                <div class="vstack gap-3" data-remarks-items></div>
                                <button type="button" class="btn btn-outline-secondary btn-sm align-self-start d-none" data-remarks-load-more>Load more</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <partial name="Projects/_BackfillModal" model="Model.Backfill" />
    <partial name="_StageDirectApplyModal" />
    <partial name="Projects/Stages/_StageRequestModal" />

    <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasProcurement" aria-labelledby="offcanvasProcurementLabel">
        <div class="offcanvas-header">
            <h5 id="offcanvasProcurementLabel" class="mb-0">Edit Procurement Deatils</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <partial name="Projects/Procurement/_EditFormBody" model="Model.ProcurementEdit" />
        </div>
    </div>

    <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasPlanReview" aria-labelledby="offcanvasPlanReviewLabel">
        <div class="offcanvas-header">
            <h5 id="offcanvasPlanReviewLabel" class="mb-0">Review current plan</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            @{
                ViewBag.ProjectId = Model.Project!.Id;
                ViewBag.HasBackfill = Model.HasBackfill;
                ViewBag.PlanState = planState;
                var diffs = await Model.PlanCompare.GetDraftVsCurrentAsync(Model.Project!.Id);
                await Html.RenderPartialAsync("~/Pages/Projects/Timeline/_ReviewPlan.cshtml", diffs ?? Array.Empty<ProjectManagement.Services.Stages.PlanDiffRow>());
            }
        </div>
    </div>

    <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasPlanEdit" aria-labelledby="offcanvasPlanEditLabel">
        <div class="offcanvas-header">
            <h5 id="offcanvasPlanEditLabel" class="mb-0">Edit timeline plan</h5>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <partial name="Projects/Timeline/_EditPlanForm" model="Model.PlanEdit" />
        </div>
    </div>

</div>

<partial name="_PlanDiscardDraftModal" model="Model.Project.Id" />

@section Scripts {
    <script type="module" src="~/js/gallery-lightbox.js" asp-append-version="true"></script>
    <script src="~/js/projects/overview.js" asp-append-version="true"></script>
    <script src="~/js/projects/plan-edit.js" asp-append-version="true"></script>
    <script src="~/js/projects/stages.js" asp-append-version="true"></script>
}

@functions {
    private static string DisplayUser(ApplicationUser? user)
    {
        if (user is null)
        {
            return "â€”";
        }

        if (!string.IsNullOrWhiteSpace(user.FullName))
        {
            return user.FullName;
        }

        return user.UserName ?? "â€”";
    }
}
