@page
@model ProjectManagement.Pages.Projects.IndexModel
@using System
@using System.Linq
@using ProjectManagement.Models
@using ProjectManagement.Models.Execution
@using ProjectManagement.Models.Stages
@using ProjectManagement.Services.Projects
@{
    ViewData["Title"] = "Projects";

    var activeLifecycle = Model.LifecycleTabs.FirstOrDefault(t => t.IsActive);
    var showAdvancedFilters = Model.HasActiveFilters;

    var activeFilters = new List<string>();
    if (!string.IsNullOrWhiteSpace(Model.Query))
    {
        activeFilters.Add($"Search: \"{Model.Query}\"");
    }

    var selectedCategory = Model.CategoryOptions.FirstOrDefault(o => o.Selected && !string.IsNullOrEmpty(o.Value))?.Text;
    if (!string.IsNullOrWhiteSpace(selectedCategory))
    {
        activeFilters.Add($"Category: {selectedCategory}");
    }

    var selectedTechnicalCategory = Model.TechnicalCategoryOptions.FirstOrDefault(o => o.Selected && !string.IsNullOrEmpty(o.Value))?.Text;
    if (!string.IsNullOrWhiteSpace(selectedTechnicalCategory))
    {
        activeFilters.Add($"Technical category: {selectedTechnicalCategory}");
    }

    var selectedHod = Model.HodOptions.FirstOrDefault(o => o.Selected && !string.IsNullOrEmpty(o.Value))?.Text;
    if (!string.IsNullOrWhiteSpace(selectedHod))
    {
        activeFilters.Add($"HoD: {selectedHod}");
    }

    var selectedLeadPo = Model.LeadPoOptions.FirstOrDefault(o => o.Selected && !string.IsNullOrEmpty(o.Value))?.Text;
    if (!string.IsNullOrWhiteSpace(selectedLeadPo))
    {
        activeFilters.Add($"Project officer: {selectedLeadPo}");
    }

    var selectedCompletionYear = Model.CompletionYearOptions.FirstOrDefault(o => o.Selected && !string.IsNullOrEmpty(o.Value))?.Text;
    if (!string.IsNullOrWhiteSpace(selectedCompletionYear))
    {
        activeFilters.Add($"Completion year: {selectedCompletionYear}");
    }

    var selectedTotStatus = Model.TotStatusOptions.FirstOrDefault(o => o.Selected && !string.IsNullOrEmpty(o.Value))?.Text;
    if (!string.IsNullOrWhiteSpace(selectedTotStatus))
    {
        activeFilters.Add($"ToT status: {selectedTotStatus}");
    }

    if (Model.IncludeArchived)
    {
        activeFilters.Add("Including archived projects");
    }
}

@section Styles
{
    <link rel="stylesheet" href="~/css/projects/index.css" asp-append-version="true" />
}

<div class="projects-page-layout">
    <div class="projects-page-layout__content">
        <div class="container-xxl">
            <section class="projects-hero shadow-sm">
                <div class="projects-hero__content">
                    <div class="projects-hero__headline">
                        <h1 class="projects-hero__title">Projects</h1>
                        <p class="projects-hero__subtitle">Explore, search and curate the organisation&rsquo;s R&D initiatives.</p>
                    </div>
                    <div class="projects-hero__stats">
                        <div class="projects-stat">
                            <span class="projects-stat__label">Total projects</span>
                            <span class="projects-stat__value">@Model.TotalCount</span>
                            @{
                                var lifecycleHint = string.IsNullOrWhiteSpace(activeLifecycle?.Label)
                                    ? "All projects"
                                    : activeLifecycle!.Label;
                            }
                            <span class="projects-stat__hint">@lifecycleHint</span>
                        </div>
                        <div class="projects-stat">
                            <span class="projects-stat__label">Showing</span>
                            <span class="projects-stat__value">@(Model.TotalCount == 0 ? "0" : $"{Model.ResultsStart}â€“{Model.ResultsEnd}")</span>
                            <span class="projects-stat__hint">of @Model.TotalCount results</span>
                        </div>
                        <div class="projects-stat">
                            <span class="projects-stat__label">Active filters</span>
                            <span class="projects-stat__value">@activeFilters.Count</span>
                            <span class="projects-stat__hint">@(activeFilters.Count == 0 ? "None applied" : "Refine below")</span>
                        </div>
                    </div>
                </div>
            </section>

            <nav class="projects-tabs" aria-label="Project lifecycle filters">
                <ul class="nav nav-pills projects-tabs__list" role="tablist">
                    @foreach (var lifecycle in Model.LifecycleTabs)
                    {
                        <li class="nav-item" role="presentation">
                            <a class="nav-link projects-tabs__link @(lifecycle.IsActive ? "active" : null)"
                               asp-page="./Index"
                               asp-route-Lifecycle="@lifecycle.RouteValue"
                               asp-route-Query="@Model.Query"
                               asp-route-CategoryId="@Model.CategoryId"
                               asp-route-TechnicalCategoryId="@Model.TechnicalCategoryId"
                               asp-route-LeadPoUserId="@Model.LeadPoUserId"
                               asp-route-HodUserId="@Model.HodUserId"
                               asp-route-CompletedYear="@Model.CompletedYear"
                               asp-route-TotStatus="@(Model.TotStatus?.ToString())"
                               asp-route-IncludeArchived="@(Model.IncludeArchived ? "true" : null)"
                               role="tab">
                                <span class="projects-tabs__label">@lifecycle.Label</span>
                                <span class="projects-tabs__count">@lifecycle.Count</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>

            <form method="get" class="projects-filter shadow-sm">
                <input type="hidden" name="Lifecycle" value="@Model.Lifecycle" />
                <div class="projects-filter__primary">
                    <div class="projects-filter__search">
                        <label asp-for="Query" class="form-label">Search projects</label>
                        <div class="input-with-icon">
                            <span class="input-with-icon__icon" aria-hidden="true"><i class="bi bi-search"></i></span>
                            <input asp-for="Query" class="form-control" placeholder="Search by name, description, case file or people" />
                        </div>
                    </div>
                    <div class="projects-filter__actions">
                        <button class="btn btn-outline-secondary projects-filter__toggle" type="button" data-bs-toggle="collapse" data-bs-target="#advancedProjectFilters" aria-expanded="@showAdvancedFilters.ToString().ToLowerInvariant()" aria-controls="advancedProjectFilters">
                            <i class="bi bi-sliders" aria-hidden="true"></i>
                            <span>Advanced filters</span>
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-funnel" aria-hidden="true"></i>
                            <span>Apply</span>
                        </button>
                        @if (Model.HasActiveFilters)
                        {
                            <a asp-page="./Index"
                               asp-route-Lifecycle="@((Model.Lifecycle == ProjectLifecycleFilter.All) ? null : Model.Lifecycle.ToString())"
                               class="btn btn-link text-decoration-none projects-filter__clear">
                                <i class="bi bi-x-circle" aria-hidden="true"></i>
                                <span>Clear all</span>
                            </a>
                        }
                    </div>
                </div>

                <div class="collapse projects-filter__advanced @(showAdvancedFilters ? "show" : string.Empty)" id="advancedProjectFilters">
                    <div class="projects-filter__grid">
                        <div class="projects-filter__field">
                            <label asp-for="CategoryId" class="form-label">Category</label>
                            <select asp-for="CategoryId" class="form-select" asp-items="Model.CategoryOptions"></select>
                        </div>
                        <div class="projects-filter__field">
                            <label asp-for="TechnicalCategoryId" class="form-label">Technical category</label>
                            <select asp-for="TechnicalCategoryId" class="form-select" asp-items="Model.TechnicalCategoryOptions"></select>
                        </div>
                        <div class="projects-filter__field">
                            <label asp-for="HodUserId" class="form-label">Head of Department</label>
                            <select asp-for="HodUserId" class="form-select" asp-items="Model.HodOptions"></select>
                        </div>
                        <div class="projects-filter__field">
                            <label asp-for="LeadPoUserId" class="form-label">Project Officer</label>
                            <select asp-for="LeadPoUserId" class="form-select" asp-items="Model.LeadPoOptions"></select>
                        </div>
                        <div class="projects-filter__field">
                            <label asp-for="CompletedYear" class="form-label">Completion year</label>
                            <select asp-for="CompletedYear" class="form-select" asp-items="Model.CompletionYearOptions"></select>
                        </div>
                        <div class="projects-filter__field">
                            <label asp-for="TotStatus" class="form-label">ToT status</label>
                            <select asp-for="TotStatus" class="form-select" asp-items="Model.TotStatusOptions"></select>
                        </div>
                        <div class="projects-filter__field projects-filter__field--checkbox">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" asp-for="IncludeArchived" />
                                <label class="form-check-label" for="IncludeArchived">Include archived projects</label>
                            </div>
                        </div>
                    </div>
                </div>
            </form>

            @if (activeFilters.Count > 0)
            {
                <div class="projects-active-filters shadow-sm">
                    <span class="projects-active-filters__label">Active filters</span>
                    <div class="projects-active-filters__chips">
                        @foreach (var filter in activeFilters)
                        {
                            <span class="badge rounded-pill text-bg-light">@filter</span>
                        }
                    </div>
                </div>
            }

            <div class="projects-results">
                <div class="projects-results__summary">
                    <strong>@(Model.TotalCount == 0 ? "No projects" : $"Showing {Model.ResultsStart}â€“{Model.ResultsEnd}")</strong>
                    <span class="text-muted">@((Model.TotalCount == 0 ? "matching your criteria" : $"of {Model.TotalCount} projects"))</span>
                </div>
            </div>

            @if (!Model.Projects.Any())
            {
                <div class="projects-empty-state shadow-sm">
                    <div class="projects-empty-state__icon" aria-hidden="true">
                        <i class="bi bi-inboxes"></i>
                    </div>
                    <h2 class="projects-empty-state__title">No projects match your filters</h2>
                    <p class="projects-empty-state__subtitle">Try broadening your search, clearing filters or exploring a different lifecycle tab.</p>
                </div>
            }
            else
            {
                var initialProject = Model.Projects.First();
                <div class="projects-split" data-projects-split>
                    <div class="projects-split__list" role="tablist" aria-label="Project selection">
                        @foreach (var project in Model.Projects)
                        {
                            var tabId = $"project-tab-{project.Id}";
                            var panelId = $"project-panel-{project.Id}";
                            var isActive = project.Id == initialProject.Id;
                            var pendingCount = CountPendingStages(project);
                            var totStatus = FormatTotStatusShort(project);
                            <button type="button"
                                    id="@tabId"
                                    class="projects-list-item@(isActive ? " is-active" : string.Empty)"
                                    role="tab"
                                    aria-selected="@isActive.ToString().ToLowerInvariant()"
                                    aria-controls="@panelId"
                                    data-project-target="@panelId"
                                    tabindex="@(isActive ? "0" : "-1")">
                                <div class="projects-list-item__header">
                                    <span class="projects-list-item__name">@project.Name</span>
                                    <span class="badge rounded-pill projects-list-item__status">@FormatLifecycleStatus(project.LifecycleStatus)</span>
                                </div>
                                <div class="projects-list-item__meta">
                                    <span class="projects-list-item__meta-item">
                                        <i class="bi bi-diagram-3" aria-hidden="true"></i>
                                        <span>@(project.Category?.Name ?? "Uncategorised")</span>
                                    </span>
                                    <span class="projects-list-item__meta-item">
                                        <i class="bi bi-hash" aria-hidden="true"></i>
                                        <span>@(string.IsNullOrWhiteSpace(project.CaseFileNumber) ? "No case file" : project.CaseFileNumber)</span>
                                    </span>
                                </div>
                                <div class="projects-list-item__badges" aria-hidden="true">
                                    @if (!string.IsNullOrWhiteSpace(totStatus))
                                    {
                                        <span class="badge text-bg-light">@totStatus</span>
                                    }
                                    <span class="badge text-bg-primary-subtle">Pending stages: @pendingCount</span>
                                    @if (project.IsArchived)
                                    {
                                        <span class="badge text-bg-secondary">Archived</span>
                                    }
                                </div>
                            </button>
                        }
                    </div>
                    <div class="projects-split__detail">
                        @foreach (var project in Model.Projects)
                        {
                            var tabId = $"project-tab-{project.Id}";
                            var panelId = $"project-panel-{project.Id}";
                            var isActive = project.Id == initialProject.Id;
                            StageSummary? stageSummary = null;
                            string? totDetail = null;
                            var detailPrefix = $"project-{project.Id}-detail";
                            var overviewId = $"{detailPrefix}-overview";
                            var requestsId = $"{detailPrefix}-requests";
                            var updatesId = $"{detailPrefix}-updates";
                            var approvalsId = $"{detailPrefix}-approvals";
                            var submissionModalId = $"project-{project.Id}-submission-modal";
                            var decisionModalId = $"project-{project.Id}-decision-modal";
                            var submissionNoteId = $"submission-note-{project.Id}";
                            var decisionNoteId = $"decision-note-{project.Id}";
                            var decisionFilterId = $"decision-filter-{project.Id}";

                            if (project.LifecycleStatus == ProjectLifecycleStatus.Active)
                            {
                                stageSummary = BuildStageSummary(project);
                            }

                            if (project.Tot is not null)
                            {
                                totDetail = FormatTotDetail(project);
                            }

                            var pendingCount = CountPendingStages(project);
                            <section class="projects-detail-panel@(isActive ? " is-active" : string.Empty)"
                                     id="@panelId"
                                     role="tabpanel"
                                     aria-labelledby="@tabId"
                                     data-project-panel@(isActive ? string.Empty : " hidden")>
                                <header class="projects-detail-panel__header">
                                    <div>
                                        <h2 class="projects-detail-panel__title">@project.Name</h2>
                                        <div class="projects-detail-panel__status">
                                            <span class="badge rounded-pill text-bg-primary">@FormatLifecycleStatus(project.LifecycleStatus)</span>
                                            @if (project.IsArchived)
                                            {
                                                <span class="badge text-bg-secondary">Archived</span>
                                            }
                                            @if (project.Tot is { } tot)
                                            {
                                                <span class="badge text-bg-light">@FormatTotStatus(tot.Status)</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="projects-detail-panel__actions">
                                        <div class="projects-detail-panel__primary-actions">
                                            <button type="button"
                                                    class="btn btn-primary"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#@submissionModalId">
                                                Log submission
                                            </button>
                                            <button type="button"
                                                    class="btn btn-outline-primary"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#@decisionModalId">
                                                Review decisions
                                            </button>
                                        </div>
                                        <a class="btn btn-outline-secondary"
                                           asp-page="/Projects/Overview"
                                           asp-route-id="@project.Id"
                                           asp-route-TechnicalCategoryId="@Model.TechnicalCategoryId">
                                            Open project
                                        </a>
                                    </div>
                                </header>
                                <div class="projects-detail-panel__body">
                                    <div class="projects-detail-tabs" data-project-detail-tabs>
                                        <p class="projects-detail-tabs__helper">
                                            Switch between overview, outstanding requests, progress updates, and approval notes without leaving the project list.
                                        </p>
                                        <div class="projects-detail-tabs__nav" role="tablist">
                                            <button type="button"
                                                    class="projects-detail-tabs__button is-active"
                                                    id="@overviewId-tab"
                                                    data-project-detail-target="@overviewId"
                                                    aria-controls="@overviewId"
                                                    aria-selected="true">
                                                Overview
                                            </button>
                                            <button type="button"
                                                    class="projects-detail-tabs__button"
                                                    id="@requestsId-tab"
                                                    data-project-detail-target="@requestsId"
                                                    aria-controls="@requestsId"
                                                    aria-selected="false">
                                                Requests
                                            </button>
                                            <button type="button"
                                                    class="projects-detail-tabs__button"
                                                    id="@updatesId-tab"
                                                    data-project-detail-target="@updatesId"
                                                    aria-controls="@updatesId"
                                                    aria-selected="false">
                                                Updates
                                            </button>
                                            <button type="button"
                                                    class="projects-detail-tabs__button"
                                                    id="@approvalsId-tab"
                                                    data-project-detail-target="@approvalsId"
                                                    aria-controls="@approvalsId"
                                                    aria-selected="false">
                                                Approvals
                                            </button>
                                        </div>
                                    </div>
                                    <div class="projects-detail-panel__sections">
                                        <section id="@overviewId"
                                                 class="projects-detail-section is-active"
                                                 role="tabpanel"
                                                 aria-labelledby="@overviewId-tab"
                                                 data-project-detail-pane>
                                            <header class="projects-detail-section__header">
                                                <h3 class="projects-detail-section__title">Project snapshot</h3>
                                                <p class="projects-detail-section__helper">Key metadata to get oriented quickly.</p>
                                            </header>
                                            <div class="projects-detail-section__content">
                                                <dl class="projects-detail-panel__facts">
                                                    <div>
                                                        <dt>Case file</dt>
                                                        <dd>@(string.IsNullOrWhiteSpace(project.CaseFileNumber) ? "No case file" : project.CaseFileNumber)</dd>
                                                    </div>
                                                    <div>
                                                        <dt>Category</dt>
                                                        <dd>@(project.Category?.Name ?? "Uncategorised")</dd>
                                                    </div>
                                                    <div>
                                                        <dt>Technical category</dt>
                                                        <dd>@(project.TechnicalCategory?.Name ?? "No technical category")</dd>
                                                    </div>
                                                    <div>
                                                        <dt>Project officer</dt>
                                                        <dd>@(project.LeadPoUser?.FullName ?? project.LeadPoUser?.UserName ?? "Not assigned")</dd>
                                                    </div>
                                                    <div>
                                                        <dt>HoD</dt>
                                                        <dd>@(project.HodUser?.FullName ?? project.HodUser?.UserName ?? "Not assigned")</dd>
                                                    </div>
                                                    <div>
                                                        <dt>Pending stages</dt>
                                                        <dd>@pendingCount</dd>
                                                    </div>
                                                </dl>
                                                @if (!string.IsNullOrWhiteSpace(project.Description))
                                                {
                                                    <div class="projects-detail-panel__description">
                                                        <h4 class="projects-detail-panel__description-title">Overview</h4>
                                                        <p>@project.Description</p>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <p class="text-muted mb-0">No project overview has been recorded yet.</p>
                                                }
                                            </div>
                                        </section>
                                        <section id="@requestsId"
                                                 class="projects-detail-section"
                                                 role="tabpanel"
                                                 aria-labelledby="@requestsId-tab"
                                                 data-project-detail-pane
                                                 hidden>
                                            <header class="projects-detail-section__header">
                                                <h3 class="projects-detail-section__title">Requests &amp; submissions</h3>
                                                <p class="projects-detail-section__helper">Track follow-ups that may need additional information or documentation.</p>
                                            </header>
                                            <div class="projects-detail-section__content">
                                                <ul class="projects-detail-metric-list">
                                                    <li>
                                                        <div>
                                                            <span class="projects-detail-metric-list__label">Pending project stages</span>
                                                            <span class="projects-detail-metric-list__value">@pendingCount</span>
                                                        </div>
                                                        <p class="projects-detail-metric-list__helper">Stages awaiting action before they can be completed.</p>
                                                    </li>
                                                    <li>
                                                        <div>
                                                            <span class="projects-detail-metric-list__label">Lifecycle status</span>
                                                            <span class="projects-detail-metric-list__value">@FormatLifecycleStatus(project.LifecycleStatus)</span>
                                                        </div>
                                                        <p class="projects-detail-metric-list__helper">Use this to prioritise which submissions to prepare next.</p>
                                                    </li>
                                                </ul>
                                                <div class="projects-detail-cta">
                                                    <div>
                                                        <h4 class="projects-detail-cta__title">Document follow-ups</h4>
                                                        <p class="projects-detail-cta__helper">Review project files awaiting moderation before approvals are granted.</p>
                                                    </div>
                                                    <a class="btn btn-sm btn-outline-primary"
                                                       asp-page="/Projects/Documents/Approvals/Index"
                                                       asp-route-id="@project.Id">
                                                        View document requests
                                                    </a>
                                                </div>
                                            </div>
                                        </section>
                                        <section id="@updatesId"
                                                 class="projects-detail-section"
                                                 role="tabpanel"
                                                 aria-labelledby="@updatesId-tab"
                                                 data-project-detail-pane
                                                 hidden>
                                            <header class="projects-detail-section__header">
                                                <h3 class="projects-detail-section__title">Progress updates</h3>
                                                <p class="projects-detail-section__helper">Surface the latest milestone activity and what is queued next.</p>
                                            </header>
                                            <div class="projects-detail-panel__insights">
                                                @if (stageSummary is not null)
                                                {
                                                    <div class="projects-detail-panel__insight">
                                                        <h4 class="projects-detail-panel__insight-title">Latest update</h4>
                                                        <p class="mb-1">@stageSummary.LastCompleted</p>
                                                        <p class="text-muted mb-0">@stageSummary.Current</p>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="projects-detail-panel__insight">
                                                        <h4 class="projects-detail-panel__insight-title">Latest update</h4>
                                                        <p class="mb-0 text-muted">Stage progress has not been recorded for this project.</p>
                                                    </div>
                                                }
                                                <div class="projects-detail-panel__insight">
                                                    <h4 class="projects-detail-panel__insight-title">Activity guidance</h4>
                                                    <p class="mb-0">Use the submission button above to capture new progress notes when milestones shift.</p>
                                                </div>
                                            </div>
                                        </section>
                                        <section id="@approvalsId"
                                                 class="projects-detail-section"
                                                 role="tabpanel"
                                                 aria-labelledby="@approvalsId-tab"
                                                 data-project-detail-pane
                                                 hidden>
                                            <header class="projects-detail-section__header">
                                                <h3 class="projects-detail-section__title">Approvals &amp; hand-offs</h3>
                                                <p class="projects-detail-section__helper">Reference technology transfer context and recent remarks before deciding.</p>
                                            </header>
                                            <div class="projects-detail-panel__insights">
                                                @if (!string.IsNullOrWhiteSpace(totDetail))
                                                {
                                                    <div class="projects-detail-panel__insight">
                                                        <h4 class="projects-detail-panel__insight-title">Technology transfer</h4>
                                                        <p class="mb-0">@totDetail</p>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="projects-detail-panel__insight">
                                                        <h4 class="projects-detail-panel__insight-title">Technology transfer</h4>
                                                        <p class="mb-0 text-muted">Technology transfer information has not been added yet.</p>
                                                    </div>
                                                }
                                                @if (project.Tot is { Remarks: { Length: > 0 } remarks })
                                                {
                                                    <div class="projects-detail-panel__insight">
                                                        <h4 class="projects-detail-panel__insight-title">Remarks</h4>
                                                        <p class="mb-0">@remarks</p>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="projects-detail-panel__insight">
                                                        <h4 class="projects-detail-panel__insight-title">Remarks</h4>
                                                        <p class="mb-0 text-muted">No approval notes have been captured for this project.</p>
                                                    </div>
                                                }
                                            </div>
                                        </section>
                                    </div>
                                </div>
                                <div class="modal fade"
                                     id="@submissionModalId"
                                     tabindex="-1"
                                     aria-labelledby="@submissionModalId-label"
                                     aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="@submissionModalId-label">Log submission for @project.Name</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <form method="get"
                                                  asp-page="/Projects/Meta/Request"
                                                  asp-route-id="@project.Id">
                                                <div class="modal-body d-flex flex-column gap-3">
                                                    <p class="text-muted mb-0">Capture a short note before continuing to the detailed change request form.</p>
                                                    <div>
                                                        <label class="form-label" for="@submissionNoteId">Submission note</label>
                                                        <textarea class="form-control" id="@submissionNoteId" name="note" rows="3" placeholder="Summarise the update you plan to request."></textarea>
                                                        <div class="form-text">Notes are passed along to help reviewers understand the context.</div>
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                                                    <button type="submit" class="btn btn-primary">Continue to request</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal fade"
                                     id="@decisionModalId"
                                     tabindex="-1"
                                     aria-labelledby="@decisionModalId-label"
                                     aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered modal-lg">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="@decisionModalId-label">Review approvals for @project.Name</h5>
                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                            </div>
                                            <form method="get"
                                                  asp-page="/Projects/Documents/Approvals/Index"
                                                  asp-route-id="@project.Id">
                                                <div class="modal-body d-flex flex-column gap-3">
                                                    <p class="text-muted mb-0">Use this quick filter to jump into the approval workspace with the right context.</p>
                                                    <div>
                                                        <label class="form-label" for="@decisionNoteId">Decision helper note</label>
                                                        <textarea class="form-control" id="@decisionNoteId" name="note" rows="3" placeholder="Capture reminders or questions for the review team."></textarea>
                                                        <div class="form-text">The note travels with the query string so you can paste it into the decision form.</div>
                                                    </div>
                                                    <div>
                                                        <label class="form-label" for="@decisionFilterId">Focus area</label>
                                                        <select class="form-select" id="@decisionFilterId" name="focus">
                                                            <option value="">All requests</option>
                                                            <option value="documents">Document requests</option>
                                                            <option value="stages">Stage approvals</option>
                                                            <option value="tot">Technology transfer</option>
                                                        </select>
                                                        <div class="form-text">Choose the type of approval you want to address first.</div>
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                                                    <button type="submit" class="btn btn-primary">Open approvals workspace</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </section>
                        }
                    </div>
                </div>

                @if (Model.TotalPages > 1)
                {
                    <nav class="projects-pagination" aria-label="Project pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : null)">
                                <a class="page-link"
                                   asp-page="./Index"
                                   asp-route-page="@(Model.CurrentPage - 1)"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-Query="@Model.Query"
                                   asp-route-CategoryId="@Model.CategoryId"
                                   asp-route-TechnicalCategoryId="@Model.TechnicalCategoryId"
                                   asp-route-LeadPoUserId="@Model.LeadPoUserId"
                                   asp-route-HodUserId="@Model.HodUserId"
                                   asp-route-Lifecycle="@((Model.Lifecycle == ProjectLifecycleFilter.All) ? null : Model.Lifecycle.ToString())"
                                   asp-route-CompletedYear="@Model.CompletedYear"
                                   asp-route-TotStatus="@(Model.TotStatus?.ToString())"
                                   asp-route-IncludeArchived="@(Model.IncludeArchived ? "true" : null)"
                                   aria-label="Previous"
                                   aria-disabled="@(Model.CurrentPage <= 1)">
                                    <i class="bi bi-chevron-left" aria-hidden="true"></i>
                                </a>
                            </li>
                            @for (var i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : null)">
                                    <a class="page-link"
                                       asp-page="./Index"
                                       asp-route-page="@i"
                                       asp-route-PageSize="@Model.PageSize"
                                       asp-route-Query="@Model.Query"
                                       asp-route-CategoryId="@Model.CategoryId"
                                       asp-route-TechnicalCategoryId="@Model.TechnicalCategoryId"
                                       asp-route-LeadPoUserId="@Model.LeadPoUserId"
                                       asp-route-HodUserId="@Model.HodUserId"
                                       asp-route-Lifecycle="@((Model.Lifecycle == ProjectLifecycleFilter.All) ? null : Model.Lifecycle.ToString())"
                                       asp-route-CompletedYear="@Model.CompletedYear"
                                       asp-route-TotStatus="@(Model.TotStatus?.ToString())"
                                       asp-route-IncludeArchived="@(Model.IncludeArchived ? "true" : null)">@i</a>
                                </li>
                            }
                            <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : null)">
                                <a class="page-link"
                                   asp-page="./Index"
                                   asp-route-page="@(Model.CurrentPage + 1)"
                                   asp-route-PageSize="@Model.PageSize"
                                   asp-route-Query="@Model.Query"
                                   asp-route-CategoryId="@Model.CategoryId"
                                   asp-route-TechnicalCategoryId="@Model.TechnicalCategoryId"
                                   asp-route-LeadPoUserId="@Model.LeadPoUserId"
                                   asp-route-HodUserId="@Model.HodUserId"
                                   asp-route-Lifecycle="@((Model.Lifecycle == ProjectLifecycleFilter.All) ? null : Model.Lifecycle.ToString())"
                                   asp-route-CompletedYear="@Model.CompletedYear"
                                   asp-route-TotStatus="@(Model.TotStatus?.ToString())"
                                   asp-route-IncludeArchived="@(Model.IncludeArchived ? "true" : null)"
                                   aria-label="Next"
                                   aria-disabled="@(Model.CurrentPage >= Model.TotalPages)">
                                    <i class="bi bi-chevron-right" aria-hidden="true"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>
                }
            }
        </div>
    </div>
    @if (User.IsInRole("Admin") || User.IsInRole("HoD"))
    {
        <div class="projects-create-action">
            <a asp-page="/Projects/Create" class="projects-create-action__button" aria-label="Create project">
                <i class="bi bi-plus-lg" aria-hidden="true"></i>
            </a>
        </div>
    }
</div>

@section Scripts
{
    <script>
        (() => {
            const split = document.querySelector('[data-projects-split]');
            if (!split) {
                return;
            }

            const tabs = Array.from(split.querySelectorAll('[data-project-target]'));
            const panels = Array.from(split.querySelectorAll('[data-project-panel]'));

            if (!tabs.length || !panels.length) {
                return;
            }

            const setupDetailTabs = (panel) => {
                const tabContainer = panel.querySelector('[data-project-detail-tabs]');
                if (!tabContainer) {
                    return;
                }

                const buttons = Array.from(tabContainer.querySelectorAll('[data-project-detail-target]'));
                const sections = Array.from(panel.querySelectorAll('[data-project-detail-pane]'));

                if (!buttons.length || !sections.length) {
                    return;
                }

                const showSection = (targetId) => {
                    buttons.forEach((button) => {
                        const isActive = button.dataset.projectDetailTarget === targetId;
                        button.classList.toggle('is-active', isActive);
                        button.setAttribute('aria-selected', isActive ? 'true' : 'false');
                    });

                    sections.forEach((section) => {
                        const show = section.id === targetId;
                        section.classList.toggle('is-active', show);
                        section.hidden = !show;
                    });
                };

                buttons.forEach((button) => {
                    button.addEventListener('click', () => {
                        showSection(button.dataset.projectDetailTarget);
                    });
                });

                const defaultButton = buttons.find((button) => button.classList.contains('is-active')) ?? buttons[0];
                const defaultTarget = defaultButton?.dataset.projectDetailTarget;

                if (defaultTarget) {
                    showSection(defaultTarget);
                }
            };

            const activate = (panelId) => {
                tabs.forEach((tab) => {
                    const isTarget = tab.dataset.projectTarget === panelId;
                    tab.classList.toggle('is-active', isTarget);
                    tab.setAttribute('aria-selected', isTarget ? 'true' : 'false');
                    tab.setAttribute('tabindex', isTarget ? '0' : '-1');
                });

                panels.forEach((panel) => {
                    const show = panel.id === panelId;
                    panel.classList.toggle('is-active', show);
                    panel.hidden = !show;
                    if (show) {
                        setupDetailTabs(panel);
                    }
                });
            };

            const focusByOffset = (currentIndex, offset) => {
                const nextIndex = (currentIndex + offset + tabs.length) % tabs.length;
                const nextTab = tabs[nextIndex];
                activate(nextTab.dataset.projectTarget);
                nextTab.focus();
            };

            tabs.forEach((tab, index) => {
                tab.addEventListener('click', () => {
                    activate(tab.dataset.projectTarget);
                });

                tab.addEventListener('keydown', (event) => {
                    switch (event.key) {
                        case 'ArrowUp':
                        case 'ArrowLeft':
                            event.preventDefault();
                            focusByOffset(index, -1);
                            break;
                        case 'ArrowDown':
                        case 'ArrowRight':
                            event.preventDefault();
                            focusByOffset(index, 1);
                            break;
                        case 'Home':
                            event.preventDefault();
                            activate(tabs[0].dataset.projectTarget);
                            tabs[0].focus();
                            break;
                        case 'End':
                            event.preventDefault();
                            activate(tabs[tabs.length - 1].dataset.projectTarget);
                            tabs[tabs.length - 1].focus();
                            break;
                        default:
                            break;
                    }
                });
            });

            panels.forEach(setupDetailTabs);

            const initialTab = tabs.find((tab) => tab.classList.contains('is-active')) ?? tabs[0];
            if (initialTab) {
                activate(initialTab.dataset.projectTarget);
            }
        })();
    </script>
}

@functions
{
    private sealed record StageSummary(string LastCompleted, string Current);

    private static int CountPendingStages(Project project)
    {
        if (project.ProjectStages is not { Count: > 0 })
        {
            return 0;
        }

        return project.ProjectStages.Count(stage => stage.Status is StageStatus.InProgress or StageStatus.Blocked or StageStatus.NotStarted);
    }

    private static string? FormatTotStatusShort(Project project)
    {
        if (project.Tot is not { } tot)
        {
            return null;
        }

        return tot.Status switch
        {
            ProjectTotStatus.NotRequired => "ToT not required",
            ProjectTotStatus.NotStarted => "ToT not started",
            ProjectTotStatus.InProgress => "ToT in progress",
            ProjectTotStatus.Completed => "ToT completed",
            _ => null
        };
    }

    private static string FormatLifecycleStatus(ProjectLifecycleStatus status)
    {
        return status switch
        {
            ProjectLifecycleStatus.Active => "Active",
            ProjectLifecycleStatus.Completed => "Completed",
            ProjectLifecycleStatus.Cancelled => "Cancelled",
            _ => status.ToString()
        };
    }

    private static string FormatTotStatus(ProjectTotStatus status)
    {
        return status switch
        {
            ProjectTotStatus.NotRequired => "ToT not required",
            ProjectTotStatus.NotStarted => "ToT not started",
            ProjectTotStatus.InProgress => "ToT in progress",
            ProjectTotStatus.Completed => "ToT completed",
            _ => status.ToString()
        };
    }

    private static StageSummary BuildStageSummary(Project project)
    {
        if (project.ProjectStages is not { Count: > 0 })
        {
            return new StageSummary("No completed stages yet", "Stages not scheduled");
        }

        var ordered = project.ProjectStages
            .OrderBy(s => s.SortOrder)
            .ThenBy(s => s.Id)
            .ToList();

        static bool ComesAfter(ProjectStage candidate, ProjectStage reference)
        {
            if (candidate.SortOrder != reference.SortOrder)
            {
                return candidate.SortOrder > reference.SortOrder;
            }

            return candidate.Id > reference.Id;
        }

        static bool IsNotStarted(ProjectStage stage)
        {
            return stage.Status == StageStatus.NotStarted
                || !System.Enum.IsDefined(typeof(StageStatus), stage.Status);
        }

        static bool IsCompleted(ProjectStage stage) => stage.Status == StageStatus.Completed;

        static bool IsSkipped(ProjectStage stage) => stage.Status == StageStatus.Skipped;

        static bool IsFinished(ProjectStage stage) => IsCompleted(stage) || IsSkipped(stage);

        var lastCompleted = ordered
            .Where(IsCompleted)
            .OrderByDescending(s => s.SortOrder)
            .ThenByDescending(s => s.CompletedOn ?? DateOnly.MinValue)
            .ThenByDescending(s => s.Id)
            .FirstOrDefault();

        var current = ordered.FirstOrDefault(s => s.Status == StageStatus.InProgress)
            ?? ordered.FirstOrDefault(s => s.Status == StageStatus.Blocked);

        if (current is null && lastCompleted is not null)
        {
            current = ordered
                .Where(s => ComesAfter(s, lastCompleted))
                .FirstOrDefault(IsNotStarted)
                ?? ordered
                    .Where(s => ComesAfter(s, lastCompleted))
                    .FirstOrDefault(IsSkipped);
        }

        current ??= ordered.FirstOrDefault(IsNotStarted)
            ?? ordered.FirstOrDefault(IsSkipped);

        var paymentStage = ordered
            .FirstOrDefault(stage => string.Equals(stage.StageCode, StageCodes.PAYMENT, StringComparison.OrdinalIgnoreCase));
        var paymentCompleted = paymentStage?.Status == StageStatus.Completed;

        var allStagesCompleted = ordered.All(IsFinished) && paymentCompleted;

        current ??= lastCompleted ?? ordered.Last();

        return new StageSummary(
            FormatLastCompletedStage(lastCompleted),
            allStagesCompleted ? "All stages completed" : FormatCurrentStage(current));
    }

    private static string FormatLastCompletedStage(ProjectStage? stage)
    {
        if (stage is null)
        {
            return "No completed stages yet";
        }

        var name = StageCodes.DisplayNameOf(stage.StageCode);
        return stage.CompletedOn is { } completed
            ? $"{name} â€” {completed:dd MMM yyyy}"
            : $"{name} â€” Date not recorded";
    }

    private static string FormatCurrentStage(ProjectStage? stage)
    {
        if (stage is null)
        {
            return "Stages not scheduled";
        }

        var name = StageCodes.DisplayNameOf(stage.StageCode);
        return stage.Status switch
        {
            StageStatus.InProgress => $"{name} â€” In progress",
            StageStatus.NotStarted => $"{name} â€” Not started",
            StageStatus.Completed => $"{name} â€” Completed",
            StageStatus.Blocked => $"{name} â€” Blocked",
            StageStatus.Skipped => $"{name} â€” Skipped",
            _ => $"{name} â€” Not started"
        };
    }

    private static string FormatTotDetail(Project project)
    {
        if (project.Tot is not { } tot)
        {
            return "ToT details not recorded";
        }

        return tot.Status switch
        {
            ProjectTotStatus.Completed when tot.CompletedOn is { } completed => $"ToT completed on {completed:dd MMM yyyy}",
            ProjectTotStatus.Completed => "ToT completed (date not recorded)",
            ProjectTotStatus.InProgress when tot.StartedOn is { } started => $"ToT in progress since {started:dd MMM yyyy}",
            ProjectTotStatus.InProgress => "ToT in progress",
            ProjectTotStatus.NotStarted => "ToT not started",
            ProjectTotStatus.NotRequired => "ToT not required",
            _ => FormatTotStatus(tot.Status)
        };
    }
}
