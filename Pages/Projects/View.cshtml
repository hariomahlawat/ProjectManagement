@page "{id:int}"
@model ProjectManagement.Pages.Projects.ViewModel
@using ProjectManagement.Models.Execution
@{ 
    ViewData["Title"] = Model.Item.Name; 
    var ragClass = Model.ProjectRag switch 
    { 
        ProjectRagStatus.Red => "badge bg-danger", 
        ProjectRagStatus.Amber => "badge bg-warning text-dark", 
        _ => "badge bg-success" 
    }; 
    var canDraftPlan = User.IsInRole("Project Officer") || User.IsInRole("HoD") || User.IsInRole("Admin");
    var canReviewPlan = User.IsInRole("HoD") || User.IsInRole("Admin");
    var canAccessStages = User.IsInRole("Project Officer") || User.IsInRole("HoD") || User.IsInRole("Admin") || User.IsInRole("MCO") || User.IsInRole("Comdt");
    var planPermissionHint = "Requires Project Officer, HoD, or Admin rights.";
    var reviewPermissionHint = "Requires HoD or Admin rights.";
    var stagePermissionHint = "Requires Project Officer, HoD, Admin, MCO, or Comdt rights.";
} 
@if (!string.IsNullOrWhiteSpace(Model.StatusMessage))
{
  <div class="alert alert-success" role="alert">
    @Model.StatusMessage
  </div>
}

<div class="card shadow-sm mb-3">
  <div class="card-body">
    <div class="d-flex flex-column flex-lg-row justify-content-between align-items-lg-start gap-3">
      <div>
        <h2 class="mb-1">@Model.Item.Name</h2>
        <div class="text-muted">Created @Model.Item.CreatedAt.ToLocalTime()</div>
      </div>
      <div class="btn-toolbar" role="toolbar" aria-label="Project actions">
        <div class="btn-group btn-group-sm" role="group">
          <a asp-page="Index" class="btn btn-outline-secondary" title="Back to projects">Back</a>
          <a class="btn btn-outline-dark" asp-page="/Projects/Activity" asp-route-id="@Model.Item.Id" title="Comments &amp; files">Activity</a>
        </div>
        <div class="btn-group btn-group-sm ms-2" role="group">
          @if (!Model.HasApprovedPlan)
          {
              if (canDraftPlan)
              {
                  <a class="btn btn-outline-primary" asp-page="/Projects/Plan/Draft" asp-route-id="@Model.Item.Id" title="Draft or submit Project Timeline">Plan</a>
              }
              else
              {
                  <span class="btn btn-outline-secondary disabled" role="button" aria-disabled="true" title="@planPermissionHint">Plan</span>
              }

              if (Model.IsPlanPendingApproval)
              {
                  if (canReviewPlan)
                  {
                      <a class="btn btn-primary" asp-page="/Projects/Plan/Review" asp-route-id="@Model.Item.Id" title="Review and approve">Review</a>
                  }
                  else
                  {
                      <span class="btn btn-outline-secondary disabled" role="button" aria-disabled="true" title="@reviewPermissionHint">Review</span>
                  }
              }
          }
          else
          {
              if (canAccessStages)
              {
                  <a class="btn btn-outline-success" asp-page="/Projects/Stages" asp-route-id="@Model.Item.Id" title="Execution stages">Stages</a>
              }
              else
              {
                  <span class="btn btn-outline-secondary disabled" role="button" aria-disabled="true" title="@stagePermissionHint">Stages</span>
              }
          }
        </div>
      </div>
    </div>

    @if (Model.HasApprovedPlan)
    {
      <div class="alert alert-success mt-3 mb-0" role="status">
        <strong>Project Timeline v@(Model.ActivePlanVersionNo) approved.</strong>
        <span class="ms-2">Next due: <span class="badge bg-secondary">@Model.NextDueText</span></span>
      </div>
    }
    else if (Model.IsPlanPendingApproval)
    {
      <div class="alert alert-warning mt-3 mb-0" role="status">
        <strong>Plan submitted.</strong> Awaiting HoD approval.
      </div>
    }
    else
    {
      <div class="alert alert-info mt-3 mb-0" role="status">
        No approved plan yet. Create a Project Timeline to start execution.
      </div>
    }
  </div>
</div>

<div class="card shadow-sm mb-3">
  <div class="card-body">
    <div class="d-flex flex-column flex-lg-row gap-3 align-items-lg-center">
      <div>
        <span class="@ragClass">Project RAG: @Model.ProjectRag</span>
      </div>
      <div class="flex-grow-1">
        <div class="fw-semibold mb-1">Slip (days)</div>
        <ul class="list-inline mb-0">
          @foreach (var slip in Model.StageSlips)
          {
            <li class="list-inline-item mb-1">
              <span class="badge bg-light text-dark border">@slip.Code: @slip.SlipDays</span>
            </li>
          }
        </ul>
      </div>
    </div>
  </div>
</div>

<div class="card shadow-sm">
  <div class="card-body">
    <dl class="row mb-0">
      <dt class="col-sm-3">Description</dt>
      <dd class="col-sm-9">@Model.Item.Description</dd>

      <dt class="col-sm-3">Head of Department</dt>
      <dd class="col-sm-9">@Model.Item.Hod</dd>

      <dt class="col-sm-3">Lead Project Officer</dt>
      <dd class="col-sm-9">@Model.Item.Po</dd>
    </dl>
  </div>
</div>

<section class="mt-4">
  <div class="d-flex justify-content-between align-items-center mb-2">
    <h3 class="h5 mb-0">Recent activity</h3>
    <a class="btn btn-sm btn-outline-secondary" asp-page="/Projects/Activity" asp-route-id="@Model.Item.Id" title="Open full activity">See all</a>
  </div>
  @if (Model.RecentActivity.Any())
  {
    <div class="list-group list-group-flush border rounded shadow-sm">
      @foreach (var entry in Model.RecentActivity)
      {
        <div class="list-group-item">
          <div class="d-flex flex-wrap align-items-center gap-2">
            <span class="badge bg-secondary">@entry.Type</span>
            @if (!string.IsNullOrEmpty(entry.StageLabel))
            {
              <span class="badge bg-light text-dark border">@entry.StageLabel</span>
            }
            <span class="ms-auto text-muted small">@entry.CreatedOn.ToLocalTime().ToString("dd MMM yyyy HH:mm")</span>
          </div>
          <div class="fw-semibold mt-2">@entry.AuthorName</div>
          <p class="mb-2 text-muted">@entry.BodyPreview</p>
          <div class="d-flex justify-content-end">
            <a class="btn btn-sm btn-outline-primary" asp-page="/Projects/Activity" asp-route-id="@Model.Item.Id" asp-route-StageId="@(entry.StageId)" title="View in activity">Open activity</a>
          </div>
        </div>
      }
    </div>
  }
  else
  {
    <p class="text-muted">No remarks yet.</p>
  }
</section>
