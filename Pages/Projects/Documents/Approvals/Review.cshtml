@page
@model ProjectManagement.Pages.Projects.Documents.Approvals.ReviewModel
@{
    ViewData["Title"] ??= $"Review document request – {Model.Project.Name}";

    System.Func<long?, string> formatFileSize = bytes =>
    {
        if (!bytes.HasValue || bytes.Value <= 0)
        {
            return "—";
        }

        double size = bytes.Value;
        string[] units = { "bytes", "KB", "MB", "GB", "TB" };
        var unitIndex = 0;
        while (size >= 1024 && unitIndex < units.Length - 1)
        {
            size /= 1024;
            unitIndex++;
        }

        return unitIndex == 0
            ? string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:0} {1}", size, units[unitIndex])
            : string.Format(System.Globalization.CultureInfo.InvariantCulture, "{0:0.##} {1}", size, units[unitIndex]);
    };

    string approveButtonLabel = Model.RequestDetail.RequestType switch
    {
        ProjectManagement.Models.ProjectDocumentRequestType.Upload => "Approve & publish",
        ProjectManagement.Models.ProjectDocumentRequestType.Replace => "Approve & overwrite",
        ProjectManagement.Models.ProjectDocumentRequestType.Delete => "Approve removal",
        _ => "Approve"
    };
}

<div class="row gy-4">
    <div class="col-12">
        <a class="btn btn-link px-0" asp-page="./Index" asp-route-id="@Model.Project.Id">&larr; Back to approvals</a>
        <h1 class="h2 mt-2">Review document request</h1>
        <p class="text-muted">Moderate pending document changes for <strong>@Model.Project.Name</strong>.</p>
    </div>

    <div class="col-lg-7">
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-body">
                <div class="d-flex flex-wrap gap-2 align-items-center mb-3">
                    <span class="badge text-bg-primary">@Model.RequestDetail.Stage</span>
                    @if (!string.IsNullOrWhiteSpace(Model.RequestDetail.StageCode))
                    {
                        <span class="badge text-bg-light text-muted">@Model.RequestDetail.StageCode</span>
                    }
                    <span class="badge text-bg-secondary">@Model.RequestDetail.Action</span>
                </div>

                <dl class="row mb-0">
                    <dt class="col-sm-4">Nomenclature</dt>
                    <dd class="col-sm-8">@Model.RequestDetail.Title</dd>

                    <dt class="col-sm-4">Requested by</dt>
                    <dd class="col-sm-8">@Model.RequestDetail.RequestedBy</dd>

                    <dt class="col-sm-4">Requested on</dt>
                    <dd class="col-sm-8">@Model.RequestDetail.RequestedAtLocal.ToString("dd MMM yyyy, h:mm tt", System.Globalization.CultureInfo.InvariantCulture) IST</dd>

                    <dt class="col-sm-4">Original filename</dt>
                    <dd class="col-sm-8">@(!string.IsNullOrWhiteSpace(Model.RequestDetail.OriginalFileName) ? Model.RequestDetail.OriginalFileName : "—")</dd>

                    <dt class="col-sm-4">File size</dt>
                    <dd class="col-sm-8">@formatFileSize(Model.RequestDetail.FileSize)</dd>

                    <dt class="col-sm-4">Content type</dt>
                    <dd class="col-sm-8">@(!string.IsNullOrWhiteSpace(Model.RequestDetail.ContentType) ? Model.RequestDetail.ContentType : "—")</dd>

                    @if (!string.IsNullOrWhiteSpace(Model.RequestDetail.Description))
                    {
                        <dt class="col-sm-4">Submitter note</dt>
                        <dd class="col-sm-8">@Model.RequestDetail.Description</dd>
                    }
                </dl>
            </div>
        </div>

        @if (Model.RequestDetail.Document is not null)
        {
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body">
                    <h2 class="h6 text-uppercase text-muted mb-3">Current document</h2>
                    <dl class="row mb-0">
                        <dt class="col-sm-4">Title</dt>
                        <dd class="col-sm-8">@Model.RequestDetail.Document.Title</dd>

                        <dt class="col-sm-4">Filename</dt>
                        <dd class="col-sm-8">@Model.RequestDetail.Document.OriginalFileName</dd>

                        <dt class="col-sm-4">File size</dt>
                        <dd class="col-sm-8">@formatFileSize(Model.RequestDetail.Document.FileSize)</dd>

                        <dt class="col-sm-4">File stamp</dt>
                        <dd class="col-sm-8">@Model.RequestDetail.Document.FileStamp</dd>

                        <dt class="col-sm-4">Last uploaded</dt>
                        <dd class="col-sm-8">@Model.RequestDetail.Document.UploadedAtLocal.ToString("dd MMM yyyy, h:mm tt", System.Globalization.CultureInfo.InvariantCulture) IST by @Model.RequestDetail.Document.UploadedBy</dd>

                        @if (Model.RequestDetail.Document.IsArchived)
                        {
                            <dt class="col-sm-4">Status</dt>
                            <dd class="col-sm-8"><span class="badge text-bg-warning">Archived</span></dd>
                        }
                    </dl>
                </div>
            </div>
        }
    </div>

    <div class="col-lg-5">
        <div class="card border-0 shadow-sm">
            <div class="card-body">
                <h2 class="h5 mb-3">Decision</h2>
                <p class="text-muted">Approvals publish the change immediately. Rejections discard staged files.</p>

                <form method="post" novalidate asp-page="./Review" asp-route-id="@Model.Project.Id" asp-route-requestId="@Model.RequestDetail.RequestId">
                    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                    <input type="hidden" asp-for="Input.RequestId" />
                    <input type="hidden" asp-for="Input.RowVersion" />

                    <div class="mb-3">
                        <label asp-for="Input.Note" class="form-label">Decision note</label>
                        <textarea asp-for="Input.Note" class="form-control" rows="4" placeholder="Optional feedback for the requester"></textarea>
                        <span asp-validation-for="Input.Note" class="text-danger"></span>
                    </div>

                    <div class="d-flex flex-wrap gap-2">
                        <button type="submit"
                                class="btn btn-success"
                                asp-page="./Review"
                                asp-page-handler="Approve"
                                asp-route-id="@Model.Project.Id"
                                asp-route-requestId="@Model.RequestDetail.RequestId">
                            @approveButtonLabel
                        </button>
                        <button type="submit"
                                class="btn btn-outline-danger"
                                asp-page="./Review"
                                asp-page-handler="Reject"
                                asp-route-id="@Model.Project.Id"
                                asp-route-requestId="@Model.RequestDetail.RequestId">
                            Reject
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
