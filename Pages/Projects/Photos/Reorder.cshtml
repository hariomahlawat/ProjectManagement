@page "/Projects/{id:int}/Photos/Reorder"
@model ProjectManagement.Pages.Projects.Photos.ReorderModel
@{
    ViewData["Title"] = "Reorder Project Photos";
}

<h1 class="mb-4">Reorder Project Photos</h1>
<p class="text-muted">Set the display order for project photos. Lower numbers appear first.</p>

<form method="post">
    <input asp-for="Input.ProjectId" type="hidden" />
    <input asp-for="Input.RowVersion" type="hidden" />
    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

    @if (!Model.Photos.Any())
    {
        <div class="alert alert-info">No photos available to reorder.</div>
    }
    else
    {
        <p class="text-muted" id="photo-reorder-instructions">Drag and drop the photo cards to update the display order. You can also focus a card and press Space or Enter to pick it up, use the arrow keys to move it, and press Escape to cancel the move. The position numbers are used as a fallback when JavaScript is unavailable.</p>
        <div data-photo-reorder-root>
            <div class="pm-photo-grid" data-photo-reorder role="listbox" aria-label="Project photos in display order" aria-describedby="photo-reorder-instructions" aria-expanded="false">
        @for (var i = 0; i < Model.Input.Items.Count; i++)
        {
            var item = Model.Input.Items[i];
            var photo = Model.Photos.FirstOrDefault(p => p.Id == item.PhotoId);
            var accessibleCaption = !string.IsNullOrWhiteSpace(photo?.Caption)
                ? photo.Caption
                : $"Photo {i + 1} (no caption)";
            <div class="pm-photo-grid-item"
                 data-photo-item
                 data-photo-id="@item.PhotoId"
                 data-photo-caption="@accessibleCaption"
                 tabindex="0"
                 role="option"
                 aria-grabbed="false"
                 aria-label="@($"{accessibleCaption} â€“ position {item.Ordinal}")">
                <div class="pm-photo-frame">
                    <img src="@Url.Page("./View", new { id = Model.Project.Id, photoId = item.PhotoId, size = "sm" })" alt="Photo preview" />
                    @if (photo?.IsCover == true)
                    {
                        <span class="pm-photo-cover-badge">Cover</span>
                    }
                </div>
                <input asp-for="Input.Items[i].PhotoId" type="hidden" />
                <div>
                    <label asp-for="Input.Items[i].Ordinal" class="form-label">Position</label>
                    <input asp-for="Input.Items[i].Ordinal" class="form-control form-control-sm" type="number" min="1" data-photo-ordinal aria-label="@($"Display position for {accessibleCaption}")" />
                    <span asp-validation-for="Input.Items[i].Ordinal" class="text-danger small"></span>
                </div>
                <div class="text-muted small">
                    @if (photo is not null && !string.IsNullOrWhiteSpace(photo.Caption))
                    {
                        <span>@photo.Caption</span>
                    }
                    else
                    {
                        <span>No caption provided.</span>
                    }
                </div>
            </div>
        }
            </div>
            <div class="visually-hidden" role="status" aria-live="polite" data-photo-reorder-status></div>
        </div>

        <button type="submit" class="btn btn-primary mt-3">Save order</button>
    }

    <a asp-page="./Index" asp-route-id="@Model.Project.Id" class="btn btn-link">Cancel</a>
</form>

@section Scripts {
    <script src="~/js/widgets/project-photo-gallery.js" asp-append-version="true"></script>
}
