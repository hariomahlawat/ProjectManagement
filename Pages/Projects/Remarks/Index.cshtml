@page "{projectId:int}"
@model ProjectManagement.Pages.Projects.Remarks.IndexModel
@using System.Text.Json

@{
    var projectName = Model.Project?.Name ?? "Project";
    ViewData["Title"] = $"Remarks - {projectName}";
    var remarksConfigJson = JsonSerializer.Serialize(Model.RemarksPanel, new JsonSerializerOptions(JsonSerializerDefaults.Web));
}

<div class="container-xxl">
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-page="/Projects/Index">Projects</a></li>
            <li class="breadcrumb-item"><a asp-page="/Projects/Overview" asp-route-id="@Model.Project!.Id">Overview</a></li>
            <li class="breadcrumb-item active" aria-current="page">Remarks</li>
        </ol>
    </nav>

    <div class="d-flex flex-column flex-md-row align-items-md-center justify-content-between mb-3 gap-3">
        <div>
            <h1 class="h3 mb-1">@projectName</h1>
            @if (!string.IsNullOrWhiteSpace(Model.Project?.CaseFileNumber))
            {
                <div class="text-muted">Case file: @Model.Project!.CaseFileNumber</div>
            }
        </div>
        <a class="btn btn-outline-secondary" asp-page="/Projects/Overview" asp-route-id="@Model.Project!.Id">Back to overview</a>
    </div>

    <div class="card">
        <div class="card-body">
            <div data-panel-project-id="@Model.Project!.Id">
                <div class="d-flex flex-column gap-3 mb-4">
                    <div class="d-flex flex-wrap align-items-center gap-3 justify-content-between">
                        <div class="pm-card-heading">
                            <span class="pm-card-icon" aria-hidden="true">
                                <i class="bi bi-chat-dots"></i>
                            </span>
                            <div>
                                <h2 class="pm-card-title h5 mb-0">Remarks</h2>
                                <p class="pm-card-subtitle mb-0">Review the full remark history for this project.</p>
                            </div>
                        </div>
                        <div class="d-flex flex-column flex-lg-row gap-2 w-100 align-items-lg-center justify-content-lg-end">
                            <div class="d-flex flex-wrap gap-2 justify-content-between justify-content-lg-end w-100" role="toolbar" aria-label="Filter remarks">
                                @if (Model.RemarksPanel.ScopeOptions.Count > 1)
                                {
                                    <div class="btn-group btn-group-sm pm-remarks-filter" role="group" aria-label="Filter remarks by scope" data-remarks-scope-group>
                                        <button type="button" class="btn btn-outline-primary active" data-remarks-scope="all" aria-pressed="true">All scopes</button>
                                        @foreach (var scope in Model.RemarksPanel.ScopeOptions)
                                        {
                                            <button type="button" class="btn btn-outline-primary" data-remarks-scope="@scope.Canonical" aria-pressed="false">@scope.Label</button>
                                        }
                                    </div>
                                }
                                <div class="btn-group btn-group-sm pm-remarks-filter" role="group" aria-label="Filter remarks by type" data-remarks-type-group>
                                    <button type="button" class="btn btn-outline-primary active" data-remarks-type="all" aria-pressed="true">All</button>
                                    <button type="button" class="btn btn-outline-primary" data-remarks-type="Internal" aria-pressed="false">Internal</button>
                                    <button type="button" class="btn btn-outline-primary" data-remarks-type="External" aria-pressed="false">External</button>
                                </div>
                                <div class="btn-group btn-group-sm pm-remarks-filter" role="group" aria-label="Filter remarks by time" data-remarks-time-group>
                                    <button type="button" class="btn btn-outline-primary active" data-remarks-time="all" aria-pressed="true">All</button>
                                    <button type="button" class="btn btn-outline-primary" data-remarks-time="last-month" aria-pressed="false">Last month</button>
                                </div>
                            </div>
                            @if (Model.RemarksPanel.ShowDeletedToggle)
                            {
                                <div class="form-check form-switch mt-1 mt-lg-0 align-self-start align-self-lg-end">
                                    <input class="form-check-input" type="checkbox" role="switch" id="remarks-include-deleted" data-remarks-include-deleted>
                                    <label class="form-check-label" for="remarks-include-deleted">Show deleted</label>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="remarks-panel" data-remarks-panel data-config='@remarksConfigJson' data-initial-page="@Model.InitialPage">
                    @if (Model.RemarksPanel.ShowComposer)
                    {
                        <form class="remarks-composer" data-remarks-composer>
                            @Html.AntiForgeryToken()
                            <div class="d-flex flex-column gap-3">
                                <div>
                                    <label for="remark-body" class="form-label fw-semibold mb-1">Add a remark</label>
                                    <textarea id="remark-body" class="form-control" rows="3" maxlength="4000" data-remarks-body required></textarea>
                                    <div class="form-text">Maximum 4000 characters.</div>
                                    @if (!string.IsNullOrWhiteSpace(Model.RemarksPanel.ActorDisplayName))
                                    {
                                        <div class="small text-muted mt-1">Posting as @Model.RemarksPanel.ActorDisplayName</div>
                                    }
                                </div>
                                <div class="remarks-composer-options d-flex flex-wrap align-items-center gap-2">
                                    @if (Model.RemarksPanel.ScopeOptions.Count > 1)
                                    {
                                        <div class="btn-group btn-group-sm" role="group" aria-label="Remark scope" data-remarks-composer-scope>
                                            @foreach (var scope in Model.RemarksPanel.ScopeOptions)
                                            {
                                                var isDefaultScope = string.Equals(scope.Canonical, Model.RemarksPanel.DefaultScope, StringComparison.OrdinalIgnoreCase);
                                                <button type="button" class="btn btn-outline-secondary@(isDefaultScope ? " active" : string.Empty)" data-remarks-composer-scope-option="@scope.Canonical" aria-pressed="@(isDefaultScope ? "true" : "false")">@scope.Label</button>
                                            }
                                        </div>
                                    }
                                    <div class="btn-group btn-group-sm" role="group" aria-label="Remark audience" data-remarks-composer-type>
                                        <button type="button" class="btn btn-outline-secondary active" data-remarks-composer-option="Internal" aria-pressed="true">Internal</button>
                                        @if (Model.RemarksPanel.AllowExternal)
                                        {
                                            <button type="button" class="btn btn-outline-secondary" data-remarks-composer-option="External" aria-pressed="false">External</button>
                                        }
                                    </div>
                                    <div class="remarks-composer-external d-flex flex-wrap align-items-end gap-2 d-none" data-remarks-external-fields>
                                        <div>
                                            <label for="remark-event-date" class="form-label mb-1 small">Event date</label>
                                            <input type="date" id="remark-event-date" class="form-control form-control-sm" data-remarks-event-date value="@Model.RemarksPanel.Today" max="@Model.RemarksPanel.Today" />
                                        </div>
                                        <div>
                                            <label for="remark-stage" class="form-label mb-1 small">Stage <span class="text-muted">(optional)</span></label>
                                            <select id="remark-stage" class="form-select form-select-sm" data-remarks-stage>
                                                <option value="">Not linked</option>
                                                @foreach (var stage in Model.RemarksPanel.StageOptions)
                                                {
                                                    <option value="@stage.Value">@stage.Label</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="d-flex flex-column flex-sm-row gap-2 align-items-sm-center justify-content-between">
                                    <div class="small" data-remarks-feedback></div>
                                    <div class="d-flex gap-2 ms-sm-auto">
                                        <button type="reset" class="btn btn-sm btn-outline-secondary" data-remarks-reset>Clear</button>
                                        <button type="submit" class="btn btn-primary btn-sm" data-remarks-submit>Post remark</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="alert alert-info border-info-subtle bg-info-subtle text-dark" role="status">
                            Remarks can only be posted by the assigned project team and leadership.
                        </div>
                    }

                    <div class="remarks-list" data-remarks-list>
                        <div class="text-muted" data-remarks-empty>Loading remarks…</div>
                        <div class="vstack gap-3" data-remarks-items></div>
                    </div>
                    <nav class="d-flex justify-content-center mt-3" aria-label="Remarks pagination" data-remarks-pagination></nav>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/projects/remarks-panel.js" asp-append-version="true"></script>
    <script src="~/js/projects/remarks-index.js" asp-append-version="true"></script>
}
