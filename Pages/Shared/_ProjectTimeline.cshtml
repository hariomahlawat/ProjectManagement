@model ProjectManagement.ViewModels.TimelineVm
@using System.Globalization
@using ProjectManagement.Models.Execution
@functions{
    string D(DateOnly? d) => d.HasValue ? d.Value.ToString("dd MMM yyyy", CultureInfo.CurrentCulture) : "—";
    string StatusChip(StageStatus s) =>
        s switch {
            StageStatus.Completed  => "badge bg-success",
            StageStatus.InProgress => "badge bg-primary",
            _                      => "badge bg-secondary"
        };
}
<link rel="stylesheet" href="~/css/projects/timeline.css" />

<div class="pm-timeline-grid">
  <div class="pm-rail" aria-hidden="true">
    <div class="pm-rail-line"></div>
  </div>
  <div class="pm-items">
    @foreach (var s in Model.Items.OrderBy(i => i.SortOrder))
    {
      var itemClass = s.Status switch
      {
        StageStatus.Completed  => "pm-item is-complete",
        StageStatus.InProgress => "pm-item is-active",
        _                      => "pm-item"
      };
      <div class="@itemClass">
        <div class="pm-item-header">
          <span class="pm-item-title">@s.Name</span>
          <span class="@StatusChip(s.Status)">@s.Status</span>
          @if (s.IsAutoCompleted)
          {
            <span class="badge bg-warning-subtle text-warning border border-warning-subtle" title="Auto-completed when a later stage was completed.">inferred</span>
          }
          @if (s.RequiresBackfill)
          {
            <span class="ms-2 text-warning" title="Additional data required">⚠︎</span>
            <a class="ms-1 small" asp-page="/Projects/Procurement/Edit" asp-route-id="@Model.ProjectId">Backfill…</a>
          }
        </div>
        <div class="pm-item-meta">
          <div>Planned: @D(s.PlannedStart) — @D(s.PlannedEnd)</div>
          <div>Actual: @D(s.ActualStart) — @D(s.CompletedOn)
            @if (s.ActualDurationDays.HasValue)
            {
              <span class="text-muted ms-2">(@s.ActualDurationDays d)</span>
            }
          </div>
        </div>
      </div>
    }
  </div>
</div>
