@using ProjectManagement.Services
@using ProjectManagement.Models
@model ProjectManagement.Services.TodoWidgetResult

<div class="card shadow-sm">
  <div class="card-header d-flex align-items-center justify-content-between py-2">
    <strong>My Tasks</strong>
    <div class="d-flex align-items-center gap-2 small">
      @if (Model?.OverdueCount > 0) { <span class="badge bg-warning text-dark" title="Overdue">@Model.OverdueCount</span> }
      @if (Model?.TodayCount > 0)   { <span class="badge bg-info text-dark" title="Due today">@Model.TodayCount</span> }
      <a asp-page="/Tasks/Index" class="text-decoration-none">View all</a>
    </div>
  </div>

  <div class="card-body">
    <form method="post" asp-page="/Dashboard/Index" asp-page-handler="Add" class="mb-2">
      @Html.AntiForgeryToken()
      <div class="input-group input-group-sm">
        <input name="NewTitle" class="form-control" placeholder="Add a taskâ€¦" maxlength="160" required />
        <button class="btn btn-primary">Add</button>
      </div>
    </form>

    @if (Model is null || Model.Items.Count == 0)
    {
      <div class="text-muted small">No open tasks. You are all caught up.</div>
    }
    else
    {
      <ul class="list-group list-group-flush" style="max-height: 340px; overflow:auto;">
        @{
          var ist = TimeZoneInfo.FindSystemTimeZoneById("Asia/Kolkata");
          var todayIst = TimeZoneInfo.ConvertTime(DateTimeOffset.UtcNow, ist).Date;
        }
        @foreach (var t in Model.Items)
        {
          var badge = "";
          if (t.DueAtUtc.HasValue)
          {
            var dueDate = TimeZoneInfo.ConvertTime(t.DueAtUtc.Value, ist).Date;
            if      (dueDate <  todayIst) badge = "Overdue";
            else if (dueDate == todayIst) badge = "Today";
            else if (dueDate == todayIst.AddDays(1)) badge = "Tomorrow";
          }

          string prioClass = t.Priority switch
          {
            TodoPriority.Low    => "todo-dot-low",
            TodoPriority.High   => "todo-dot-high",
            _                   => "todo-dot-normal"
          };

          <li class="list-group-item d-flex align-items-center justify-content-between py-2">
            <div class="d-flex align-items-center gap-2">
              <form method="post" asp-page="/Dashboard/Index" asp-page-handler="Toggle" class="m-0 p-0">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@t.Id" />
                <input class="form-check-input" type="checkbox" title="Mark done" onchange="this.form.submit()" />
              </form>
              <span class="todo-dot @prioClass" title="@t.Priority"></span>
              <span>@t.Title</span>
              @if (!string.IsNullOrEmpty(badge))
              {
                <span class="badge rounded-pill bg-light text-dark border">@badge</span>
              }
            </div>

            <div class="d-flex align-items-center gap-1">
              <form method="post" asp-page="/Dashboard/Index" asp-page-handler="Pin" class="m-0 p-0">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@t.Id" />
                <input type="hidden" name="pin" value="@(!t.IsPinned)" />
                <button class="btn btn-link btn-sm text-decoration-none" title="@(t.IsPinned ? "Unpin" : "Pin")">
                  <i class="bi @(t.IsPinned ? "bi-pin-angle-fill" : "bi-pin-angle")"></i>
                </button>
              </form>

              <form method="post" asp-page="/Dashboard/Index" asp-page-handler="Delete" class="m-0 p-0" onsubmit="return confirm('Delete this task?');">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@t.Id" />
                <button class="btn btn-link btn-sm text-danger text-decoration-none" title="Delete">
                  <i class="bi bi-trash"></i>
                </button>
              </form>
            </div>
          </li>
        }
      </ul>
    }
  </div>
</div>

