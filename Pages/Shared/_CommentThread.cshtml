@using System.Collections.Generic
@using System.Linq
@using Microsoft.AspNetCore.Routing
@model IEnumerable<ProjectManagement.Pages.Projects.CommentDisplayModel>
@{
    var showStage = (bool?)(ViewData["ShowStage"] ?? false) ?? false;
    var pageName = ViewData["CommentsPage"]?.ToString() ?? string.Empty;
    var projectId = (int?)(ViewData["ProjectId"] ?? 0) ?? 0;
    var routeValues = ViewData["RouteValues"] as IDictionary<string, object?> ?? new Dictionary<string, object?>();
    var replyParam = ViewData["ReplyParam"]?.ToString() ?? "parentId";
    var editParam = ViewData["EditParam"]?.ToString() ?? "editId";
    var deleteHandler = ViewData["DeleteHandler"]?.ToString() ?? "DeleteComment";
    var downloadHandler = ViewData["DownloadHandler"]?.ToString() ?? "DownloadAttachment";
    var baseRoute = new RouteValueDictionary(routeValues)
    {
        ["id"] = projectId
    };
    Func<string?, object?, RouteValueDictionary> withRoute = (key, value) =>
    {
        var dict = new RouteValueDictionary(baseRoute);
        if (!string.IsNullOrEmpty(key))
        {
            dict[key!] = value;
        }
        return dict;
    };
}

@if (!Model.Any())
{
    <p class="text-muted">No remarks yet.</p>
}
else
{
    <div class="vstack gap-3">
        @foreach (var comment in Model)
        {
            <article class="border rounded p-3 bg-white">
                <div class="d-flex justify-content-between align-items-start gap-2">
                    <div>
                        <div class="d-flex align-items-center gap-2">
                            <span class="badge bg-secondary">@comment.Type</span>
                            @if (comment.Pinned)
                            {
                                <span class="badge bg-warning text-dark"><i class="bi bi-pin-angle"></i> Pinned</span>
                            }
                            <span class="text-muted small">@comment.CreatedOn.ToString("dd MMM yyyy HH:mm")</span>
                        </div>
                        <div class="fw-semibold">@comment.AuthorName</div>
                        @if (showStage && !string.IsNullOrEmpty(comment.StageCode))
                        {
                            <div class="text-muted small">Stage: @comment.StageCode (@comment.StageName)</div>
                        }
                        <p class="mt-2 mb-0">@comment.Body</p>
                        @if (comment.EditedOn.HasValue)
                        {
                            <div class="text-muted small">Edited @comment.EditedOn.Value.ToString("dd MMM yyyy HH:mm")</div>
                        }
                        @if (comment.Attachments.Any())
                        {
                            <ul class="list-unstyled mt-2 mb-0 small">
                                @foreach (var attachment in comment.Attachments)
                                {
                                    @{ var downloadRoute = withRoute(null, null); downloadRoute["commentId"] = comment.Id; downloadRoute["attachmentId"] = attachment.Id; }
                                    <li>
                                        <a asp-page="@pageName" asp-page-handler="@downloadHandler" asp-all-route-data="@(downloadRoute)">
                                            <i class="bi bi-paperclip"></i> @attachment.FileName (@(System.Math.Max(1, attachment.SizeBytes / 1024)) KB)
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                    </div>
                    <div class="d-flex flex-column align-items-end gap-2">
                        @if (comment.CanReply)
                        {
                            @{ var replyRoute = withRoute(replyParam, comment.Id); }
                            <a class="btn btn-sm btn-outline-primary" asp-page="@pageName" asp-all-route-data="@(replyRoute)">Reply</a>
                        }
                        @if (comment.CanEdit)
                        {
                            @{ var editRoute = withRoute(editParam, comment.Id); var deleteRoute = withRoute(null, null); deleteRoute["commentId"] = comment.Id; }
                            <a class="btn btn-sm btn-outline-secondary" asp-page="@pageName" asp-all-route-data="@(editRoute)">Edit</a>
                            <form method="post" asp-page="@pageName" asp-page-handler="@deleteHandler" asp-all-route-data="@(deleteRoute)" data-confirm="Delete this remark?">
                                <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                            </form>
                        }
                    </div>
                </div>

                @if (comment.Replies.Any())
                {
                    <div class="mt-3 ms-3 ps-3 border-start border-2">
                        @foreach (var reply in comment.Replies)
                        {
                            @{ var replyEditRoute = withRoute(editParam, reply.Id); var replyDeleteRoute = withRoute(null, null); replyDeleteRoute["commentId"] = reply.Id; }
                            <div class="mb-3">
                                <div class="d-flex justify-content-between align-items-start gap-2">
                                    <div>
                                        <div class="d-flex align-items-center gap-2">
                                            <span class="badge bg-light text-dark border">@reply.Type</span>
                                            <span class="text-muted small">@reply.CreatedOn.ToString("dd MMM yyyy HH:mm")</span>
                                        </div>
                                        <div class="fw-semibold">@reply.AuthorName</div>
                                        <p class="mt-2 mb-0">@reply.Body</p>
                                        @if (reply.EditedOn.HasValue)
                                        {
                                            <div class="text-muted small">Edited @reply.EditedOn.Value.ToString("dd MMM yyyy HH:mm")</div>
                                        }
                                        @if (reply.Attachments.Any())
                                        {
                                            <ul class="list-unstyled mt-2 mb-0 small">
                                                @foreach (var attachment in reply.Attachments)
                                                {
                                                    @{ var replyDownloadRoute = withRoute(null, null); replyDownloadRoute["commentId"] = reply.Id; replyDownloadRoute["attachmentId"] = attachment.Id; }
                                                    <li>
                                                        <a asp-page="@pageName" asp-page-handler="@downloadHandler" asp-all-route-data="@(replyDownloadRoute)">
                                                            <i class="bi bi-paperclip"></i> @attachment.FileName (@(System.Math.Max(1, attachment.SizeBytes / 1024)) KB)
                                                        </a>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </div>
                                    @if (reply.CanEdit)
                                    {
                                        <div class="d-flex flex-column gap-2">
                                            <a class="btn btn-sm btn-outline-secondary" asp-page="@pageName" asp-all-route-data="@(replyEditRoute)">Edit</a>
                                            <form method="post" asp-page="@pageName" asp-page-handler="@deleteHandler" asp-all-route-data="@(replyDeleteRoute)" data-confirm="Delete this remark?">
                                                <button type="submit" class="btn btn-sm btn-outline-danger">Delete</button>
                                            </form>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </article>
        }
    </div>
}
