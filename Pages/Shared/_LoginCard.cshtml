@using Microsoft.AspNetCore.Antiforgery  
@inject IAntiforgery Antiforgery  
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor  

<div class="pm-login-card shadow-sm bg-white rounded-4 p-4">  
    <h3 class="h5 fw-bold mb-3 text-center">Sign in</h3>  
    <form method="post"  
          asp-area="Identity"  
          asp-page="/Account/Login"  
          asp-route-returnUrl="/Dashboard/Index"  
          class="needs-validation" novalidate>  
          <input name="__RequestVerificationToken"
                 type="hidden"
                 value="@Antiforgery.GetTokens(HttpContextAccessor.HttpContext!).RequestToken" />
        <div class="mb-3">
            <label for="lpUserName" class="form-label">Username</label>
            <input id="lpUserName" name="Input.UserName" type="text" class="form-control" autocomplete="username" required />
            <div class="invalid-feedback">Username is required.</div>
        </div>
        <div class="mb-3">  
            <label for="lpPassword" class="form-label">Password</label>  
            <input id="lpPassword" name="Input.Password" type="password" class="form-control" autocomplete="current-password" required />  
            <div class="invalid-feedback">Password is required.</div>  
        </div>  
        <div class="d-flex justify-content-between align-items-center mb-3">  
            <div class="form-check">  
                <input class="form-check-input" type="checkbox" value="true" id="rememberMe" name="Input.RememberMe" />  
                <label class="form-check-label" for="rememberMe">Remember me</label>  
            </div>  
            <a class="small" asp-area="Identity" asp-page="/Account/ForgotPassword">Forgot password</a>  
        </div>  
        <button type="submit" class="btn btn-primary w-100">Sign in</button>
        <div class="text-center mt-3 small">
            Contact your administrator for access.
        </div>
    </form>
</div>

@section Scripts {  
    <script>  
        // Simple client-side validation hinting  
        (() => {  
          'use strict';  
          const forms = document.querySelectorAll('.needs-validation');  
          Array.from(forms).forEach(form => {  
            form.addEventListener('submit', event => {  
              if (!form.checkValidity()) {  
                event.preventDefault(); event.stopPropagation();  
              }  
              form.classList.add('was-validated');  
            }, false);  
          });  
        })();  
    </script>  
}
